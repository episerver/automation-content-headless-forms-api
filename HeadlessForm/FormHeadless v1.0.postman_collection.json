{
	"info": {
		"_postman_id": "e89fb362-9eb0-4431-83ed-f0009f226024",
		"name": "FormHeadless v1.0",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "22418023",
		"_collection_link": "https://solar-trinity-58917.postman.co/workspace/FormHeadless~06366c76-0e3c-4736-b300-8e9aa8313af9/collection/22418023-e89fb362-9eb0-4431-83ed-f0009f226024?action=share&source=collection_link&creator=22418023"
	},
	"item": [
		{
			"name": "Form submission",
			"item": [
				{
					"name": "Form Submission Params",
					"item": [
						{
							"name": "Common",
							"item": [
								{
									"name": "Get a valid form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody = pm.response.json();\r",
													"var formElements = responseBody.formElements;\r",
													"\r",
													"pm.collectionVariables.set(\"formKey\", responseBody.key);\r",
													"pm.collectionVariables.set(\"textboxElement_Key\", formElements.find(x => x.contentType == 'TextboxElementBlock').key);\r",
													"pm.collectionVariables.set(\"textareaElement_Key\", formElements.find(x => x.contentType == 'TextareaElementBlock').key);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}{{formEndpoint}}/CC10C9CB4D49471E96887C025DEB60D8",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"CC10C9CB4D49471E96887C025DEB60D8"
											]
										}
									},
									"response": []
								},
								{
									"name": "1. POST a form submission with full valid parameters and values.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let textareaElement_Key = pm.collectionVariables.get(\"textareaElement_Key\");\r",
													"\r",
													"let element_Value1 = requestData.getElementValue(textboxElement_Key);\r",
													"let element_Value2 = requestData.getElementValue(textareaElement_Key);\r",
													"\r",
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"pm.collectionVariables.set(\"element_Value1\", element_Value1);\r",
													"pm.collectionVariables.set(\"element_Value2\", element_Value2);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "isFinalized",
													"value": "true",
													"type": "text"
												},
												{
													"key": "hostedPageUrl",
													"value": "",
													"type": "text"
												},
												{
													"key": "SubmissionKey",
													"value": "",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "hello",
													"type": "text"
												},
												{
													"key": "__field_{{textareaElement_Key}}",
													"value": "hello",
													"type": "text"
												},
												{
													"key": "",
													"value": "",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = pm.collectionVariables.get(\"element_Value1\");\r",
													"\r",
													"let textareaElement_Key = pm.collectionVariables.get(\"textareaElement_Key\");\r",
													"let element_Value2 = pm.collectionVariables.get(\"element_Value2\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key, element_Value1);\r",
													"verifyFieldValueEqual(textareaElement_Key, element_Value2);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "2. POST a form submission which only have valid formKey",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text",
													"disabled": true
												},
												{
													"key": "isFinalized",
													"value": "true",
													"type": "text",
													"disabled": true
												},
												{
													"key": "hostedPageUrl",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "partialSubmissionKey",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_e088ec010e0644d2b5fe3468f75b4ede",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_f0cc8467b2fa422c965cd9d4c6893e25",
													"value": "",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = pm.collectionVariables.get(\"element_Value1\");\r",
													"\r",
													"let textareaElement_Key = pm.collectionVariables.get(\"textareaElement_Key\");\r",
													"let element_Value2 = pm.collectionVariables.get(\"element_Value2\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key, null);\r",
													"verifyFieldValueEqual(textareaElement_Key, null);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "3. POST a form submission which have valid formKey and values of elements are null",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "",
													"type": "text"
												},
												{
													"key": "__field_{{textareaElement_Key}}",
													"value": "",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "http://localhost:8000/_form/v1/form",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8000",
											"path": [
												"_form",
												"v1",
												"form"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = pm.collectionVariables.get(\"element_Value1\");\r",
													"\r",
													"let textareaElement_Key = pm.collectionVariables.get(\"textareaElement_Key\");\r",
													"let element_Value2 = pm.collectionVariables.get(\"element_Value2\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key, \"\");\r",
													"verifyFieldValueEqual(textareaElement_Key, \"\");\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Invalid - POST a form submission with empty body.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyFormMessageContains(\"Submission data should be used with multipart/form-data format request only.\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "formKey",
							"item": [
								{
									"name": "5.1. Invalid - POST a form submission without formKey(empty)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(\"FormKey\", \"The FormKey field is required.\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "5.2. Invalid - POST a form submission without formKey(string of all spacebar characters)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(\"FormKey\", \"The FormKey field is required.\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "                         ",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "5.3. Invalid - POST a form submission without formKey(no key field)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(\"FormKey\", \"The FormKey field is required.\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "locale",
													"value": "en",
													"type": "text",
													"disabled": true
												},
												{
													"key": "isFinalized",
													"value": "true",
													"type": "text",
													"disabled": true
												},
												{
													"key": "hostedPageUrl",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "partialSubmissionKey",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_e088ec010e0644d2b5fe3468f75b4ede",
													"value": "",
													"type": "text"
												},
												{
													"key": "__field_f0cc8467b2fa422c965cd9d4c6893e25",
													"value": "",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "6.1. Invalid - POST a form submission with invalid key format(< 32 character)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(\"FormKey\", \"Submit data FAILED: Submission Form's Key must be valid\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "123456789123456789123456",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text",
													"disabled": true
												},
												{
													"key": "isFinalized",
													"value": "true",
													"type": "text",
													"disabled": true
												},
												{
													"key": "hostedPageUrl",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "partialSubmissionKey",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_e088ec010e0644d2b5fe3468f75b4ede",
													"value": "",
													"type": "text"
												},
												{
													"key": "__field_f0cc8467b2fa422c965cd9d4c6893e25",
													"value": "",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "6.2. Invalid - POST a form submission with invalid key format(object)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(\"FormKey\", \"Submit data FAILED: Submission Form's Key must be valid\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "\"properties\": {\n                \"label\": \"Submit\",\n                \"validators\": []\n            }",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text",
													"disabled": true
												},
												{
													"key": "isFinalized",
													"value": "true",
													"type": "text",
													"disabled": true
												},
												{
													"key": "hostedPageUrl",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "partialSubmissionKey",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_e088ec010e0644d2b5fe3468f75b4ede",
													"value": "",
													"type": "text"
												},
												{
													"key": "__field_f0cc8467b2fa422c965cd9d4c6893e25",
													"value": "",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "6.3. Invalid - POST a form submission with invalid key format(boolean)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(\"FormKey\", \"Submit data FAILED: Submission Form's Key must be valid\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "true",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text",
													"disabled": true
												},
												{
													"key": "isFinalized",
													"value": "true",
													"type": "text",
													"disabled": true
												},
												{
													"key": "hostedPageUrl",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "partialSubmissionKey",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_e088ec010e0644d2b5fe3468f75b4ede",
													"value": "",
													"type": "text"
												},
												{
													"key": "__field_f0cc8467b2fa422c965cd9d4c6893e25",
													"value": "",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "7.1. Get a form which does not Allow multiple submissions from the same IP/cookie",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody = pm.response.json();\r",
													"var formElements = responseBody.formElements;\r",
													"\r",
													"pm.collectionVariables.set(\"formKey\", responseBody.key);\r",
													"pm.collectionVariables.set(\"textboxElement_Key\", formElements.find(x => x.contentType == 'TextboxElementBlock').key);\r",
													"pm.collectionVariables.set(\"numberElement_Key\", formElements.find(x => x.contentType == 'NumberElementBlock').key);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/810393CE51AB4BA6A702C3E20070CF21",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"810393CE51AB4BA6A702C3E20070CF21"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "7.2. Submit form the first time for above form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = requestData.getElementValue(textboxElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value1\", element_Value1);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "2023",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = pm.collectionVariables.get(\"element_Value1\");\r",
													"\r",
													"let textareaElement_Key = pm.collectionVariables.get(\"textareaElement_Key\");\r",
													"let element_Value2 = pm.collectionVariables.get(\"element_Value2\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key, element_Value1);\r",
													"verifyFieldValueEqual(textareaElement_Key, element_Value2);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "7.3. Submit form the second time for above form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = requestData.getElementValue(textboxElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value1\", element_Value1);\r",
													"\r",
													"let numberElement_Key = pm.collectionVariables.get(\"numberElement_Key\");\r",
													"let element_Value2 = requestData.getElementValue(numberElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value2\", element_Value2);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "810393ce51ab4ba6a702c3e20070cf21",
													"type": "text"
												},
												{
													"key": "SubmissionKey",
													"value": "{{submissionKey}}",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "hello",
													"type": "text"
												},
												{
													"key": "__field_{{numberElement_Key}}",
													"value": "2024",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = pm.collectionVariables.get(\"element_Value1\");\r",
													"\r",
													"let numberElement_Key = pm.collectionVariables.get(\"numberElement_Key\");\r",
													"let element_Value2 = pm.collectionVariables.get(\"element_Value2\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key, element_Value1);\r",
													"verifyFieldValueEqual(numberElement_Key, Number.parseInt(element_Value2));\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "8. Invalid - Submit a form with formKey does not exist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);\r",
													"verifyFormMessageContains(\"Submit data FAILED: could not get Form\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "810393ce51ab4ba6a702c3e20070cf22",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "9. Valid - Submit a form with formElement  does not exist on the form.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "cc10c9cb4d49471e96887c025deb60d8",
													"type": "text"
												},
												{
													"key": "__field_e088ec010e0644d2b5fe3468f75b4edeT",
													"value": "hello",
													"type": "text"
												},
												{
													"key": "__field_f0cc8467b2fa422c965cd9d4c6893e25T",
													"value": "hello",
													"type": "text"
												},
												{
													"key": "",
													"value": "",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "locale",
							"item": [
								{
									"name": "Master is 'en'",
									"item": [
										{
											"name": "Get a form which have language en(Master), sv, nl-BE",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var responseBody = pm.response.json();\r",
															"var formElements = responseBody.formElements;\r",
															"\r",
															"pm.collectionVariables.set(\"formKey\", responseBody.key);\r",
															"pm.collectionVariables.set(\"textboxElement_Key\", formElements.find(x => x.contentType == 'TextboxElementBlock').key);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/7DAB6A7FE08A427CAF8D67ACFCDDCFB9",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"7DAB6A7FE08A427CAF8D67ACFCDDCFB9"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "10.1.Submit form which locale form exists(locale = en)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{textboxElement_Key}}",
															"value": "hello",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "10.2.Submit form which locale form exists(locale = sv)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "sv",
															"type": "text"
														},
														{
															"key": "__field_{{textboxElement_Key}}",
															"value": "hello",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "10.2.Submit form which locale form exists(locale = nl-BE)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "nl-BE",
															"type": "text"
														},
														{
															"key": "__field_{{textboxElement_Key}}",
															"value": "hello",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "11.1. Submit form without locale(empty)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "",
															"type": "text"
														},
														{
															"key": "__field_{{textboxElement_Key}}",
															"value": "hello Mie1",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "11.2. Submit form without locale(no key field)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "__field_{{textboxElement_Key1}}",
															"value": "hello",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "12. Invalid - Submit a form which Master language is 'en' and locale does not exist",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(404);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "pt-BR",
															"type": "text"
														},
														{
															"key": "__field_{{textboxElement_Key}}",
															"value": "hello",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Master is 'sv'",
									"item": [
										{
											"name": "Get a form which have language sv(Master), en",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var responseBody = pm.response.json();\r",
															"var formElements = responseBody.formElements;\r",
															"\r",
															"pm.collectionVariables.set(\"formKey\", responseBody.key);\r",
															"pm.collectionVariables.set(\"textareaElement_Key\", formElements.find(x => x.contentType == 'TextareaElementBlock').key);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/6D2B1B4E4951420A980412CA8BD84F69",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"6D2B1B4E4951420A980412CA8BD84F69"
													]
												}
											},
											"response": []
										},
										{
											"name": "13.1. Submit form which locale form exists(sv) which Master language is different from 'en'",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "sv",
															"type": "text"
														},
														{
															"key": "__field_{{textareaElement_Key}}",
															"value": "hello summer",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "13.2. Submit form which locale form exists(en) which Master language is different from 'en'",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{textareaElement_Key}}",
															"value": "hello summer",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "14.1. Submit form without locale(empty)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "",
															"type": "text"
														},
														{
															"key": "__field_{{textareaElement_Key}}",
															"value": "hello Kitty",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "14.2 Submit form without locale(no field key)",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "__field_{{textareaElement_Key}}",
															"value": "hello1",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "15. Invalid - Submit a form which Master language is difference from 'en' and locale does not exist",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(404);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "pt-BR",
															"type": "text"
														},
														{
															"key": "__field_{{textareaElement_Key}}",
															"value": "hello",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "IsFinalized",
							"item": [
								{
									"name": "Single form",
									"item": [
										{
											"name": "Get a single form",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var responseBody =pm.response.json();\r",
															"var formElements = responseBody.formElements;\r",
															"pm.collectionVariables.set(\"formKey\", responseBody.key);\r",
															"pm.collectionVariables.set(\"textboxElement_Key\", formElements.find(x => x.contentType == 'TextboxElementBlock').key);\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/A9DB70B23FCF493D994A56AFC8D504E3",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"A9DB70B23FCF493D994A56AFC8D504E3"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Submit form with 'isFinalized' = true",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "isFinalized",
															"value": "true",
															"type": "text"
														},
														{
															"key": "__field_{{textboxElement_Key}}",
															"value": "test",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Submit form with 'isFinalized' = false",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "isFinalized",
															"value": "false",
															"type": "text"
														},
														{
															"key": "__field_{{textboxElement_Key}}",
															"value": "test",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Invalid - Submit form without 'isFinalized'(empty)",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(400);\r",
															"verifyErrorMessageContains(\"FormSubmission.IsFinalized\", \"The multipart data value cannot be convert to a boolean.\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "isFinalized",
															"value": "",
															"type": "text"
														},
														{
															"key": "__field_{{textboxElement_Key}}",
															"value": "test",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Submit form without 'isFinalized'(no Key field)",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "isFinalized",
															"value": "",
															"type": "text",
															"disabled": true
														},
														{
															"key": "__field_{{textboxElement_Key}}",
															"value": "test",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Invalid - Submit form with 'isFinalized' is not a boolean value",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(400);\r",
															"verifyErrorMessageContains(\"FormSubmission.IsFinalized\", \"The multipart data value cannot be convert to a boolean.\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "isFinalized",
															"value": "ok",
															"type": "text"
														},
														{
															"key": "__field_{{textboxElement_Key}}",
															"value": "test",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Multiple form",
									"item": [
										{
											"name": "Get GUI form",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{url}}/cms/GetContentGuid?id=3387",
													"host": [
														"{{url}}"
													],
													"path": [
														"cms",
														"GetContentGuid"
													],
													"query": [
														{
															"key": "id",
															"value": "3387"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get a multiple form",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var responseBody =pm.response.json();\r",
															"var formElements = responseBody.formElements;\r",
															"pm.collectionVariables.set(\"formKey\", responseBody.key);\r",
															"pm.collectionVariables.set(\"textboxElement_Key\", formElements.find(x => x.contentType == 'TextboxElementBlock').key);\r",
															"pm.collectionVariables.set(\"textareaElement_Key\", formElements.find(x => x.contentType == 'TextareaElementBlock').key);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formGuid}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Submit form with 'isFinalized' = true",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "isFinalized",
															"value": "true",
															"type": "text"
														},
														{
															"key": "__field_{{textboxElement_Key}}",
															"value": "test2",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Submit form with 'isFinalized' = false",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "isFinalized",
															"value": "false",
															"type": "text"
														},
														{
															"key": "__field_{{textboxElement_Key}}",
															"value": "test2",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Submit form without 'isFinalized'(empty)",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(400);\r",
															"verifyErrorMessageContains(\"FormSubmission.IsFinalized\", \"The multipart data value cannot be convert to a boolean.\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "isFinalized",
															"value": "",
															"type": "text"
														},
														{
															"key": "__field_{{textboxElement_Key}}",
															"value": "test2",
															"type": "text"
														},
														{
															"key": "__field_{{textareaElement_Key}}",
															"value": "test2",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Submit form without 'isFinalized'(no Key field)",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "isFinalized",
															"value": "",
															"type": "text",
															"disabled": true
														},
														{
															"key": "__field_{{textboxElement_Key}}",
															"value": "test2",
															"type": "text"
														},
														{
															"key": "__field_{{textareaElement_Key}}",
															"value": "test2",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Invalid - Submit form with 'isFinalized' is not a boolean value",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(400);\r",
															"verifyErrorMessageContains(\"FormSubmission.IsFinalized\", \"The multipart data value cannot be convert to a boolean.\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "isFinalized",
															"value": "test",
															"type": "text"
														},
														{
															"key": "__field_{{textboxElement_Key}}",
															"value": "test2",
															"type": "text"
														},
														{
															"key": "__field_{{textareaElement_Key}}",
															"value": "test2",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "SubmissionKey",
							"item": [
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"console.log(pm.response.text());\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=3394",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "3394"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"var formElements = responseBody.formElements;\r",
													"var texboxElement_List = formElements.filter(x => x.contentType == 'TextboxElementBlock');\r",
													"\r",
													"pm.collectionVariables.set(\"formKey\", responseBody.key);\r",
													"pm.collectionVariables.set(\"textboxElement1_Key\", texboxElement_List[0].key);\r",
													"pm.collectionVariables.set(\"textboxElement2_Key\", texboxElement_List[1].key);\r",
													"pm.collectionVariables.set(\"textareaElement_Key\", formElements.find(x => x.contentType == 'TextareaElementBlock').key);\r",
													"pm.collectionVariables.set(\"numberElement_Key\", formElements.find(x => x.contentType == 'NumberElementBlock').key);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Submit form with 'isFinalized' = true",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "isFinalized",
													"value": "true",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement1_Key}}",
													"value": "hello1",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Submit form which 'SubmissionKey' is an existing submission key",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "isFinalized",
													"value": "true",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement1_Key}}",
													"value": "hello3",
													"type": "text"
												},
												{
													"key": "SubmissionKey",
													"value": "{{submissionKey}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Submit form with 'isFinalized' = false",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "isFinalized",
													"value": "false",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement1_Key}}",
													"value": "Ha Noi",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Submit form which 'SubmissionKey' is an existing submission key",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "isFinalized",
													"value": "true",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement1_Key}}",
													"value": "Da Nang",
													"type": "text"
												},
												{
													"key": "SubmissionKey",
													"value": "{{submissionKey}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Submit form without 'SubmissionKey'(Empty)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement1_Key}}",
													"value": "Hai Phong",
													"type": "text"
												},
												{
													"key": "SubmissionKey",
													"value": "",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Submit form without 'SubmissionKey'(No key value)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement1_Key}}",
													"value": "Hai Phong",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "CurrentStep",
							"item": [
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"console.log(pm.response.text());\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=3394",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "3394"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"var formElements = responseBody.formElements;\r",
													"var texboxElement_List = formElements.filter(x => x.contentType == 'TextboxElementBlock');\r",
													"\r",
													"pm.collectionVariables.set(\"formKey\", responseBody.key);\r",
													"pm.collectionVariables.set(\"textboxElement1_Key\", texboxElement_List[0].key);\r",
													"pm.collectionVariables.set(\"textboxElement2_Key\", texboxElement_List[1].key);\r",
													"pm.collectionVariables.set(\"textareaElement_Key\", formElements.find(x => x.contentType == 'TextareaElementBlock').key);\r",
													"pm.collectionVariables.set(\"numberElement_Key\", formElements.find(x => x.contentType == 'NumberElementBlock').key);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Submit form with CurrentStep = 0",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// // var index = pm.collectionVariables.get(\"formElementIndex\");\r",
													"// // if (index == undefined) {\r",
													"// //     index = 1;\r",
													"// //     pm.collectionVariables.set(\"formElementIndex\", index);\r",
													"// // }\r",
													"\r",
													"// // var collection = pm.collectionVariables.get(\"formElementKeys\");\r",
													"// // pm.collectionVariables.set(\"tempElementKey\", collection[index]);\r",
													"\r",
													"//     var body = {\r",
													"//             'mode': 'formdata',\r",
													"//             'formdata': [\r",
													"//                 //  {'key':'formKey', 'value':'a9db70b23fcf493d994a56afc8d504e3', 'type' : 'text'} \r",
													"//                  {\"key\" : \"formKey\" , \"value\" : \"6d2b1b4e4951420a980412ca8bd84f69\"}           \r",
													"//                 // {'key':'__field_{{tempElementKey}}', 'value':'bar'},\r",
													"//                 // {'key':'bar', 'value':'foo'}\r",
													"//             ]\r",
													"//     }\r",
													"\r",
													"// //     formKey: \"6d2b1b4e4951420a980412ca8bd84f69\"\r",
													"// // locale: \"en\"\r",
													"// // __field_e7c0007175ee4fabbeccdb18018cbf39: \"hello summer\"\r",
													"\r",
													"//     // var collection = pm.collectionVariables.get(\"formElementKeys\");\r",
													"//     // for (var i = 0; i < collection.length; i++) {\r",
													"//     //     body.formdata.push({'key':'__field_' + collection[i], 'value':''})\r",
													"//     // }\r",
													"\r",
													"//     pm.environment.set(\"body\", body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement1_Key}}",
													"value": "Ca Mau",
													"type": "text"
												},
												{
													"key": "CurrentStep",
													"value": "0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Submit form with CurrentStep = 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// // var index = pm.collectionVariables.get(\"formElementIndex\");\r",
													"// // if (index == undefined) {\r",
													"// //     index = 1;\r",
													"// //     pm.collectionVariables.set(\"formElementIndex\", index);\r",
													"// // }\r",
													"\r",
													"// // var collection = pm.collectionVariables.get(\"formElementKeys\");\r",
													"// // pm.collectionVariables.set(\"tempElementKey\", collection[index]);\r",
													"\r",
													"//     var body = {\r",
													"//             'mode': 'formdata',\r",
													"//             'formdata': [\r",
													"//                 //  {'key':'formKey', 'value':'a9db70b23fcf493d994a56afc8d504e3', 'type' : 'text'} \r",
													"//                  {\"key\" : \"formKey\" , \"value\" : \"6d2b1b4e4951420a980412ca8bd84f69\"}           \r",
													"//                 // {'key':'__field_{{tempElementKey}}', 'value':'bar'},\r",
													"//                 // {'key':'bar', 'value':'foo'}\r",
													"//             ]\r",
													"//     }\r",
													"\r",
													"// //     formKey: \"6d2b1b4e4951420a980412ca8bd84f69\"\r",
													"// // locale: \"en\"\r",
													"// // __field_e7c0007175ee4fabbeccdb18018cbf39: \"hello summer\"\r",
													"\r",
													"//     // var collection = pm.collectionVariables.get(\"formElementKeys\");\r",
													"//     // for (var i = 0; i < collection.length; i++) {\r",
													"//     //     body.formdata.push({'key':'__field_' + collection[i], 'value':''})\r",
													"//     // }\r",
													"\r",
													"//     pm.environment.set(\"body\", body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textareaElement_Key}}",
													"value": "Ca Mau",
													"type": "text"
												},
												{
													"key": "CurrentStep",
													"value": "1",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Submit form with CurrentStep = last step",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "CurrentStep",
													"value": "2",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement2_Key}}",
													"value": "Ca Mau",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Submit form without CurrentStep(No key field)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "Ca Mau",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Invalid - Submit form without CurrentStep(Empty)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(\"FormSubmission.CurrentStep\", \"The multipart data value cannot be convert to a positive interger.\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "CurrentStep",
													"value": "",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "Can Tho",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Invalid - Submit form with incorrect format of CurrentStep(string)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let formKey = pm.collectionVariables.get(\"formKey\");\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(\"FormSubmission.CurrentStep\", \"The multipart data value cannot be convert to a positive interger.\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "Ca Mau",
													"type": "text"
												},
												{
													"key": "CurrentStep",
													"value": "test",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Invalid - Submit form with incorrect format of CurrentStep(negative number)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"let formKey = pm.collectionVariables.get(\"formKey\");\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(\"FormSubmission.CurrentStep\", \"The multipart data value cannot be convert to a positive interger.\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "Ca Mau",
													"type": "text"
												},
												{
													"key": "CurrentStep",
													"value": "-1",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Invalid - Submit form with incorrect format of CurrentStep(CurrentStep > total steps)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let formKey = pm.collectionVariables.get(\"formKey\");\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(formKey, \"Submit data FAILED: there is no element data exist on submitted step.\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "Ca Mau",
													"type": "text"
												},
												{
													"key": "CurrentStep",
													"value": "3",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Combine - SubmissionKey, CurrentStep and IsFinalized",
							"item": [
								{
									"name": "Mutiple form step",
									"item": [
										{
											"name": "Get GUI form",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
															"console.log(pm.response.text());\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{url}}/cms/GetContentGuid?id=14416",
													"host": [
														"{{url}}"
													],
													"path": [
														"cms",
														"GetContentGuid"
													],
													"query": [
														{
															"key": "id",
															"value": "14416"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get a form",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var responseBody =pm.response.json();\r",
															"var formElements = responseBody.formElements;\r",
															"var texboxElement_List = formElements.filter(x => x.contentType == 'TextboxElementBlock');\r",
															"\r",
															"pm.collectionVariables.set(\"formKey\", responseBody.key);\r",
															"pm.collectionVariables.set(\"textboxElement1_Key\", texboxElement_List[0].key);\r",
															"pm.collectionVariables.set(\"textboxElement2_Key\", texboxElement_List[1].key);\r",
															"pm.collectionVariables.set(\"textareaElement_Key\", formElements.find(x => x.contentType == 'TextareaElementBlock').key);\r",
															"pm.collectionVariables.set(\"numberElement_Key\", formElements.find(x => x.contentType == 'NumberElementBlock').key);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formGuid}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Submit form with CurrentStep = 0",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"submission_Key\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{textboxElement1_Key}}",
															"value": "Lao Cai",
															"type": "text"
														},
														{
															"key": "CurrentStep",
															"value": "0",
															"type": "text"
														},
														{
															"key": "IsFinalized",
															"value": "false",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "1. Re-submit the form which CurrenStep = 0",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"submission_Key\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{textboxElement1_Key}}",
															"value": "Yen Bai",
															"type": "text"
														},
														{
															"key": "__field_{{textareaElement_Key}}",
															"value": "Provincial Committee of the Communist Party\nProvincial Committee of the Communist Party (Đảng bộ Đảng Cộng sản cấp tỉnh or Tỉnh ủy Đảng Cộng sản) is a provincial subordinate of the Communist Party of Vietnam. Since Vietnam is a one party state, the provincial committee of the Communist Party is the most prominent organ of provincial governance.\nEach provincial committee of the Communist Party is headed by a Secretary (Bí thư). The Secretary is de facto leader of the province.",
															"type": "text"
														},
														{
															"key": "CurrentStep",
															"value": "0",
															"type": "text"
														},
														{
															"key": "IsFinalized",
															"value": "false",
															"type": "text"
														},
														{
															"key": "SubmissionKey",
															"value": "{{submission_Key}}",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "2. Re-submit the form which CurrenStep = 1",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"submission_Key\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "CurrentStep",
															"value": "1",
															"type": "text"
														},
														{
															"key": "IsFinalized",
															"value": "false",
															"type": "text"
														},
														{
															"key": "SubmissionKey",
															"value": "{{submission_Key}}",
															"type": "text"
														},
														{
															"key": "__field_{{numberElement_Key}}",
															"value": "120",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "3. Re-submit the form which CurrenStep = 2",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"submission_Key\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "CurrentStep",
															"value": "2",
															"type": "text"
														},
														{
															"key": "IsFinalized",
															"value": "false",
															"type": "text"
														},
														{
															"key": "SubmissionKey",
															"value": "{{submission_Key}}",
															"type": "text"
														},
														{
															"key": "__field_{{textboxElement2_Key}}",
															"value": "Bac Giang",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "4. Re-submit the form the second time(CurrentStep = 0, editedElementValue = another value)",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"submission_Key\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "CurrentStep",
															"value": "0",
															"type": "text"
														},
														{
															"key": "IsFinalized",
															"value": "false",
															"type": "text"
														},
														{
															"key": "SubmissionKey",
															"value": "{{submission_Key}}",
															"type": "text"
														},
														{
															"key": "__field_{{textboxElement1_Key}}",
															"value": "Bac Can",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "5. Re-submit the form the second time(CurrentStep = 1)",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"submission_Key\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "CurrentStep",
															"value": "1",
															"type": "text"
														},
														{
															"key": "IsFinalized",
															"value": "false",
															"type": "text"
														},
														{
															"key": "SubmissionKey",
															"value": "{{submission_Key}}",
															"type": "text"
														},
														{
															"key": "__field_{{numberElement_Key}}",
															"value": "100",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "6. Re-submit the form the second time(CurrentStep = 2, IsFinalized = true)",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"submission_Key\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "CurrentStep",
															"value": "2",
															"type": "text"
														},
														{
															"key": "IsFinalized",
															"value": "true",
															"type": "text"
														},
														{
															"key": "SubmissionKey",
															"value": "{{submission_Key}}",
															"type": "text"
														},
														{
															"key": "__field_{{textboxElement2_Key}}",
															"value": "Cao Bang",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "7. Invalid - Re-Submit a finalized submission form",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let formKey = pm.collectionVariables.get('formKey');\r",
															"\r",
															"verifyResponseCode(400);\r",
															"verifyErrorMessageContains(formKey, \"The form is finalized submitted. Form submmission is not changed\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "CurrentStep",
															"value": "2",
															"type": "text"
														},
														{
															"key": "IsFinalized",
															"value": "true",
															"type": "text"
														},
														{
															"key": "SubmissionKey",
															"value": "{{submission_Key}}",
															"type": "text"
														},
														{
															"key": "__field_{{textboxElement2_Key}}",
															"value": "Ha Giang",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Submit the form which CurrenStep = 0",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"submission_Key\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "CurrentStep",
															"value": "0",
															"type": "text"
														},
														{
															"key": "IsFinalized",
															"value": "false",
															"type": "text"
														},
														{
															"key": "__field_{{textboxElement1_Key}}",
															"value": "Phu Tho",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "8. Re-Submit form which CurrentStep = 0, elementValue = no key value",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "CurrentStep",
															"value": "0",
															"type": "text"
														},
														{
															"key": "IsFinalized",
															"value": "false",
															"type": "text"
														},
														{
															"key": "SubmissionKey",
															"value": "{{submission_Key}}",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Submit the form which CurrenStep = 0",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"submission_Key\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "CurrentStep",
															"value": "0",
															"type": "text"
														},
														{
															"key": "IsFinalized",
															"value": "false",
															"type": "text"
														},
														{
															"key": "__field_{{textboxElement1_Key}}",
															"value": "Phu Tho",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "9. Re-submit form which CurrentStep = 0, elementValue = Empty",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "CurrentStep",
															"value": "0",
															"type": "text"
														},
														{
															"key": "IsFinalized",
															"value": "false",
															"type": "text"
														},
														{
															"key": "SubmissionKey",
															"value": "{{submission_Key}}",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "10. Invalid - Re-submit form which IsFinalized, SubmissionKey and CurrentStep are invalid.",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let formKey = pm.collectionVariables.get(\"formKey\");\r",
															"\r",
															"verifyResponseCode(400);\r",
															"verifyErrorMessageContains(\"FormSubmission.CurrentStep\", \"The multipart data value cannot be convert to a positive interger.\");\r",
															"verifyErrorMessageContains(\"FormSubmission.IsFinalized\", \"The multipart data value cannot be convert to a boolean.\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "CurrentStep",
															"value": "test",
															"type": "text"
														},
														{
															"key": "IsFinalized",
															"value": "test",
															"type": "text"
														},
														{
															"key": "SubmissionKey",
															"value": "1",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Mutiple form step - displayed in other content",
									"item": [
										{
											"name": "Get GUI form",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{url}}/cms/GetContentGuid?id=15416",
													"host": [
														"{{url}}"
													],
													"path": [
														"cms",
														"GetContentGuid"
													],
													"query": [
														{
															"key": "id",
															"value": "15416"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get a form",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var responseBody =pm.response.json();\r",
															"var formElements = responseBody.formElements;\r",
															"var texboxElement_List = formElements.filter(x => x.contentType == 'TextboxElementBlock');\r",
															"\r",
															"pm.collectionVariables.set(\"formKey\", responseBody.key);\r",
															"pm.collectionVariables.set(\"textboxElement1_Key\", texboxElement_List[0].key);\r",
															"pm.collectionVariables.set(\"textboxElement2_Key\", texboxElement_List[1].key);\r",
															"pm.collectionVariables.set(\"textboxElement3_Key\", texboxElement_List[2].key);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formGuid}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Submit form with CurrentStep = 0",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"submission_Key\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{textboxElement1_Key}}",
															"value": "Lao Cai",
															"type": "text"
														},
														{
															"key": "CurrentStep",
															"value": "0",
															"type": "text"
														},
														{
															"key": "IsFinalized",
															"value": "false",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "1. Re-submit the form which CurrenStep = 0",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"submission_Key\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{textboxElement1_Key}}",
															"value": "Yen Bai",
															"type": "text"
														},
														{
															"key": "CurrentStep",
															"value": "0",
															"type": "text"
														},
														{
															"key": "IsFinalized",
															"value": "false",
															"type": "text"
														},
														{
															"key": "SubmissionKey",
															"value": "{{submission_Key}}",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "2. Re-submit the form which CurrenStep = 1",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"submission_Key\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "CurrentStep",
															"value": "1",
															"type": "text"
														},
														{
															"key": "IsFinalized",
															"value": "false",
															"type": "text"
														},
														{
															"key": "SubmissionKey",
															"value": "{{submission_Key}}",
															"type": "text"
														},
														{
															"key": "__field_{{textboxElement2_Key}}",
															"value": "Quang Ninh",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "3. Re-submit the form which CurrenStep = 2",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"submission_Key\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "CurrentStep",
															"value": "2",
															"type": "text"
														},
														{
															"key": "IsFinalized",
															"value": "false",
															"type": "text"
														},
														{
															"key": "SubmissionKey",
															"value": "{{submission_Key}}",
															"type": "text"
														},
														{
															"key": "__field_{{textboxElement3_Key}}",
															"value": "Thai Nguyen",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "4. Re-submit the form the second time(CurrentStep = 0, editedElementValue = another value)",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"submission_Key\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "CurrentStep",
															"value": "0",
															"type": "text"
														},
														{
															"key": "IsFinalized",
															"value": "false",
															"type": "text"
														},
														{
															"key": "SubmissionKey",
															"value": "{{submission_Key}}",
															"type": "text"
														},
														{
															"key": "__field_{{textboxElement1_Key}}",
															"value": "Bac Can",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "5. Re-submit the form the second time(CurrentStep = 1)",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"submission_Key\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "CurrentStep",
															"value": "1",
															"type": "text"
														},
														{
															"key": "IsFinalized",
															"value": "false",
															"type": "text"
														},
														{
															"key": "SubmissionKey",
															"value": "{{submission_Key}}",
															"type": "text"
														},
														{
															"key": "__field_{{textboxElement2_Key}}",
															"value": "Quang Ninh",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "6. Re-submit the form the second time(CurrentStep = 2, IsFinalized = true)",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"submission_Key\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "CurrentStep",
															"value": "2",
															"type": "text"
														},
														{
															"key": "IsFinalized",
															"value": "true",
															"type": "text"
														},
														{
															"key": "SubmissionKey",
															"value": "{{submission_Key}}",
															"type": "text"
														},
														{
															"key": "__field_{{textboxElement3_Key}}",
															"value": "Lao Cai",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "7.Invalid -  Re-Submit a finalized submission form",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let formKey = pm.collectionVariables.get('formKey');\r",
															"\r",
															"verifyResponseCode(400);\r",
															"verifyErrorMessageContains(formKey, \"The form is finalized submitted. Form submmission is not changed\");"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "CurrentStep",
															"value": "2",
															"type": "text"
														},
														{
															"key": "IsFinalized",
															"value": "true",
															"type": "text"
														},
														{
															"key": "SubmissionKey",
															"value": "{{submission_Key}}",
															"type": "text"
														},
														{
															"key": "__field_{{textboxElement2_Key}}",
															"value": "Ha Giang",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Submit the form which CurrenStep = 0",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"submission_Key\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "CurrentStep",
															"value": "0",
															"type": "text"
														},
														{
															"key": "IsFinalized",
															"value": "false",
															"type": "text"
														},
														{
															"key": "__field_{{textboxElement1_Key}}",
															"value": "Phu Tho",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "8.Re-submit form which CurrentStep = 0, elementValue = no key value",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "CurrentStep",
															"value": "0",
															"type": "text"
														},
														{
															"key": "IsFinalized",
															"value": "false",
															"type": "text"
														},
														{
															"key": "SubmissionKey",
															"value": "{{submission_Key}}",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Submit the form which CurrenStep = 0",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"submission_Key\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "CurrentStep",
															"value": "0",
															"type": "text"
														},
														{
															"key": "IsFinalized",
															"value": "false",
															"type": "text"
														},
														{
															"key": "__field_{{textboxElement1_Key}}",
															"value": "Phu Tho",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "9. Re-submit form which CurrentStep = 0, elementValue = Empty",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "CurrentStep",
															"value": "0",
															"type": "text"
														},
														{
															"key": "IsFinalized",
															"value": "false",
															"type": "text"
														},
														{
															"key": "SubmissionKey",
															"value": "{{submission_Key}}",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										}
									]
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url: 'http://localhost:8000/api/episerver/connect/token',",
									"    method: 'POST',",
									"    body: {",
									"        mode: 'urlencoded',",
									"        urlencoded: [",
									"            { key: \"client_id\", value: \"TestClient\" },",
									"            { key: \"grant_type\", value: \"password\" },",
									"            { key: \"username\", value: \"admin\" },",
									"            { key: \"password\", value: \"devLab08@\" }",
									"        ]",
									"    }",
									"}, function (err, res) {",
									"    if (err === null) {",
									"        // pm.globals.set(\"token\", res.json()[\"access_token\"]);",
									"        pm.collectionVariables.set(\"JwtToken\", res.json().access_token);",
									"    }",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Form Elements Data",
					"item": [
						{
							"name": "Text Element",
							"item": [
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=15426",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "15426"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form which contains text element - Default",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"var formElements = responseBody.formElements;\r",
													"\r",
													"pm.collectionVariables.set(\"formKey\", responseBody.key);\r",
													"pm.collectionVariables.set(\"textboxElement_Key\", formElements.find(x => x.contentType == 'TextboxElementBlock').key);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "1.1 Submit form without element value (empty)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"\r",
													"var formKey = pm.collectionVariables.get(\"formKey\");\r",
													"var submissionKey = pm.collectionVariables.get(\"submissionKey\");\r",
													"var textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let field_Key = \"__field_\" + textboxElement_Key;\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyResponseEqual(responseBody.formKey, formKey);\r",
													"verifyResponseEqual(responseBody.submissionKey, submissionKey);\r",
													"verifyFieldValueEqual(textboxElement_Key, \"\");\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "1.2 Submit form without element value (no key value)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"\r",
													"var formKey = pm.collectionVariables.get(\"formKey\");\r",
													"var submissionKey = pm.collectionVariables.get(\"submissionKey\");\r",
													"var textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let field_Key = \"__field_\" + textboxElement_Key;\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyResponseEqual(responseBody.formKey, formKey);\r",
													"verifyResponseEqual(responseBody.submissionKey, submissionKey);\r",
													"verifyFieldValueEqual(textboxElement_Key, \"\");\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "1.3 Submit form without element value (non-existence element)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_12345",
													"value": "test",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"\r",
													"var formKey = pm.collectionVariables.get(\"formKey\");\r",
													"var submissionKey = pm.collectionVariables.get(\"submissionKey\");\r",
													"var textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let field_Key = \"__field_\" + textboxElement_Key;\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyResponseEqual(responseBody.formKey, formKey);\r",
													"verifyResponseEqual(responseBody.submissionKey, submissionKey);\r",
													"verifyFieldValueEqual(textboxElement_Key, null);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "2. Submit form which enter value to the element.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "Dien Bien",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"\r",
													"var formKey = pm.collectionVariables.get(\"formKey\");\r",
													"var submissionKey = pm.collectionVariables.get(\"submissionKey\");\r",
													"var textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let field_Key = \"__field_\" + textboxElement_Key;\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyResponseEqual(responseBody.formKey, formKey);\r",
													"verifyResponseEqual(responseBody.submissionKey, submissionKey);\r",
													"verifyFieldValueEqual(textboxElement_Key, \"Dien Bien\");\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "3.  Submit form which enter a long string into the element.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "According to the census results of April 1, 2023, the population of Vietnam is 103,403,000 people.[2] The most populous top-level administrative unit in Vietnam is Hồ Chí Minh City, one of the five centrally governed cities. It has 9,125,000 people liv",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"\r",
													"var formKey = pm.collectionVariables.get(\"formKey\");\r",
													"var submissionKey = pm.collectionVariables.get(\"submissionKey\");\r",
													"var textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let field_Key = \"__field_\" + textboxElement_Key;\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key, \"According to the census results of April 1, 2023, the population of Vietnam is 103,403,000 people.[2] The most populous top-level administrative unit in Vietnam is Hồ Chí Minh City, one of the five centrally governed cities. It has 9,125,000 people liv\");\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=16428",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "16428"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form which contains text element - Required",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"var formElements = responseBody.formElements;\r",
													"\r",
													"pm.collectionVariables.set(\"formKey\", responseBody.key);\r",
													"pm.collectionVariables.set(\"textboxElement_Key\", formElements.find(x => x.contentType == 'TextboxElementBlock').key);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "4.1. Invalid - Submit form without element value (empty)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"let textboxElement_Key = pm.collectionVariables.get('textboxElement_Key');\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(textboxElement_Key, \"This field is required.\");\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "4.2. Invalid - Submit form without element value (no key value)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"let textboxElement_Key = pm.collectionVariables.get('textboxElement_Key');\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(textboxElement_Key, \"This field is required.\");\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "5. Submit form which enter value to the element.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "Thanh Hoa",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"\r",
													"var formKey = pm.collectionVariables.get(\"formKey\");\r",
													"var submissionKey = pm.collectionVariables.get(\"submissionKey\");\r",
													"var textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let field_Key = \"__field_\" + textboxElement_Key;\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key, \"Thanh Hoa\");\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=16431",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "16431"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form which contains text element - Regular expression",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody = pm.response.json();\r",
													"var formElements = responseBody.formElements;\r",
													"\r",
													"pm.collectionVariables.set(\"formKey\", responseBody.key);\r",
													"var textboxElement = formElements.find(x => x.contentType === 'TextboxElementBlock');\r",
													"if (textboxElement) {\r",
													"    pm.collectionVariables.set(\"textboxElement_Key\", textboxElement.key);\r",
													"    pm.collectionVariables.set(\"textboxElement_pattern\", textboxElement.properties.validators[0].model.message);\r",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "6. Submit form with matching to regular expression",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "My_User123",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"\r",
													"var formKey = pm.collectionVariables.get(\"formKey\");\r",
													"var submissionKey = pm.collectionVariables.get(\"submissionKey\");\r",
													"var textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let field_Key = \"__field_\" + textboxElement_Key;\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key, \"My_User123\");\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "7. Invalid - Submit form with not matching to regular expression",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"let textboxElement_Key = pm.collectionVariables.get('textboxElement_Key');\r",
													"let textboxElement_pattern = pm.collectionVariables.get('textboxElement_pattern');\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(textboxElement_Key, textboxElement_pattern);\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "My_User123444444444444",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=17431",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "17431"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form which contains text element - Email",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody = pm.response.json();\r",
													"var formElements = responseBody.formElements;\r",
													"var textboxElement = formElements.find(x => x.contentType === 'TextboxElementBlock');\r",
													"\r",
													"pm.collectionVariables.set(\"formKey\", responseBody.key);\r",
													"\r",
													"if (textboxElement) {\r",
													"    pm.collectionVariables.set(\"textboxElement_Key\", textboxElement.key);\r",
													"    pm.collectionVariables.set(\"textboxElement_pattern\", textboxElement.properties.validators[0].model.message);\r",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "8.1. Submit form which enter an email to the element",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "simple@example.com",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"\r",
													"var formKey = pm.collectionVariables.get(\"formKey\");\r",
													"var submissionKey = pm.collectionVariables.get(\"submissionKey\");\r",
													"var textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let field_Key = \"__field_\" + textboxElement_Key;\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key, \"simple@example.com\");\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "8.2. Submit form which enter an email to the element",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "disposable.style.email.with+symbol@example.com",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"\r",
													"var formKey = pm.collectionVariables.get(\"formKey\");\r",
													"var submissionKey = pm.collectionVariables.get(\"submissionKey\");\r",
													"var textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let field_Key = \"__field_\" + textboxElement_Key;\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key, \"disposable.style.email.with+symbol@example.com\");\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "8.3. Submit form which enter an email to the element",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "1234567890123456789012345678901234567890123456789012345678901234+x@example.com",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"\r",
													"var formKey = pm.collectionVariables.get(\"formKey\");\r",
													"var submissionKey = pm.collectionVariables.get(\"submissionKey\");\r",
													"var textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let field_Key = \"__field_\" + textboxElement_Key;\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key, \"1234567890123456789012345678901234567890123456789012345678901234+x@example.com\");\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "8.4. Submit form which enter an email to the element",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "example-indeed@strange-example.inininini",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"\r",
													"var formKey = pm.collectionVariables.get(\"formKey\");\r",
													"var submissionKey = pm.collectionVariables.get(\"submissionKey\");\r",
													"var textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let field_Key = \"__field_\" + textboxElement_Key;\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key, \"example-indeed@strange-example.inininini\");\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "9.1. Invalid - Submit form which which enter a non-email to the element -1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"let textboxElement_Key = pm.collectionVariables.get('textboxElement_Key');\r",
													"let textboxElement_pattern = pm.collectionVariables.get('textboxElement_pattern');\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(textboxElement_Key, textboxElement_pattern);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "Abc.example.com",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "9.2. Invalid - Submit form which which enter a non-email to the element - 2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"let textboxElement_Key = pm.collectionVariables.get('textboxElement_Key');\r",
													"let textboxElement_pattern = pm.collectionVariables.get('textboxElement_pattern');\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(textboxElement_Key, textboxElement_pattern);\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "a\"b(c)d,e:f;g<h>i[j\\k]l@example.com",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "9.3. Invalid - Submit form which which enter a non-email to the element - 3",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"let textboxElement_Key = pm.collectionVariables.get('textboxElement_Key');\r",
													"let textboxElement_pattern = pm.collectionVariables.get('textboxElement_pattern');\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(textboxElement_Key, textboxElement_pattern);\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "this is\"not\\allowed@example.com",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=17434",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "17434"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form which contains text element - Date (DD/MM/YYYY)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody = pm.response.json();\r",
													"var formElements = responseBody.formElements;\r",
													"\r",
													"pm.collectionVariables.set(\"formKey\", responseBody.key);\r",
													"var textboxElement = formElements.find(x => x.contentType === 'TextboxElementBlock');\r",
													"if (textboxElement) {\r",
													"    pm.collectionVariables.set(\"textboxElement_Key\", textboxElement.key);\r",
													"    pm.collectionVariables.set(\"textboxElement_pattern\", textboxElement.properties.validators[0].model.message);\r",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "10. Submit form with valid date value in the element",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "01/11/2024",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"\r",
													"var formKey = pm.collectionVariables.get(\"formKey\");\r",
													"var submissionKey = pm.collectionVariables.get(\"submissionKey\");\r",
													"var textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let field_Key = \"__field_\" + textboxElement_Key;\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key, \"01/11/2024\");\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "11.1. Invalid - Submit form with invalid date value in the element - 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"let textboxElement_Key = pm.collectionVariables.get('textboxElement_Key');\r",
													"let textboxElement_pattern = pm.collectionVariables.get('textboxElement_pattern');\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(textboxElement_Key, textboxElement_pattern);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "01/13/2024",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "11.1. Invalid - Submit form with invalid date value in the element - 2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"let textboxElement_Key = pm.collectionVariables.get('textboxElement_Key');\r",
													"let textboxElement_pattern = pm.collectionVariables.get('textboxElement_pattern');\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(textboxElement_Key, textboxElement_pattern);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "01112024",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=17437",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "17437"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form which contains text element - Date (MM/DD/YYYY)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody = pm.response.json();\r",
													"var formElements = responseBody.formElements;\r",
													"\r",
													"pm.collectionVariables.set(\"formKey\", responseBody.key);\r",
													"var textboxElement = formElements.find(x => x.contentType === 'TextboxElementBlock');\r",
													"if (textboxElement) {\r",
													"    pm.collectionVariables.set(\"textboxElement_Key\", textboxElement.key);\r",
													"    pm.collectionVariables.set(\"textboxElement_pattern\", textboxElement.properties.validators[0].model.message);\r",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "12. Submit form with valid date value in the element",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "01/30/2024",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"\r",
													"var formKey = pm.collectionVariables.get(\"formKey\");\r",
													"var submissionKey = pm.collectionVariables.get(\"submissionKey\");\r",
													"var textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let field_Key = \"__field_\" + textboxElement_Key;\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key, \"01/30/2024\");\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "13.1. Invalid - Submit form with invalid date value in the element - 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"let textboxElement_Key = pm.collectionVariables.get('textboxElement_Key');\r",
													"let textboxElement_pattern = pm.collectionVariables.get('textboxElement_pattern');\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(textboxElement_Key, textboxElement_pattern);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "30/12/2024",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "13.1. Invalid - Submit form with invalid date value in the element - 2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"let textboxElement_Key = pm.collectionVariables.get('textboxElement_Key');\r",
													"let textboxElement_pattern = pm.collectionVariables.get('textboxElement_pattern');\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(textboxElement_Key, textboxElement_pattern);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "01/30/24",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=18434",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "18434"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form which contains text element - Date (YYYY-MM-DD)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody = pm.response.json();\r",
													"var formElements = responseBody.formElements;\r",
													"\r",
													"pm.collectionVariables.set(\"formKey\", responseBody.key);\r",
													"var textboxElement = formElements.find(x => x.contentType === 'TextboxElementBlock');\r",
													"if (textboxElement) {\r",
													"    pm.collectionVariables.set(\"textboxElement_Key\", textboxElement.key);\r",
													"    pm.collectionVariables.set(\"textboxElement_pattern\", textboxElement.properties.validators[0].model.message);\r",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "14. Submit form with valid date value in the element",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "2019-12-20",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"\r",
													"var formKey = pm.collectionVariables.get(\"formKey\");\r",
													"var submissionKey = pm.collectionVariables.get(\"submissionKey\");\r",
													"var textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let field_Key = \"__field_\" + textboxElement_Key;\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key, \"2019-12-20\");\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "15. Invalid - Submit form with invalid date value in the element - 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"let textboxElement_Key = pm.collectionVariables.get('textboxElement_Key');\r",
													"let textboxElement_pattern = pm.collectionVariables.get('textboxElement_pattern');\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(textboxElement_Key, textboxElement_pattern);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "20-12-2019",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=18437",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "18437"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form which contains text element - mix Date validators",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody = pm.response.json();\r",
													"var formElements = responseBody.formElements;\r",
													"\r",
													"pm.collectionVariables.set(\"formKey\", responseBody.key);\r",
													"var textboxElement = formElements.find(x => x.contentType === 'TextboxElementBlock');\r",
													"if (textboxElement) {\r",
													"    pm.collectionVariables.set(\"textboxElement_Key\", textboxElement.key);\r",
													"    pm.collectionVariables.set(\"dateDDMMYYYYValidator_Message\", textboxElement.properties.validators[0].model.message);\r",
													"    pm.collectionVariables.set(\"dateMMDDYYYYValidator_Message\", textboxElement.properties.validators[1].model.message);\r",
													"    pm.collectionVariables.set(\"dateYYYYMMDDValidator_Message\", textboxElement.properties.validators[2].model.message);\r",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "16.1. Submit form with valid date value in the element - DD/MM/YYYY",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "01/11/2024",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"\r",
													"var formKey = pm.collectionVariables.get(\"formKey\");\r",
													"var submissionKey = pm.collectionVariables.get(\"submissionKey\");\r",
													"var textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let field_Key = \"__field_\" + textboxElement_Key;\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key, \"01/11/2024\");\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "16.2. Submit form with valid date value in the element - MM/DD/YYYY",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "12/31/2023",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"\r",
													"var formKey = pm.collectionVariables.get(\"formKey\");\r",
													"var submissionKey = pm.collectionVariables.get(\"submissionKey\");\r",
													"var textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let field_Key = \"__field_\" + textboxElement_Key;\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key, \"12/31/2023\");\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "16.3. Submit form with valid date value in the element - YYYY-MM-DD",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "2019-01-01",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"\r",
													"var formKey = pm.collectionVariables.get(\"formKey\");\r",
													"var submissionKey = pm.collectionVariables.get(\"submissionKey\");\r",
													"var textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let field_Key = \"__field_\" + textboxElement_Key;\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key, \"2019-01-01\");\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "17. Invalid - Submit form with invalid date value in the element.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"let textboxElement_Key = pm.collectionVariables.get('textboxElement_Key');\r",
													"let textboxElement_pattern = pm.collectionVariables.get('textboxElement_pattern');\r",
													"\r",
													"verifyResponseCode(400);\r",
													"\r",
													"verifyErrorMessageContains(textboxElement_Key, dateDDMMYYYYValidator_Message);\r",
													"verifyErrorMessageContains(textboxElement_Key, dateMMDDYYYYValidator_Message);\r",
													"verifyErrorMessageContains(textboxElement_Key, dateYYYYMMDDValidator_Message);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "01-08-2024",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=18440",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "18440"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form which contains text element - Required & Regular expression",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody = pm.response.json();\r",
													"var formElements = responseBody.formElements;\r",
													"\r",
													"pm.collectionVariables.set(\"formKey\", responseBody.key);\r",
													"var textboxElement = formElements.find(x => x.contentType === 'TextboxElementBlock');\r",
													"if (textboxElement) {\r",
													"    pm.collectionVariables.set(\"textboxElement_Key\", textboxElement.key);\r",
													"    pm.collectionVariables.set(\"textboxElement_pattern1\", textboxElement.properties.validators[0].model.message);\r",
													"    pm.collectionVariables.set(\"textboxElement_pattern2\", textboxElement.properties.validators[1].model.message);\r",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "18. Submit form with matching regular expression",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "Test_123",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"\r",
													"var formKey = pm.collectionVariables.get(\"formKey\");\r",
													"var submissionKey = pm.collectionVariables.get(\"submissionKey\");\r",
													"var textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let field_Key = \"__field_\" + textboxElement_Key;\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key, \"Test_123\");\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "19.1. Invalid - Submit form with not matching regular expression - No key value",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"let textboxElement_Key = pm.collectionVariables.get('textboxElement_Key');\r",
													"let textboxElement_pattern1 = pm.collectionVariables.get('textboxElement_pattern1');\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(textboxElement_Key, textboxElement_pattern1);\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "19.2. Invalid - Submit form with not matching regular expression - No matching regular expression",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"let textboxElement_Key = pm.collectionVariables.get('textboxElement_Key');\r",
													"let textboxElement_pattern2 = pm.collectionVariables.get('textboxElement_pattern2');\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(textboxElement_Key, textboxElement_pattern2);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "Test_123+test",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Textarea Element",
							"item": [
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=18444",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "18444"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form which contains textarea element - Default",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"var formElements = responseBody.formElements;\r",
													"\r",
													"pm.collectionVariables.set(\"formKey\", responseBody.key);\r",
													"pm.collectionVariables.set(\"textareaElement_Key\", formElements.find(x => x.contentType == 'TextareaElementBlock').key);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "1.1 Submit form without element value (empty)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textareaElement_Key}}",
													"value": "",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"\r",
													"var formKey = pm.collectionVariables.get(\"formKey\");\r",
													"var submissionKey = pm.collectionVariables.get(\"submissionKey\");\r",
													"var textareaElement_Key = pm.collectionVariables.get(\"textareaElement_Key\");\r",
													"let field_Key = \"__field_\" + textareaElement_Key;\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textareaElement_Key, \"\");\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "1.2 Submit form without element value (no key value)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"\r",
													"var formKey = pm.collectionVariables.get(\"formKey\");\r",
													"var submissionKey = pm.collectionVariables.get(\"submissionKey\");\r",
													"var textareaElement_Key = pm.collectionVariables.get(\"textareaElement_Key\");\r",
													"let field_Key = \"__field_\" + textareaElement_Key;\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textareaElement_Key, null);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "2. Submit form which enter value to the element.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textareaElement_Key}}",
													"value": "Each provincial committee of the Communist Party is headed by a Secretary (Bí thư). The Secretary is de facto leader of the province.",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"\r",
													"var formKey = pm.collectionVariables.get(\"formKey\");\r",
													"var submissionKey = pm.collectionVariables.get(\"submissionKey\");\r",
													"var textareaElement_Key = pm.collectionVariables.get(\"textareaElement_Key\");\r",
													"let field_Key = \"__field_\" + textareaElement_Key;\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textareaElement_Key, \"Each provincial committee of the Communist Party is headed by a Secretary (Bí thư). The Secretary is de facto leader of the province.\");\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "3.  Submit form which enter a long string into the element.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textareaElement_Key}}",
													"value": "According to the census results of April 1, 2023, the population of Vietnam is 103,403,000 people.[2] The most populous top-level administrative unit in Vietnam is Hồ Chí Minh City, one of the five centrally governed cities. It has 9,125,000 people liv",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"\r",
													"var formKey = pm.collectionVariables.get(\"formKey\");\r",
													"var submissionKey = pm.collectionVariables.get(\"submissionKey\");\r",
													"var textareaElement_Key = pm.collectionVariables.get(\"textareaElement_Key\");\r",
													"let field_Key = \"__field_\" + textareaElement_Key;\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textareaElement_Key, \"According to the census results of April 1, 2023, the population of Vietnam is 103,403,000 people.[2] The most populous top-level administrative unit in Vietnam is Hồ Chí Minh City, one of the five centrally governed cities. It has 9,125,000 people liv\");\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=18447",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "18447"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form which contains textarea element - Required",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"var formElements = responseBody.formElements;\r",
													"\r",
													"pm.collectionVariables.set(\"formKey\", responseBody.key);\r",
													"pm.collectionVariables.set(\"textareaElement_Key\", formElements.find(x => x.contentType == 'TextareaElementBlock').key);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "4.1. Invalid - Submit form without element value (empty)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"let textareaElement_Key = pm.collectionVariables.get('textareaElement_Key');\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(textareaElement_Key, \"This field is required.\")\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textareaElement_Key}}",
													"value": "",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "4.2. Invalid - Submit form without element value (no key value)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"let textareaElement_Key = pm.collectionVariables.get('textareaElement_Key');\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(textareaElement_Key, \"This field is required.\")\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "5. Submit form which enter value to the element.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textareaElement_Key}}",
													"value": "Form contains textarea element and element is required. Submit form which enter value to the element.",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"\r",
													"var formKey = pm.collectionVariables.get(\"formKey\");\r",
													"var submissionKey = pm.collectionVariables.get(\"submissionKey\");\r",
													"var textareaElement_Key = pm.collectionVariables.get(\"textareaElement_Key\");\r",
													"let field_Key = \"__field_\" + textareaElement_Key;\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textareaElement_Key, \"Form contains textarea element and element is required. Submit form which enter value to the element.\");\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=18450",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "18450"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form which contains Textarea element - Regular expression",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody = pm.response.json();\r",
													"var formElements = responseBody.formElements;\r",
													"\r",
													"pm.collectionVariables.set(\"formKey\", responseBody.key);\r",
													"var textareaElement = formElements.find(x => x.contentType === 'TextareaElementBlock');\r",
													"if (textareaElement) {\r",
													"    pm.collectionVariables.set(\"textareaElement_Key\", textareaElement.key);\r",
													"    pm.collectionVariables.set(\"textareaElement_pattern\", textareaElement.properties.validators[0].model.message);\r",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "6. Submit form with matching to regular expression",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textareaElement_Key}}",
													"value": "my_user123",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"\r",
													"var formKey = pm.collectionVariables.get(\"formKey\");\r",
													"var submissionKey = pm.collectionVariables.get(\"submissionKey\");\r",
													"var textareaElement_Key = pm.collectionVariables.get(\"textareaElement_Key\");\r",
													"let field_Key = \"__field_\" + textareaElement_Key;\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textareaElement_Key, \"my_user123\");\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "7. Invalid - Submit form with not matching to regular expression",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"let textareaElement_Key = pm.collectionVariables.get('textareaElement_Key');\r",
													"let textareaElement_pattern = pm.collectionVariables.get('textareaElement_pattern');\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(textareaElement_Key, textareaElement_pattern)\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textareaElement_Key}}",
													"value": "My_User123444444444444",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=18453",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "18453"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form which contains Textarea element - Required & Regular expression",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody = pm.response.json();\r",
													"var formElements = responseBody.formElements;\r",
													"\r",
													"pm.collectionVariables.set(\"formKey\", responseBody.key);\r",
													"var textareaElement = formElements.find(x => x.contentType === 'TextareaElementBlock');\r",
													"if (textareaElement) {\r",
													"    pm.collectionVariables.set(\"textareaElement_Key\", textareaElement.key);\r",
													"    pm.collectionVariables.set(\"textareaElement_pattern1\", textareaElement.properties.validators[0].model.message);\r",
													"    pm.collectionVariables.set(\"textareaElement_pattern2\", textareaElement.properties.validators[1].model.message);\r",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "8. Submit form with matching regular expression",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textareaElement_Key}}",
													"value": "test_123",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"\r",
													"var formKey = pm.collectionVariables.get(\"formKey\");\r",
													"var submissionKey = pm.collectionVariables.get(\"submissionKey\");\r",
													"var textareaElement_Key = pm.collectionVariables.get(\"textareaElement_Key\");\r",
													"let field_Key = \"__field_\" + textareaElement_Key;\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textareaElement_Key, \"test_123\");\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "9.1. Invalid - Submit form with not matching regular expression - No key value",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"let textareaElement_Key = pm.collectionVariables.get('textareaElement_Key');\r",
													"let textareaElement_pattern1 = pm.collectionVariables.get('textareaElement_pattern1');\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(textareaElement_Key, textareaElement_pattern1)\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "9.2. Invalid - Submit form with not matching regular expression - No matching regular expression",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"let textareaElement_Key = pm.collectionVariables.get('textareaElement_Key');\r",
													"let textareaElement_pattern2 = pm.collectionVariables.get('textareaElement_pattern2');\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(textareaElement_Key, textareaElement_pattern2)\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textareaElement_Key}}",
													"value": "Test_123+test",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Number Element",
							"item": [
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=18457",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "18457"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form which contains Number element - Default",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"var formElements = responseBody.formElements;\r",
													"\r",
													"pm.collectionVariables.set(\"formKey\", responseBody.key);\r",
													"pm.collectionVariables.set(\"numberElement_Key\", formElements.find(x => x.contentType == 'NumberElementBlock').key);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "1.1 Submit form without element value (empty)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{numberElement_Key}}",
													"value": "",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"\r",
													"var formKey = pm.collectionVariables.get(\"formKey\");\r",
													"var submissionKey = pm.collectionVariables.get(\"submissionKey\");\r",
													"var numberElement_Key = pm.collectionVariables.get(\"numberElement_Key\");\r",
													"let field_Key = \"__field_\" + numberElement_Key;\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(numberElement_Key, null);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "1.2 Submit form without element value (no key value)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"\r",
													"var formKey = pm.collectionVariables.get(\"formKey\");\r",
													"var submissionKey = pm.collectionVariables.get(\"submissionKey\");\r",
													"var numberElement_Key = pm.collectionVariables.get(\"numberElement_Key\");\r",
													"let field_Key = \"__field_\" + numberElement_Key;\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(numberElement_Key, null);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "2.1. Submit form which enter number value to the element - White space",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{numberElement_Key}}",
													"value": " 1000 ",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"\r",
													"var formKey = pm.collectionVariables.get(\"formKey\");\r",
													"var submissionKey = pm.collectionVariables.get(\"submissionKey\");\r",
													"var numberElement_Key = pm.collectionVariables.get(\"numberElement_Key\");\r",
													"let field_Key = \"__field_\" + numberElement_Key;\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(numberElement_Key, 1000);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "2.2. Submit form which enter number value to the element - Positive Sign",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{numberElement_Key}}",
													"value": "+1000",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"\r",
													"var formKey = pm.collectionVariables.get(\"formKey\");\r",
													"var submissionKey = pm.collectionVariables.get(\"submissionKey\");\r",
													"var numberElement_Key = pm.collectionVariables.get(\"numberElement_Key\");\r",
													"let field_Key = \"__field_\" + numberElement_Key;\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(numberElement_Key, 1000);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "2.3. Submit form which enter number value to the element - Negative Sign",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{numberElement_Key}}",
													"value": "-1000",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"\r",
													"var formKey = pm.collectionVariables.get(\"formKey\");\r",
													"var submissionKey = pm.collectionVariables.get(\"submissionKey\");\r",
													"var numberElement_Key = pm.collectionVariables.get(\"numberElement_Key\");\r",
													"let field_Key = \"__field_\" + numberElement_Key;\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(numberElement_Key, -1000);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "2.4. Submit form which enter number value to the element - Decimal point",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{numberElement_Key}}",
													"value": "12345.563",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"\r",
													"var formKey = pm.collectionVariables.get(\"formKey\");\r",
													"var submissionKey = pm.collectionVariables.get(\"submissionKey\");\r",
													"var numberElement_Key = pm.collectionVariables.get(\"numberElement_Key\");\r",
													"let field_Key = \"__field_\" + numberElement_Key;\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(numberElement_Key, 12345.563);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "2.5. Submit form which enter number value to the element - Thousand point",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{numberElement_Key}}",
													"value": "1,000,000,00",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"\r",
													"var formKey = pm.collectionVariables.get(\"formKey\");\r",
													"var submissionKey = pm.collectionVariables.get(\"submissionKey\");\r",
													"var numberElement_Key = pm.collectionVariables.get(\"numberElement_Key\");\r",
													"let field_Key = \"__field_\" + numberElement_Key;\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(numberElement_Key, 100000000);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "3.1. Invalid - Submit form which enter non-number value to the element - π",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"let numberElement_Key = pm.collectionVariables.get('numberElement_Key');\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(numberElement_Key, \"Enter a valid number.\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{numberElement_Key}}",
													"value": "π",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "3.2. Invalid - Submit form which enter non-number value to the element - 1/10",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"let numberElement_Key = pm.collectionVariables.get('numberElement_Key');\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(numberElement_Key, \"Enter a valid number.\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{numberElement_Key}}",
													"value": "1/10",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=18460",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "18460"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form which contains number element - Required",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"var formElements = responseBody.formElements;\r",
													"var numberElement = formElements.find(x => x.contentType == 'NumberElementBlock');\r",
													"pm.collectionVariables.set(\"formKey\", responseBody.key);\r",
													"\r",
													"if(numberElement){\r",
													"    pm.collectionVariables.set(\"numberElement_Key\", numberElement.key);\r",
													"    pm.collectionVariables.set(\"validNumberMessage\", numberElement.properties.validators[0].model.message);\r",
													"    pm.collectionVariables.set(\"requiredMessage\", numberElement.properties.validators[1].model.message);\r",
													"}\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "4.1. Invalid - Submit form without element value (empty)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"let requiredMessage = pm.collectionVariables.get('requiredMessage');\r",
													"let numberElement_Key = pm.collectionVariables.get('numberElement_Key');\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(numberElement_Key, requiredMessage);\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{numberElement_Key}}",
													"value": "",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "4.2. Invalid - Submit form without element value (no key value)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"let requiredMessage = pm.collectionVariables.get('requiredMessage');\r",
													"let numberElement_Key = pm.collectionVariables.get('numberElement_Key');\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(numberElement_Key, requiredMessage);\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "5. Submit form which enter valid value to the element.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{numberElement_Key}}",
													"value": "-0.3333",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"\r",
													"var formKey = pm.collectionVariables.get(\"formKey\");\r",
													"var submissionKey = pm.collectionVariables.get(\"submissionKey\");\r",
													"var numberElement_Key = pm.collectionVariables.get(\"numberElement_Key\");\r",
													"let field_Key = \"__field_\" + numberElement_Key;\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(numberElement_Key, -0.3333);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=18463",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "18463"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form which contains Number element - Integer",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody = pm.response.json();\r",
													"var formElements = responseBody.formElements;\r",
													"var numberElement = formElements.find(x => x.contentType == 'NumberElementBlock');\r",
													"var validators = numberElement.properties.validators;\r",
													"\r",
													"for(var i = 0; i<  validators.length; i++){\r",
													"    if (validators[i].type == 'NumericValidator') {\r",
													"        pm.collectionVariables.set(\"validNumberMessage\", validators[i].model.message);\r",
													"    }\r",
													"    else if (validators[i].type == 'IntegerValidator') {\r",
													"        pm.collectionVariables.set(\"integerMessage\", validators[i].model.message);\r",
													"    }\r",
													"}\r",
													"\r",
													"pm.collectionVariables.set(\"formKey\", responseBody.key);\r",
													"\r",
													"if (numberElement) {\r",
													"    pm.collectionVariables.set(\"numberElement_Key\", numberElement.key);\r",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "6.1. Submit form which enter integer number to the element - (-2147483648)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{numberElement_Key}}",
													"value": "-2147483648",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"\r",
													"var formKey = pm.collectionVariables.get(\"formKey\");\r",
													"var submissionKey = pm.collectionVariables.get(\"submissionKey\");\r",
													"var numberElement_Key = pm.collectionVariables.get(\"numberElement_Key\");\r",
													"let field_Key = \"__field_\" + numberElement_Key;\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(numberElement_Key, -2147483648);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "6.2. Submit form which enter integer number to the element - (0)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{numberElement_Key}}",
													"value": "0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"\r",
													"var formKey = pm.collectionVariables.get(\"formKey\");\r",
													"var submissionKey = pm.collectionVariables.get(\"submissionKey\");\r",
													"var numberElement_Key = pm.collectionVariables.get(\"numberElement_Key\");\r",
													"let field_Key = \"__field_\" + numberElement_Key;\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(numberElement_Key, 0);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "6.3. Submit form which enter integer number to the element - (2147483647)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{numberElement_Key}}",
													"value": "2147483647",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"\r",
													"var formKey = pm.collectionVariables.get(\"formKey\");\r",
													"var submissionKey = pm.collectionVariables.get(\"submissionKey\");\r",
													"var numberElement_Key = pm.collectionVariables.get(\"numberElement_Key\");\r",
													"let field_Key = \"__field_\" + numberElement_Key;\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(numberElement_Key, 2147483647);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "7.1. Invalid - Submit form which enter invalid value - (test)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"let numberElement_Key = pm.collectionVariables.get('numberElement_Key');\r",
													"let integerMessage = pm.collectionVariables.get('integerMessage');\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(numberElement_Key, integerMessage)\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{numberElement_Key}}",
													"value": "test",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "7.2. Invalid - Submit form which enter invalid value - Decimal point",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"let numberElement_Key = pm.collectionVariables.get('numberElement_Key');\r",
													"let integerMessage = pm.collectionVariables.get('integerMessage');\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(numberElement_Key, integerMessage)\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{numberElement_Key}}",
													"value": "123.456",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "7.3. Invalid - Submit form which enter invalid value - Thousand point",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"let numberElement_Key = pm.collectionVariables.get('numberElement_Key');\r",
													"let integerMessage = pm.collectionVariables.get('integerMessage');\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(numberElement_Key, integerMessage)\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{numberElement_Key}}",
													"value": "1,000,000",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=18467",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "18467"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form which contains Number element - Positive Integer",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody = pm.response.json();\r",
													"var formElements = responseBody.formElements;\r",
													"var numberElement = formElements.find(x => x.contentType == 'NumberElementBlock');\r",
													"var validators = numberElement.properties.validators;\r",
													"\r",
													"for(var i = 0; i<  validators.length; i++){\r",
													"    if (validators[i].type == 'NumericValidator') {\r",
													"        pm.collectionVariables.set(\"validNumberMessage\", validators[i].model.message);\r",
													"    }\r",
													"    else if (validators[i].type == 'IntegerValidator') {\r",
													"        pm.collectionVariables.set(\"integerMessage\", validators[i].model.message);\r",
													"    }\r",
													"    else if (validators[i].type == 'PositiveIntegerValidator') {\r",
													"        pm.collectionVariables.set(\"positiveIntegerMessage\", validators[i].model.message);\r",
													"    }\r",
													"}\r",
													"\r",
													"pm.collectionVariables.set(\"formKey\", responseBody.key);\r",
													"\r",
													"if (numberElement) {\r",
													"    pm.collectionVariables.set(\"numberElement_Key\", numberElement.key);\r",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "8.1. Submit form which enter positive integer number to the element - (2147483648)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{numberElement_Key}}",
													"value": "2147483648",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"\r",
													"var formKey = pm.collectionVariables.get(\"formKey\");\r",
													"var submissionKey = pm.collectionVariables.get(\"submissionKey\");\r",
													"var numberElement_Key = pm.collectionVariables.get(\"numberElement_Key\");\r",
													"let field_Key = \"__field_\" + numberElement_Key;\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(numberElement_Key, 2147483648);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "9. Invalid - Submit form which enter invalid value",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"let numberElement_Key = pm.collectionVariables.get('numberElement_Key');\r",
													"let positiveIntegerMessage = pm.collectionVariables.get('positiveIntegerMessage');\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(numberElement_Key, positiveIntegerMessage)\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{numberElement_Key}}",
													"value": "-2147483648",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=18471",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "18471"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form which contains Number element - Required & Integer & Positive Integer",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"setFormKey();\r",
													"setElementKey('NumberElementBlock');\r",
													"setValidatorMessage('NumberElementBlock');\r",
													"\r",
													"var responseBody = pm.response.json();\r",
													"var formElements = responseBody.formElements;\r",
													"var numberElement = formElements.find(x => x.contentType == 'NumberElementBlock');\r",
													"var validators = numberElement.properties.validators;\r",
													"\r",
													"for(var i = 0; i<  validators.length; i++){\r",
													"    if (validators[i].type == 'NumericValidator') {\r",
													"        pm.collectionVariables.set(\"validNumberMessage\", validators[i].model.message);\r",
													"    }\r",
													"    else if (validators[i].type == 'IntegerValidator') {\r",
													"        pm.collectionVariables.set(\"integerMessage\", validators[i].model.message);\r",
													"    }\r",
													"    else if (validators[i].type == 'PositiveIntegerValidator') {\r",
													"        pm.collectionVariables.set(\"positiveIntegerMessage\", validators[i].model.message);\r",
													"    }\r",
													"    else if (validators[i].type == 'RequiredValidator') {\r",
													"        pm.collectionVariables.set(\"requiredValidator\", validators[i].model.message);\r",
													"    }\r",
													"}\r",
													"\r",
													"pm.collectionVariables.set(\"formKey\", responseBody.key);\r",
													"\r",
													"if (numberElement) {\r",
													"    pm.collectionVariables.set(\"numberElement_Key\", numberElement.key);\r",
													"}\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "10. Submit form which enter valid value",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{numberElement_Key}}",
													"value": "2147483647",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"\r",
													"var formKey = pm.collectionVariables.get(\"formKey\");\r",
													"var submissionKey = pm.collectionVariables.get(\"submissionKey\");\r",
													"var numberElement_Key = pm.collectionVariables.get(\"numberElement_Key\");\r",
													"let field_Key = \"__field_\" + numberElement_Key;\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(numberElement_Key, 2147483647);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "11.1. Invalid - Submit form which enter valid value - (0)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"let numberElement_Key = pm.collectionVariables.get('numberElement_Key');\r",
													"let positiveIntegerMessage = pm.collectionVariables.get('positiveIntegerMessage');\r",
													"const expectedMessage =\r",
													"[\r",
													"    \"Enter a valid positive integer.\"\r",
													"]\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageEqual(numberElement_Key, expectedMessage);\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{numberElement_Key}}",
													"value": "0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "11.3. Invalid - Submit form which enter valid value - (-1)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"let numberElement_Key = pm.collectionVariables.get('numberElement_Key');\r",
													"let positiveIntegerMessage = pm.collectionVariables.get('positiveIntegerMessage');\r",
													"const expectedMessage =\r",
													"[\r",
													"    \"Enter a valid positive integer.\"\r",
													"]\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageEqual(numberElement_Key, expectedMessage);\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{numberElement_Key}}",
													"value": "-1",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "11.4. Invalid - Submit form which enter valid value - (10.5)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"let numberElement_Key = pm.collectionVariables.get('numberElement_Key');\r",
													"let positiveIntegerMessage = pm.collectionVariables.get('positiveIntegerMessage');\r",
													"const expectedMessage =\r",
													"[\r",
													"    \"Enter a valid positive integer.\"\r",
													"]\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageEqual(numberElement_Key, expectedMessage);\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{numberElement_Key}}",
													"value": "10.5",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "11.5. Invalid - Submit form which enter valid value - (1,000)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"let numberElement_Key = pm.collectionVariables.get('numberElement_Key');\r",
													"let positiveIntegerMessage = pm.collectionVariables.get('positiveIntegerMessage');\r",
													"const expectedMessage =\r",
													"[\r",
													"    \"Enter a valid positive integer.\"\r",
													"]\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageEqual(numberElement_Key, expectedMessage);\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{numberElement_Key}}",
													"value": "-1,000",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Range Element",
							"item": [
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=18476",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "18476"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form contains Range element - Default",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
													"pm.collectionVariables.set(\"rangeElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'RangeElementBlock').key);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "1.1. Submit form with valid value - (0)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{rangeElement_Key}}",
													"value": "0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"\r",
													"var formKey = pm.collectionVariables.get(\"formKey\");\r",
													"var submissionKey = pm.collectionVariables.get(\"submissionKey\");\r",
													"var rangeElement_Key = pm.collectionVariables.get(\"rangeElement_Key\");\r",
													"let field_Key = \"__field_\" + rangeElement_Key;\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(rangeElement_Key, 0);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "1.2. Submit form with valid value - (10)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{rangeElement_Key}}",
													"value": "10",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"\r",
													"var formKey = pm.collectionVariables.get(\"formKey\");\r",
													"var submissionKey = pm.collectionVariables.get(\"submissionKey\");\r",
													"var rangeElement_Key = pm.collectionVariables.get(\"rangeElement_Key\");\r",
													"let field_Key = \"__field_\" + rangeElement_Key;\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(rangeElement_Key, 10);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "1.3. Submit form with valid value - (5)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{rangeElement_Key}}",
													"value": "5",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"\r",
													"var formKey = pm.collectionVariables.get(\"formKey\");\r",
													"var submissionKey = pm.collectionVariables.get(\"submissionKey\");\r",
													"var rangeElement_Key = pm.collectionVariables.get(\"rangeElement_Key\");\r",
													"let field_Key = \"__field_\" + rangeElement_Key;\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(rangeElement_Key, 5);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "2.1. Invalid - Submit form with invalid value - (-1)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"let rangeElement_Key = pm.collectionVariables.get('rangeElement_Key');\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(rangeElement_Key, \"Unexpected value is not accepted.\");\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{rangeElement_Key}}",
													"value": "-1",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "2.2. Invalid - Submit form with invalid value - (11)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"let rangeElement_Key = pm.collectionVariables.get('rangeElement_Key');\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(rangeElement_Key, \"Unexpected value is not accepted.\");\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{rangeElement_Key}}",
													"value": "11",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "2.3. Invalid - Submit form with invalid value - (test@@)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"let rangeElement_Key = pm.collectionVariables.get('rangeElement_Key');\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(rangeElement_Key, \"Unexpected value is not accepted.\");\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{rangeElement_Key}}",
													"value": "11",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=18479",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "18479"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form contains Range element - [min,max,step] =[2,20,2]",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
													"pm.collectionVariables.set(\"rangeElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'RangeElementBlock').key);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "3.1. Submit form with valid value - (2)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{rangeElement_Key}}",
													"value": "2",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"\r",
													"var formKey = pm.collectionVariables.get(\"formKey\");\r",
													"var submissionKey = pm.collectionVariables.get(\"submissionKey\");\r",
													"var rangeElement_Key = pm.collectionVariables.get(\"rangeElement_Key\");\r",
													"let field_Key = \"__field_\" + rangeElement_Key;\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(rangeElement_Key, 2);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "3.2. Submit form with valid value - (20)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{rangeElement_Key}}",
													"value": "20",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"\r",
													"var formKey = pm.collectionVariables.get(\"formKey\");\r",
													"var submissionKey = pm.collectionVariables.get(\"submissionKey\");\r",
													"var rangeElement_Key = pm.collectionVariables.get(\"rangeElement_Key\");\r",
													"let field_Key = \"__field_\" + rangeElement_Key;\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(rangeElement_Key, 20);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "4.1. AFORM-4010 - Invalid - Submit form with invalid value - (0)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"let rangeElement_Key = pm.collectionVariables.get('rangeElement_Key');\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(rangeElement_Key, \"Range value must be in range of [2-20]'s value with Step = 2\");\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{rangeElement_Key}}",
													"value": "0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "4.2. AFORM-4010 - Invalid - Submit form with invalid value - (22)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"let rangeElement_Key = pm.collectionVariables.get('rangeElement_Key');\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(rangeElement_Key, \"Range value must be in range of [2-20]'s value with Step = 2\");\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{rangeElement_Key}}",
													"value": "22",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "4.3. AFORM-4010- Invalid - Submit form with invalid value - (11)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"let rangeElement_Key = pm.collectionVariables.get('rangeElement_Key');\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(rangeElement_Key, \"Range value must be in range of [2-20]'s value with Step = 2\");\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{rangeElement_Key}}",
													"value": "11",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Url Element",
							"item": [
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=18483",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "18483"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form contains Url element - Default",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
													"\r",
													"pm.collectionVariables.set(\"urlElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'UrlElementBlock').key);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "1.1. Submit form with valid value - 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let urlElement_Key = pm.collectionVariables.get(\"urlElement_Key\");\r",
													"let element_Value = requestData.getElementValue(urlElement_Key);\r",
													"\r",
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"pm.collectionVariables.set(\"element_Value\", element_Value);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{urlElement_Key}}",
													"value": "https://www.google.com/maps",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let urlElement_Key = pm.collectionVariables.get(\"urlElement_Key\");\r",
													"let element_Value = pm.collectionVariables.get(\"element_Value\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(urlElement_Key, element_Value);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "1.2. Submit form with valid value - 2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let urlElement_Key = pm.collectionVariables.get(\"urlElement_Key\");\r",
													"let element_Value = requestData.getElementValue(urlElement_Key);\r",
													"\r",
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"pm.collectionVariables.set(\"element_Value\", element_Value);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{urlElement_Key}}",
													"value": "https://www.hostinger.com/tutorials/what-is-a-url",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let urlElement_Key = pm.collectionVariables.get(\"urlElement_Key\");\r",
													"let element_Value = pm.collectionVariables.get(\"element_Value\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(urlElement_Key, element_Value);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "1.3. Submit form with valid value - 3",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let urlElement_Key = pm.collectionVariables.get(\"urlElement_Key\");\r",
													"let element_Value = requestData.getElementValue(urlElement_Key);\r",
													"\r",
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"pm.collectionVariables.set(\"element_Value\", element_Value);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{urlElement_Key}}",
													"value": "https://www.hostinger.com/tutorials/?s=Web+hosting",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let urlElement_Key = pm.collectionVariables.get(\"urlElement_Key\");\r",
													"let element_Value = pm.collectionVariables.get(\"element_Value\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(urlElement_Key, element_Value);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "1.4. Submit form with valid value - 4",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let urlElement_Key = pm.collectionVariables.get(\"urlElement_Key\");\r",
													"let element_Value = requestData.getElementValue(urlElement_Key);\r",
													"\r",
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"pm.collectionVariables.set(\"element_Value\", element_Value);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{urlElement_Key}}",
													"value": "http://web.simmons.edu/~grabiner/comm244/weektwo/links.html",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let urlElement_Key = pm.collectionVariables.get(\"urlElement_Key\");\r",
													"let element_Value = pm.collectionVariables.get(\"element_Value\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(urlElement_Key, element_Value);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "2.1. Invalid - Submit form with invalid value - 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"let urlElement_Key = pm.collectionVariables.get(\"urlElement_Key\");\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(urlElement_Key, \"Enter a valid URL.\");\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{urlElement_Key}}",
													"value": "Test123@$%^",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "2.2. Invalid - Submit form with invalid value - 2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"let urlElement_Key = pm.collectionVariables.get(\"urlElement_Key\");\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(urlElement_Key, \"Enter a valid URL.\");\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{urlElement_Key}}",
													"value": "https://www.hostinger.com/tutorials/  s=Web+hosting ",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "2.3. Invalid - Submit form with invalid value - 3",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"let urlElement_Key = pm.collectionVariables.get(\"urlElement_Key\");\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(urlElement_Key, \"Enter a valid URL.\");\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{urlElement_Key}}",
													"value": "/maps",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "2.4. Invalid - Submit form with invalid value - 4",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"let urlElement_Key = pm.collectionVariables.get(\"urlElement_Key\");\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(urlElement_Key, \"Enter a valid URL.\");\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{urlElement_Key}}",
													"value": "https://www.google.com\\maps",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=18487",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "18487"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form contains Range element - Required",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
													"\r",
													"pm.collectionVariables.set(\"urlElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'UrlElementBlock').key);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "3. Submit form with valid value",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let urlElement_Key = pm.collectionVariables.get(\"urlElement_Key\");\r",
													"let element_Value = requestData.getElementValue(urlElement_Key);\r",
													"\r",
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"pm.collectionVariables.set(\"element_Value\", element_Value);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{urlElement_Key}}",
													"value": "http://web.simmons.edu/~grabiner/comm244/weektwo/links.html",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let urlElement_Key = pm.collectionVariables.get(\"urlElement_Key\");\r",
													"let element_Value = pm.collectionVariables.get(\"element_Value\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(urlElement_Key, element_Value);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "4. Invalid - Submit form without value - Empty",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"let urlElement_Key = pm.collectionVariables.get(\"urlElement_Key\");\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(urlElement_Key, \"This field is required.\");\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{urlElement_Key}}",
													"value": "",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "4.2 Invalid - Submit form without value - no key value",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"let urlElement_Key = pm.collectionVariables.get(\"urlElement_Key\");\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(urlElement_Key, \"This field is required.\");\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=18491",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "18491"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form contains URL element - Regular expression",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody = pm.response.json();\r",
													"var urlElement = responseBody.formElements.find(x => x.contentType == 'UrlElementBlock');\r",
													"\r",
													"pm.collectionVariables.set(\"formKey\", responseBody.key);\r",
													"\r",
													"if(urlElement){\r",
													"    pm.collectionVariables.set(\"urlElement_Key\", urlElement.key);\r",
													"    pm.collectionVariables.set(\"regMessage\", urlElement.properties.validators[0].model.message);\r",
													"}\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "5. Submit form with matching value",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let urlElement_Key = pm.collectionVariables.get(\"urlElement_Key\");\r",
													"let element_Value = requestData.getElementValue(urlElement_Key);\r",
													"\r",
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"pm.collectionVariables.set(\"element_Value\", element_Value);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{urlElement_Key}}",
													"value": "https://www.freecodecamp.org",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let urlElement_Key = pm.collectionVariables.get(\"urlElement_Key\");\r",
													"let element_Value = pm.collectionVariables.get(\"element_Value\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(urlElement_Key, element_Value);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "6. Invalid - Submit form with not matching value",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"let urlElement_Key = pm.collectionVariables.get(\"urlElement_Key\");\r",
													"let regMessage = pm.collectionVariables.get(\"regMessage\");\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(urlElement_Key, regMessage);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{urlElement_Key}}",
													"value": "https://www.freecodecamp.org/news",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=18495",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "18495"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form contains URL element - Required & Regular expression",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody = pm.response.json();\r",
													"let urlElement = responseBody.formElements.find(x => x.contentType == 'UrlElementBlock');\r",
													"\r",
													"pm.collectionVariables.set(\"formKey\", responseBody.key);\r",
													"\r",
													"if(urlElement){\r",
													"    pm.collectionVariables.set(\"urlElement_Key\", urlElement.key);\r",
													"    pm.collectionVariables.set(\"requiredMessage\", urlElement.properties.validators[0].model.message);\r",
													"    pm.collectionVariables.set(\"regMessage\", urlElement.properties.validators[1].model.message);\r",
													"}\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "7. Submit form with matching value",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let urlElement_Key = pm.collectionVariables.get(\"urlElement_Key\");\r",
													"let element_Value = requestData.getElementValue(urlElement_Key);\r",
													"\r",
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"pm.collectionVariables.set(\"element_Value\", element_Value);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{urlElement_Key}}",
													"value": "freeCodeCamp.org",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let urlElement_Key = pm.collectionVariables.get(\"urlElement_Key\");\r",
													"let element_Value = pm.collectionVariables.get(\"element_Value\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(urlElement_Key, element_Value);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "8. Invalid - Submit form with not matching value",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"let urlElement_Key = pm.collectionVariables.get(\"urlElement_Key\");\r",
													"let regMessage = pm.collectionVariables.get(\"regMessage\");\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(urlElement_Key, regMessage);\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{urlElement_Key}}",
													"value": "www.freecodecamp.org/news",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "9. Invalid - Submit form without value",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"let urlElement_Key = pm.collectionVariables.get(\"urlElement_Key\");\r",
													"let requiredMessage = pm.collectionVariables.get(\"requiredMessage\");\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(urlElement_Key, requiredMessage);\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{urlElement_Key}}",
													"value": "",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Selection Element",
							"item": [
								{
									"name": "No item",
									"item": [
										{
											"name": "Get GUI form",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{url}}/cms/GetContentGuid?id=18501",
													"host": [
														"{{url}}"
													],
													"path": [
														"cms",
														"GetContentGuid"
													],
													"query": [
														{
															"key": "id",
															"value": "18501"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get a form contains Selection element - Default",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
															"\r",
															"pm.collectionVariables.set(\"selectionElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'SelectionElementBlock').key);\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formGuid}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "1. Submit form without value",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
															"let element_Value = requestData.getElementValue(selectionElement_Key);\r",
															"\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"pm.collectionVariables.set(\"element_Value\", element_Value);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{selectionElement_Key}}",
															"value": "",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
															"let element_Value = pm.collectionVariables.get(\"element_Value\");\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifyFieldValueEqual(selectionElement_Key, element_Value);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "2. Invalid - Submit form with invalid value",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
															"\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(400);\r",
															"verifyErrorMessageContains(selectionElement_Key, \"Unexpected value is not accepted\");\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{selectionElement_Key}}",
															"value": "1",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(404);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get GUI form",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{url}}/cms/GetContentGuid?id=18505",
													"host": [
														"{{url}}"
													],
													"path": [
														"cms",
														"GetContentGuid"
													],
													"query": [
														{
															"key": "id",
															"value": "18505"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get a form contains Selection element - Required",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
															"\r",
															"pm.collectionVariables.set(\"selectionElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'SelectionElementBlock').key);\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formGuid}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "3. Invalid - Submit form with invalid value",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(400);\r",
															"verifyErrorMessageContains(selectionElement_Key, \"Unexpected value is not accepted\");\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{selectionElement_Key}}",
															"value": "1",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(404);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "4. Invalid - Submit form without value - Empty",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(400);\r",
															"verifyErrorMessageContains(selectionElement_Key, \"This field is required.\");\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{selectionElement_Key}}",
															"value": "",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(404);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "One item",
									"item": [
										{
											"name": "Get GUI form",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{url}}/cms/GetContentGuid?id=18510",
													"host": [
														"{{url}}"
													],
													"path": [
														"cms",
														"GetContentGuid"
													],
													"query": [
														{
															"key": "id",
															"value": "18510"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get a form contains Selection element - Default",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
															"\r",
															"pm.collectionVariables.set(\"selectionElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'SelectionElementBlock').key);\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formGuid}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "1. Submit form with valid value",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
															"let element_Value = requestData.getElementValue(selectionElement_Key);\r",
															"\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"pm.collectionVariables.set(\"element_Value\", element_Value);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{selectionElement_Key}}",
															"value": "1",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
															"let element_Value = pm.collectionVariables.get(\"element_Value\");\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifyFieldValueEqual(selectionElement_Key, element_Value);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "2. Invalid - Submit form with invalid value",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(400);\r",
															"verifyErrorMessageContains(selectionElement_Key, \"Unexpected value is not accepted\");\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{selectionElement_Key}}",
															"value": "2",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(404);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get GUI form",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{url}}/cms/GetContentGuid?id=18514",
													"host": [
														"{{url}}"
													],
													"path": [
														"cms",
														"GetContentGuid"
													],
													"query": [
														{
															"key": "id",
															"value": "18514"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get a form contains Selection element - Required",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
															"\r",
															"pm.collectionVariables.set(\"selectionElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'SelectionElementBlock').key);\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formGuid}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "3. Submit form with valid value",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
															"let element_Value = requestData.getElementValue(selectionElement_Key);\r",
															"\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"pm.collectionVariables.set(\"element_Value\", element_Value);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{selectionElement_Key}}",
															"value": "1",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
															"let element_Value = pm.collectionVariables.get(\"element_Value\");\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifyFieldValueEqual(selectionElement_Key, element_Value);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "4. Invalid - Submit form with invalid value",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(400);\r",
															"verifyErrorMessageContains(selectionElement_Key, \"Unexpected value is not accepted\");\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{selectionElement_Key}}",
															"value": "2",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(404);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "5. Invalid - Submit form without value.",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(400);\r",
															"verifyErrorMessageContains(selectionElement_Key, \"This field is required.\");\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{selectionElement_Key}}",
															"value": "",
															"type": "text",
															"disabled": true
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(404);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Many items",
									"item": [
										{
											"name": "Get GUI form",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{url}}/cms/GetContentGuid?id=18519",
													"host": [
														"{{url}}"
													],
													"path": [
														"cms",
														"GetContentGuid"
													],
													"query": [
														{
															"key": "id",
															"value": "18519"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get a form contains Selection element - Default",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
															"\r",
															"pm.collectionVariables.set(\"selectionElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'SelectionElementBlock').key);\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formGuid}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "1.1. Submit form with valid value - 1",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
															"let element_Value = requestData.getElementValue(selectionElement_Key);\r",
															"\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"pm.collectionVariables.set(\"element_Value\", element_Value);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{selectionElement_Key}}",
															"value": "1",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
															"let element_Value = pm.collectionVariables.get(\"element_Value\");\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifyFieldValueEqual(selectionElement_Key, element_Value);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "1.2. Submit form with valid value - 2",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
															"let element_Value = requestData.getElementValue(selectionElement_Key);\r",
															"\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"pm.collectionVariables.set(\"element_Value\", element_Value);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{selectionElement_Key}}",
															"value": "2",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
															"let element_Value = pm.collectionVariables.get(\"element_Value\");\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifyFieldValueEqual(selectionElement_Key, element_Value);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "2. Invalid - Submit form with invalid value",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(400);\r",
															"verifyErrorMessageContains(selectionElement_Key, \"Unexpected value is not accepted\");\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{selectionElement_Key}}",
															"value": "5",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(404);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "3. Invalid - Submit form with many valid values",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(400);\r",
															"verifyErrorMessageContains(selectionElement_Key, \"Unexpected value is not accepted\");\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{selectionElement_Key}}",
															"value": "1,2",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(404);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get GUI form",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{url}}/cms/GetContentGuid?id=18523",
													"host": [
														"{{url}}"
													],
													"path": [
														"cms",
														"GetContentGuid"
													],
													"query": [
														{
															"key": "id",
															"value": "18523"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get a form contains Selection element - Required",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
															"\r",
															"pm.collectionVariables.set(\"selectionElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'SelectionElementBlock').key);\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formGuid}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "4. Submit form with valid value",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
															"let element_Value = requestData.getElementValue(selectionElement_Key);\r",
															"\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"pm.collectionVariables.set(\"element_Value\", element_Value);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{selectionElement_Key}}",
															"value": "4",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
															"let element_Value = pm.collectionVariables.get(\"element_Value\");\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifyFieldValueEqual(selectionElement_Key, element_Value);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "5. Invalid - Submit form with invalid value",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(400);\r",
															"verifyErrorMessageContains(selectionElement_Key, \"Unexpected value is not accepted\");\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{selectionElement_Key}}",
															"value": "5",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(404);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get GUI form",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{url}}/cms/GetContentGuid?id=18527",
													"host": [
														"{{url}}"
													],
													"path": [
														"cms",
														"GetContentGuid"
													],
													"query": [
														{
															"key": "id",
															"value": "18527"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get a form contains Selection element - Allow multiple choices.",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
															"\r",
															"pm.collectionVariables.set(\"selectionElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'SelectionElementBlock').key);\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formGuid}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "6. Submit form with a valid value",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
															"let element_Value = requestData.getElementValue(selectionElement_Key);\r",
															"\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"pm.collectionVariables.set(\"element_Value\", element_Value);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{selectionElement_Key}}",
															"value": "4",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
															"let element_Value = pm.collectionVariables.get(\"element_Value\");\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifyFieldValueEqual(selectionElement_Key, element_Value);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "7.1 Submit form with many valid values - {1,2}",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
															"let element_Value = requestData.getElementValue(selectionElement_Key);\r",
															"\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"pm.collectionVariables.set(\"element_Value\", element_Value);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{selectionElement_Key}}",
															"value": "1,2",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
															"let element_Value = pm.collectionVariables.get(\"element_Value\");\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifyFieldValueEqual(selectionElement_Key, element_Value);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "7.2 Submit form with many valid values - {1,2,3,4}",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
															"let element_Value = requestData.getElementValue(selectionElement_Key);\r",
															"\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"pm.collectionVariables.set(\"element_Value\", element_Value);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{selectionElement_Key}}",
															"value": "1,2,3,4",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
															"let element_Value = pm.collectionVariables.get(\"element_Value\");\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifyFieldValueEqual(selectionElement_Key, element_Value);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "8. Invalid - Submit form with invalid value + valid value",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(400);\r",
															"verifyErrorMessageContains(selectionElement_Key, \"Unexpected value is not accepted\");\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{selectionElement_Key}}",
															"value": "1,2,3,4,5",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(404);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Many items - Is checked by default",
									"item": [
										{
											"name": "Get GUI form",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{url}}/cms/GetContentGuid?id=18532",
													"host": [
														"{{url}}"
													],
													"path": [
														"cms",
														"GetContentGuid"
													],
													"query": [
														{
															"key": "id",
															"value": "18532"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get a form contains Selection element - Default",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
															"\r",
															"pm.collectionVariables.set(\"selectionElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'SelectionElementBlock').key);\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formGuid}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "1.1. Submit form with valid value - 1",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
															"let element_Value = requestData.getElementValue(selectionElement_Key);\r",
															"\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"pm.collectionVariables.set(\"element_Value\", element_Value);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{selectionElement_Key}}",
															"value": "1",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
															"let element_Value = pm.collectionVariables.get(\"element_Value\");\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifyFieldValueEqual(selectionElement_Key, element_Value);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "1.2. Submit form with valid value - 2",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
															"let element_Value = requestData.getElementValue(selectionElement_Key);\r",
															"\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"pm.collectionVariables.set(\"element_Value\", element_Value);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{selectionElement_Key}}",
															"value": "2",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
															"let element_Value = pm.collectionVariables.get(\"element_Value\");\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifyFieldValueEqual(selectionElement_Key, element_Value);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "2. Invalid - Submit form with invalid value",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(400);\r",
															"verifyErrorMessageContains(selectionElement_Key, \"Unexpected value is not accepted\");\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{selectionElement_Key}}",
															"value": "5",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(404);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "3. Invalid - Submit form with many valid values",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(400);\r",
															"verifyErrorMessageContains(selectionElement_Key, \"This field does not allow multiple choices.\");\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{selectionElement_Key}}",
															"value": "1,2",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(404);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "4. Invalid - Submit form without value - Empty",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(400);\r",
															"verifyErrorMessageContains(selectionElement_Key, \"This field is required.\");\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{selectionElement_Key}}",
															"value": "",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(404);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get GUI form",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{url}}/cms/GetContentGuid?id=19537",
													"host": [
														"{{url}}"
													],
													"path": [
														"cms",
														"GetContentGuid"
													],
													"query": [
														{
															"key": "id",
															"value": "19537"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get a form contains Selection element - Required",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
															"\r",
															"pm.collectionVariables.set(\"selectionElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'SelectionElementBlock').key);\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formGuid}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "5. Submit form with valid value",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
															"let element_Value = requestData.getElementValue(selectionElement_Key);\r",
															"\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"pm.collectionVariables.set(\"element_Value\", element_Value);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{selectionElement_Key}}",
															"value": "2",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
															"let element_Value = pm.collectionVariables.get(\"element_Value\");\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifyFieldValueEqual(selectionElement_Key, element_Value);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "6. Invalid - Submit form without value",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(400);\r",
															"verifyErrorMessageContains(selectionElement_Key, \"This field is required.\");\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{selectionElement_Key}}",
															"value": "",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(404);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get GUI form",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{url}}/cms/GetContentGuid?id=19544",
													"host": [
														"{{url}}"
													],
													"path": [
														"cms",
														"GetContentGuid"
													],
													"query": [
														{
															"key": "id",
															"value": "19544"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get a form contains Selection element -  Allow multiple choices",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
															"\r",
															"pm.collectionVariables.set(\"selectionElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'SelectionElementBlock').key);\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formGuid}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "7.1. Submit form with valid value  - single value",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
															"let element_Value = requestData.getElementValue(selectionElement_Key);\r",
															"\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"pm.collectionVariables.set(\"element_Value\", element_Value);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{selectionElement_Key}}",
															"value": "1",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
															"let element_Value = pm.collectionVariables.get(\"element_Value\");\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifyFieldValueEqual(selectionElement_Key, element_Value);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "7.2. Submit form with valid value - mutilple values",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
															"let element_Value = requestData.getElementValue(selectionElement_Key);\r",
															"\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"pm.collectionVariables.set(\"element_Value\", element_Value);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{selectionElement_Key}}",
															"value": "1,2,3,4",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
															"let element_Value = pm.collectionVariables.get(\"element_Value\");\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifyFieldValueEqual(selectionElement_Key, element_Value);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Feeds",
									"item": [
										{
											"name": "AFORM-3794 Get GUI form",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{url}}/cms/GetContentGuid?id=51945",
													"host": [
														"{{url}}"
													],
													"path": [
														"cms",
														"GetContentGuid"
													],
													"query": [
														{
															"key": "id",
															"value": "51945"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "AFORM-3794 Get a form contains Selection element - Use manual input > Feed",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
															"\r",
															"pm.collectionVariables.set(\"selectionElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'SelectionElementBlock').key);\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formGuid}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "1. Submit form with valid value",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
															"let element_Value = requestData.getElementValue(selectionElement_Key);\r",
															"\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"pm.collectionVariables.set(\"element_Value\", element_Value);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{selectionElement_Key}}",
															"value": "Decoding DI in Optimizely CMS 12",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
															"let element_Value = pm.collectionVariables.get(\"element_Value\");\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifyFieldValueEqual(selectionElement_Key, element_Value);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "2. Invalid - Submit form with invalid value",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(400);\r",
															"verifyErrorMessageContains(selectionElement_Key, \"Unexpected value is not accepted.\");\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{selectionElement_Key}}",
															"value": "1",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(404);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "AFORM-3933 Get GUI form",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{url}}/cms/GetContentGuid?id=62146",
													"host": [
														"{{url}}"
													],
													"path": [
														"cms",
														"GetContentGuid"
													],
													"query": [
														{
															"key": "id",
															"value": "62146"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "AFORM-3933 Get a form contains Selection element - Feed",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
															"\r",
															"pm.collectionVariables.set(\"selectionElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'SelectionElementBlock').key);\r",
															"pm.collectionVariables.set(\"choiceElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'ChoiceElementBlock').key);\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formGuid}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "AFORM-3933. Submit form with valid value on Selection element.",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
															"let element_Value = requestData.getElementValue(selectionElement_Key);\r",
															"\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"pm.collectionVariables.set(\"element_Value\", element_Value);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{selectionElement_Key}}",
															"value": "Streamlining Content Translation in Optimizely CMS with Google Translate",
															"type": "text"
														},
														{
															"key": "__field_{{choiceElement_Key}}",
															"value": "Azure AI Content Safety – Text Moderation on a string property using a Blocklist in Optimizely CMS",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");",
															"let element_Value = pm.collectionVariables.get(\"element_Value\");",
															"",
															"verifyResponseCode(200);",
															"verifyFieldValueEqual(selectionElement_Key, element_Value);",
															"",
															"",
															"",
															"",
															"",
															"",
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "AFORM-3933. Submit form with valid value on Multiple choice element",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
															"let element_Value = requestData.getElementValue(choiceElement_Key);\r",
															"\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"pm.collectionVariables.set(\"element_Value\", element_Value);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{selectionElement_Key}}",
															"value": "Streamlining Content Translation in Optimizely CMS with Google Translate",
															"type": "text"
														},
														{
															"key": "__field_{{choiceElement_Key}}",
															"value": "Azure AI Content Safety – Text Moderation on a string property using a Blocklist in Optimizely CMS",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");",
															"let element_Value = pm.collectionVariables.get(\"element_Value\");",
															"",
															"verifyResponseCode(200);",
															"verifyFieldValueEqual(choiceElement_Key, element_Value);",
															"",
															"",
															"",
															"",
															"",
															"",
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "3. Invalid - Submit form with invalid value",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
															"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(400);\r",
															"verifyErrorMessageContains(selectionElement_Key, \"Unexpected value is not accepted\");\r",
															"verifyErrorMessageContains(choiceElement_Key, \"Unexpected value is not accepted\");\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{selectionElement_Key}}",
															"value": "1",
															"type": "text"
														},
														{
															"key": "__field_{{choiceElement_Key}}",
															"value": "1",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(404);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get GUI form",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{url}}/cms/GetContentGuid?id=52946",
													"host": [
														"{{url}}"
													],
													"path": [
														"cms",
														"GetContentGuid"
													],
													"query": [
														{
															"key": "id",
															"value": "52946"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get a form contains Selection element - Feed_Required_Allow multiple choices",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
															"\r",
															"pm.collectionVariables.set(\"selectionElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'SelectionElementBlock').key);\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formGuid}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "4. Submit form with a valid value",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
															"let element_Value = requestData.getElementValue(selectionElement_Key);\r",
															"\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"pm.collectionVariables.set(\"element_Value\", element_Value);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{selectionElement_Key}}",
															"value": "Decoding DI in Optimizely CMS 12",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");",
															"let element_Value = pm.collectionVariables.get(\"element_Value\");",
															"",
															"verifyResponseCode(200);",
															"verifyFieldValueEqual(selectionElement_Key, element_Value);",
															"",
															"",
															"",
															"",
															"",
															"",
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "5 Submit form with many valid values",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
															"let element_Value = requestData.getElementValue(selectionElement_Key);\r",
															"\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"pm.collectionVariables.set(\"element_Value\", element_Value);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{selectionElement_Key}}",
															"value": "Decoding DI in Optimizely CMS 12,How NDepend can quickly help you find code quality issues and resolve them",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");",
															"let element_Value = pm.collectionVariables.get(\"element_Value\");",
															"",
															"verifyResponseCode(200);",
															"verifyFieldValueEqual(selectionElement_Key, element_Value);",
															"",
															"",
															"",
															"",
															"",
															"",
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "6. Invalid - Submit form with invalid value + valid value",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(400);\r",
															"verifyErrorMessageContains(selectionElement_Key, \"This field is required.\");\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{selectionElement_Key}}",
															"value": "Decoding DI in Optimizely CMS 12,How NDepend can quickly help you find code quality issues and resolve them,1,2,3,4,5",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(404);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "Multiple or single choice",
							"item": [
								{
									"name": "No item",
									"item": [
										{
											"name": "Get GUI form",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{url}}/cms/GetContentGuid?id=19554",
													"host": [
														"{{url}}"
													],
													"path": [
														"cms",
														"GetContentGuid"
													],
													"query": [
														{
															"key": "id",
															"value": "19554"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get a form contains Multiple or single choice element - Default",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
															"\r",
															"pm.collectionVariables.set(\"choiceElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'ChoiceElementBlock').key);\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formGuid}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "1. Submit form without value",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
															"let element_Value = requestData.getElementValue(choiceElement_Key);\r",
															"\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"pm.collectionVariables.set(\"element_Value\", element_Value);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{choiceElement_Key}}",
															"value": "",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
															"let element_Value = pm.collectionVariables.get(\"element_Value\");\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifyFieldValueEqual(choiceElement_Key, element_Value);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "2. Invalid - Submit form with invalid value",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(400);\r",
															"verifyErrorMessageContains(choiceElement_Key, \"Unexpected value is not accepted\");\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{choiceElement_Key}}",
															"value": "1",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(404);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get GUI form",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{url}}/cms/GetContentGuid?id=19557",
													"host": [
														"{{url}}"
													],
													"path": [
														"cms",
														"GetContentGuid"
													],
													"query": [
														{
															"key": "id",
															"value": "19557"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get a form contains Multiple or single choice element - Required",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
															"\r",
															"pm.collectionVariables.set(\"choiceElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'ChoiceElementBlock').key);\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formGuid}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "3. Invalid - Submit form with invalid value",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(400);\r",
															"verifyErrorMessageContains(choiceElement_Key, \"Unexpected value is not accepted\");\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{choiceElement_Key}}",
															"value": "1",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(404);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "4. Invalid - Submit form without value - Empty",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(400);\r",
															"verifyErrorMessageContains(choiceElement_Key, \"This field is required.\");\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{choiceElement_Key}}",
															"value": "",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(404);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Many items",
									"item": [
										{
											"name": "Get GUI form",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{url}}/cms/GetContentGuid?id=21576",
													"host": [
														"{{url}}"
													],
													"path": [
														"cms",
														"GetContentGuid"
													],
													"query": [
														{
															"key": "id",
															"value": "21576"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get a form contains Multiple or single choice element - Default",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
															"\r",
															"pm.collectionVariables.set(\"choiceElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'ChoiceElementBlock').key);\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formGuid}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "1. Submit form with valid value",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
															"let element_Value = requestData.getElementValue(choiceElement_Key);\r",
															"\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"pm.collectionVariables.set(\"element_Value\", element_Value);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{choiceElement_Key}}",
															"value": "Azure AI Content Safety – Blocklist Management in Optimizely CMS – List All Blocklists",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
															"let element_Value = pm.collectionVariables.get(\"element_Value\");\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifyFieldValueEqual(choiceElement_Key, element_Value);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "2. Invalid - Submit form with invalid value",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(400);\r",
															"verifyErrorMessageContains(choiceElement_Key, \"Unexpected value is not accepted\");\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{choiceElement_Key}}",
															"value": "5",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(404);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "3. Invalid - Submit form with many valid values",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(400);\r",
															"verifyErrorMessageContains(choiceElement_Key, \"Unexpected value is not accepted\");\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{choiceElement_Key}}",
															"value": "Azure AI Content Safety – Blocklist Management in Optimizely CMS – List All Blocklists,Special symbols in TinyMCE",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(404);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get GUI form",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{url}}/cms/GetContentGuid?id=22585",
													"host": [
														"{{url}}"
													],
													"path": [
														"cms",
														"GetContentGuid"
													],
													"query": [
														{
															"key": "id",
															"value": "22585"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get a form contains Multiple or single choice element - Required",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
															"\r",
															"pm.collectionVariables.set(\"choiceElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'ChoiceElementBlock').key);\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formGuid}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "4. Submit form with valid value",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
															"let element_Value = requestData.getElementValue(choiceElement_Key);\r",
															"\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"pm.collectionVariables.set(\"element_Value\", element_Value);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{choiceElement_Key}}",
															"value": "Special symbols in TinyMCE",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
															"let element_Value = pm.collectionVariables.get(\"element_Value\");\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifyFieldValueEqual(choiceElement_Key, element_Value);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "5. Invalid - Submit form with invalid value",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(400);\r",
															"verifyErrorMessageContains(choiceElement_Key, \"Unexpected value is not accepted\");\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{choiceElement_Key}}",
															"value": "5",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(404);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get GUI form",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{url}}/cms/GetContentGuid?id=22589",
													"host": [
														"{{url}}"
													],
													"path": [
														"cms",
														"GetContentGuid"
													],
													"query": [
														{
															"key": "id",
															"value": "22589"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get a form contains Multiple or single choice  element - Allow multiple choices.",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
															"\r",
															"pm.collectionVariables.set(\"choiceElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'ChoiceElementBlock').key);\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formGuid}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "6. Submit form with a valid value",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
															"let element_Value = requestData.getElementValue(choiceElement_Key);\r",
															"\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"pm.collectionVariables.set(\"element_Value\", element_Value);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{choiceElement_Key}}",
															"value": "Special symbols in TinyMCE",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
															"let element_Value = pm.collectionVariables.get(\"element_Value\");\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifyFieldValueEqual(choiceElement_Key, element_Value);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "7 Submit form with many valid values",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
															"let element_Value = requestData.getElementValue(choiceElement_Key);\r",
															"\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"pm.collectionVariables.set(\"element_Value\", element_Value);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{choiceElement_Key}}",
															"value": "Azure AI Content Safety – Blocklist Management in Optimizely CMS – List All Blocklists,Special symbols in TinyMCE",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
															"let element_Value = pm.collectionVariables.get(\"element_Value\");\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifyFieldValueEqual(choiceElement_Key, element_Value);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "8. Invalid - Submit form with invalid value + valid value",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(400);\r",
															"verifyErrorMessageContains(choiceElement_Key, \"Unexpected value is not accepted\");\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{choiceElement_Key}}",
															"value": "Azure AI Content Safety – Blocklist Management in Optimizely CMS – List All Blocklists,Special symbols in TinyMCE,5",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(404);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "One item",
									"item": [
										{
											"name": "Get GUI form",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{url}}/cms/GetContentGuid?id=19561",
													"host": [
														"{{url}}"
													],
													"path": [
														"cms",
														"GetContentGuid"
													],
													"query": [
														{
															"key": "id",
															"value": "19561"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get a form contains Multiple or single choice element - Default",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
															"\r",
															"pm.collectionVariables.set(\"choiceElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'ChoiceElementBlock').key);\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formGuid}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "1. Submit form with valid value",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
															"let element_Value = requestData.getElementValue(choiceElement_Key);\r",
															"\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"pm.collectionVariables.set(\"element_Value\", element_Value);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{choiceElement_Key}}",
															"value": "1",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
															"let element_Value = pm.collectionVariables.get(\"element_Value\");\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifyFieldValueEqual(choiceElement_Key, element_Value);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "2. Invalid - Submit form with invalid value",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(400);\r",
															"verifyErrorMessageContains(choiceElement_Key, \"Unexpected value is not accepted\");\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{choiceElement_Key}}",
															"value": "2",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(404);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get GUI form",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{url}}/cms/GetContentGuid?id=19564",
													"host": [
														"{{url}}"
													],
													"path": [
														"cms",
														"GetContentGuid"
													],
													"query": [
														{
															"key": "id",
															"value": "19564"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get a form contains Multiple or single choice element - Required",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
															"\r",
															"pm.collectionVariables.set(\"choiceElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'ChoiceElementBlock').key);\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formGuid}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "3. Submit form with valid value",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
															"let element_Value = requestData.getElementValue(choiceElement_Key);\r",
															"\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"pm.collectionVariables.set(\"element_Value\", element_Value);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{choiceElement_Key}}",
															"value": "1",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
															"let element_Value = pm.collectionVariables.get(\"element_Value\");\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifyFieldValueEqual(choiceElement_Key, element_Value);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "4. Invalid - Submit form with invalid value",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(404);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{choiceElement_Key}}",
															"value": "2",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
															"let element_Value = pm.collectionVariables.get(\"element_Value\");\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifyFieldValueEqual(choiceElement_Key, element_Value);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "5. Invalid - Submit form without value.",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(400);\r",
															"verifyErrorMessageContains(choiceElement_Key, \"This field is required.\");\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{choiceElement_Key}}",
															"value": "",
															"type": "text",
															"disabled": true
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(404);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Many items - Is checked by default",
									"item": [
										{
											"name": "Get GUI form",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{url}}/cms/GetContentGuid?id=19568",
													"host": [
														"{{url}}"
													],
													"path": [
														"cms",
														"GetContentGuid"
													],
													"query": [
														{
															"key": "id",
															"value": "19568"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get a form contains Multiple or single choice element - Default",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
															"\r",
															"pm.collectionVariables.set(\"choiceElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'ChoiceElementBlock').key);\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formGuid}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "1.1. Submit form with valid value - 1",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
															"let element_Value = requestData.getElementValue(choiceElement_Key);\r",
															"\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"pm.collectionVariables.set(\"element_Value\", element_Value);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{choiceElement_Key}}",
															"value": "1",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
															"let element_Value = pm.collectionVariables.get(\"element_Value\");\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifyFieldValueEqual(choiceElement_Key, element_Value);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "1.2. Submit form with valid value - 2",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
															"let element_Value = requestData.getElementValue(choiceElement_Key);\r",
															"\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"pm.collectionVariables.set(\"element_Value\", element_Value);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{choiceElement_Key}}",
															"value": "2",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
															"let element_Value = pm.collectionVariables.get(\"element_Value\");\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifyFieldValueEqual(choiceElement_Key, element_Value);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "2. Invalid - Submit form with invalid value",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(400);\r",
															"verifyErrorMessageContains(choiceElement_Key, \"Unexpected value is not accepted\");\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{choiceElement_Key}}",
															"value": "5",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(404);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "3. Invalid - Submit form with many valid values",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(400);\r",
															"verifyErrorMessageContains(choiceElement_Key, \"This field does not allow mutilple choices\");\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{choiceElement_Key}}",
															"value": "1,2",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(404);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "4. Invalid - Submit form without value - Empty",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(400);\r",
															"verifyErrorMessageContains(choiceElement_Key, \"This field is required.\");\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{choiceElement_Key}}",
															"value": "",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(404);"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get GUI form",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{url}}/cms/GetContentGuid?id=19572",
													"host": [
														"{{url}}"
													],
													"path": [
														"cms",
														"GetContentGuid"
													],
													"query": [
														{
															"key": "id",
															"value": "19572"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get a form contains Multiple or single choice element - Required",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
															"\r",
															"pm.collectionVariables.set(\"choiceElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'ChoiceElementBlock').key);\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formGuid}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "5. Submit form with valid value",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
															"let element_Value = requestData.getElementValue(choiceElement_Key);\r",
															"\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"pm.collectionVariables.set(\"element_Value\", element_Value);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{choiceElement_Key}}",
															"value": "2",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
															"let element_Value = pm.collectionVariables.get(\"element_Value\");\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifyFieldValueEqual(choiceElement_Key, element_Value);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "6. Invalid - Submit form without value",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(400);\r",
															"verifyErrorMessageContains(choiceElement_Key, \"Unexpected value is not accepted\");\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{choiceElement_Key}}",
															"value": "",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(404);"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get GUI form",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{url}}/cms/GetContentGuid?id=20572",
													"host": [
														"{{url}}"
													],
													"path": [
														"cms",
														"GetContentGuid"
													],
													"query": [
														{
															"key": "id",
															"value": "20572"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get a form contains Multiple or single choice element -  Allow multiple choices",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
															"\r",
															"pm.collectionVariables.set(\"choiceElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'ChoiceElementBlock').key);\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formGuid}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "7.1. Submit form with valid value  - single value",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
															"let element_Value = requestData.getElementValue(choiceElement_Key);\r",
															"\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"pm.collectionVariables.set(\"element_Value\", element_Value);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{choiceElement_Key}}",
															"value": "1",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
															"let element_Value = pm.collectionVariables.get(\"element_Value\");\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifyFieldValueEqual(choiceElement_Key, element_Value);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "7.2. Submit form with valid value - mutilple values",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
															"let element_Value = requestData.getElementValue(choiceElement_Key);\r",
															"\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"pm.collectionVariables.set(\"element_Value\", element_Value);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{choiceElement_Key}}",
															"value": "1,2,3,4",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
															"let element_Value = pm.collectionVariables.get(\"element_Value\");\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifyFieldValueEqual(choiceElement_Key, element_Value);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "Image choice",
							"item": [
								{
									"name": "No item",
									"item": [
										{
											"name": "Get GUI form",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{url}}/cms/GetContentGuid?id=22595",
													"host": [
														"{{url}}"
													],
													"path": [
														"cms",
														"GetContentGuid"
													],
													"query": [
														{
															"key": "id",
															"value": "22595"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get a form contains Image choice element - Default",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
															"\r",
															"pm.collectionVariables.set(\"imageChoiceElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'ImageChoiceElementBlock').key);\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formGuid}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "1. Submit form without value",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let imageChoiceElement_Key = pm.collectionVariables.get(\"imageChoiceElement_Key\");\r",
															"let element_Value = requestData.getElementValue(imageChoiceElement_Key);\r",
															"\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"pm.collectionVariables.set(\"element_Value\", element_Value);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{imageChoiceElement_Key}}",
															"value": "",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let imageChoiceElement_Key = pm.collectionVariables.get(\"imageChoiceElement_Key\");\r",
															"let element_Value = pm.collectionVariables.get(\"element_Value\");\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifyFieldValueEqual(imageChoiceElement_Key, element_Value);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "2. Invalid - Submit form with invalid value",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let imageChoiceElement_Key = pm.collectionVariables.get(\"imageChoiceElement_Key\");\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(400);\r",
															"verifyErrorMessageContains(imageChoiceElement_Key, \"Unexpected value is not accepted\");\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{imageChoiceElement_Key}}",
															"value": "1",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(404);"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get GUI form",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{url}}/cms/GetContentGuid?id=22598",
													"host": [
														"{{url}}"
													],
													"path": [
														"cms",
														"GetContentGuid"
													],
													"query": [
														{
															"key": "id",
															"value": "22598"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get a form contains Image choice element - Required",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
															"\r",
															"pm.collectionVariables.set(\"imageChoiceElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'ImageChoiceElementBlock').key);\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formGuid}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "3. Invalid - Submit form with invalid value",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let imageChoiceElement_Key = pm.collectionVariables.get(\"imageChoiceElement_Key\");\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(400);\r",
															"verifyErrorMessageContains(imageChoiceElement_Key, \"Unexpected value is not accepted\");\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{imageChoiceElement_Key}}",
															"value": "1",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(404);"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "4. Invalid - Submit form without value - Empty",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let imageChoiceElement_Key = pm.collectionVariables.get(\"imageChoiceElement_Key\");\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(400);\r",
															"verifyErrorMessageContains(imageChoiceElement_Key, \"This field is required.\");\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{imageChoiceElement_Key}}",
															"value": "",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(404);"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "One item",
									"item": [
										{
											"name": "Get GUI form",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{url}}/cms/GetContentGuid?id=22602",
													"host": [
														"{{url}}"
													],
													"path": [
														"cms",
														"GetContentGuid"
													],
													"query": [
														{
															"key": "id",
															"value": "22602"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get a form contains Image choice element - Default",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
															"\r",
															"pm.collectionVariables.set(\"imageChoiceElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'ImageChoiceElementBlock').key);\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formGuid}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "1. Submit form with valid value",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let imageChoiceElement_Key = pm.collectionVariables.get(\"imageChoiceElement_Key\");\r",
															"let element_Value = requestData.getElementValue(imageChoiceElement_Key);\r",
															"\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"pm.collectionVariables.set(\"element_Value\", element_Value);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{imageChoiceElement_Key}}",
															"value": "{{url}}/globalassets/alloy-meet/alloymeet.png",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let imageChoiceElement_Key = pm.collectionVariables.get(\"imageChoiceElement_Key\");\r",
															"let element_Value = pm.collectionVariables.get(\"element_Value\");\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifyFieldValueEqual(imageChoiceElement_Key, element_Value);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "2. Invalid - Submit form with invalid value",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let imageChoiceElement_Key = pm.collectionVariables.get(\"imageChoiceElement_Key\");\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(400);\r",
															"verifyErrorMessageContains(imageChoiceElement_Key, \"Unexpected value is not accepted\");\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{imageChoiceElement_Key}}",
															"value": "{{url}}/globalassets/alloy-meet/alloyplan.png",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(404);"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get GUI form",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{url}}/cms/GetContentGuid?id=22606",
													"host": [
														"{{url}}"
													],
													"path": [
														"cms",
														"GetContentGuid"
													],
													"query": [
														{
															"key": "id",
															"value": "22606"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get a form contains Image choice element - Required",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
															"\r",
															"pm.collectionVariables.set(\"imageChoiceElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'ImageChoiceElementBlock').key);\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formGuid}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "3. Submit form with valid value",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let imageChoiceElement_Key = pm.collectionVariables.get(\"imageChoiceElement_Key\");\r",
															"let element_Value = requestData.getElementValue(imageChoiceElement_Key);\r",
															"\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"pm.collectionVariables.set(\"element_Value\", element_Value);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{imageChoiceElement_Key}}",
															"value": "{{url}}/globalassets/alloy-meet/alloymeet.png",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let imageChoiceElement_Key = pm.collectionVariables.get(\"imageChoiceElement_Key\");\r",
															"let element_Value = pm.collectionVariables.get(\"element_Value\");\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifyFieldValueEqual(imageChoiceElement_Key, element_Value);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "4. Invalid - Submit form with invalid value",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let imageChoiceElement_Key = pm.collectionVariables.get(\"imageChoiceElement_Key\");\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(400);\r",
															"verifyErrorMessageContains(imageChoiceElement_Key, \"Unexpected value is not accepted\");\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{imageChoiceElement_Key}}",
															"value": "{{url}}/globalassets/alloy-plan/alloyplan.png",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(404);"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "5. Invalid - Submit form without value.",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let imageChoiceElement_Key = pm.collectionVariables.get(\"imageChoiceElement_Key\");\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(400);\r",
															"verifyErrorMessageContains(imageChoiceElement_Key, \"This field is required.\");\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(404);"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Many choices",
									"item": [
										{
											"name": "Get GUI form",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{url}}/cms/GetContentGuid?id=23607",
													"host": [
														"{{url}}"
													],
													"path": [
														"cms",
														"GetContentGuid"
													],
													"query": [
														{
															"key": "id",
															"value": "23607"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get a form contains Image choice element - Default",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
															"\r",
															"pm.collectionVariables.set(\"imageChoiceElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'ImageChoiceElementBlock').key);\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formGuid}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "1.1 Submit form with valid value - 1",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let imageChoiceElement_Key = pm.collectionVariables.get(\"imageChoiceElement_Key\");\r",
															"let element_Value = requestData.getElementValue(imageChoiceElement_Key);\r",
															"\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"pm.collectionVariables.set(\"element_Value\", element_Value);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{imageChoiceElement_Key}}",
															"value": "{{url}}/globalassets/alloy-meet/alloymeet.png",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let imageChoiceElement_Key = pm.collectionVariables.get(\"imageChoiceElement_Key\");\r",
															"let element_Value = pm.collectionVariables.get(\"element_Value\");\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifyFieldValueEqual(imageChoiceElement_Key, element_Value);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "1.2 Submit form with valid value - 2",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let imageChoiceElement_Key = pm.collectionVariables.get(\"imageChoiceElement_Key\");\r",
															"let element_Value = requestData.getElementValue(imageChoiceElement_Key);\r",
															"\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"pm.collectionVariables.set(\"element_Value\", element_Value);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{imageChoiceElement_Key}}",
															"value": "{{url}}/contentassets/e7d1db2301f24a679e5b7fe22cc5ee64/AlloyMeet.png",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let imageChoiceElement_Key = pm.collectionVariables.get(\"imageChoiceElement_Key\");\r",
															"let element_Value = pm.collectionVariables.get(\"element_Value\");\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifyFieldValueEqual(imageChoiceElement_Key, element_Value);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "2.1 Invalid - Submit form with invalid value - 1",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let imageChoiceElement_Key = pm.collectionVariables.get(\"imageChoiceElement_Key\");\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(400);\r",
															"verifyErrorMessageContains(imageChoiceElement_Key, \"This value is invalid\");\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{imageChoiceElement_Key}}",
															"value": "{{url}}/globalassets/alloy-track/alloytrack.png",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(404);"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "2.2 Invalid - Submit form with invalid value - 2",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let imageChoiceElement_Key = pm.collectionVariables.get(\"imageChoiceElement_Key\");\r",
															"\r",
															"verifyResponseCode(400);\r",
															"verifyErrorMessageContains(imageChoiceElement_Key, \"This value is invalid\");\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{imageChoiceElement_Key}}",
															"value": "AlloyMeet.png",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(404);"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "3. Invalid - Submit form with many valid values",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let imageChoiceElement_Key = pm.collectionVariables.get(\"imageChoiceElement_Key\");\r",
															"\r",
															"verifyResponseCode(400);\r",
															"verifyErrorMessageContains(imageChoiceElement_Key, \"This value is invalid\");\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{imageChoiceElement_Key}}",
															"value": "{{url}}/globalassets/alloy-meet/alloymeet.png,/globalassets/alloy-plan/alloyplan.png",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(404);"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get GUI form",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{url}}/cms/GetContentGuid?id=24610",
													"host": [
														"{{url}}"
													],
													"path": [
														"cms",
														"GetContentGuid"
													],
													"query": [
														{
															"key": "id",
															"value": "24610"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get a form contains Image choice element - Required",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
															"\r",
															"pm.collectionVariables.set(\"imageChoiceElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'ImageChoiceElementBlock').key);\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formGuid}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "4. Submit form with valid value",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let imageChoiceElement_Key = pm.collectionVariables.get(\"imageChoiceElement_Key\");\r",
															"let element_Value = requestData.getElementValue(imageChoiceElement_Key);\r",
															"\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"pm.collectionVariables.set(\"element_Value\", element_Value);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{imageChoiceElement_Key}}",
															"value": "{{url}}/globalassets/alloy-plan/alloyplan.png",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let imageChoiceElement_Key = pm.collectionVariables.get(\"imageChoiceElement_Key\");\r",
															"let element_Value = pm.collectionVariables.get(\"element_Value\");\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifyFieldValueEqual(imageChoiceElement_Key, element_Value);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "5. Invalid - Submit form with invalid value",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let imageChoiceElement_Key = pm.collectionVariables.get(\"imageChoiceElement_Key\");\r",
															"\r",
															"verifyResponseCode(400);\r",
															"verifyErrorMessageContains(imageChoiceElement_Key, \"This value is invalid\");\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{imageChoiceElement_Key}}",
															"value": "/globalassets/alloy-track/alloytrack.png",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(404);"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "6. Invalid - Submit form without value",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let imageChoiceElement_Key = pm.collectionVariables.get(\"imageChoiceElement_Key\");\r",
															"\r",
															"verifyResponseCode(400);\r",
															"verifyErrorMessageContains(imageChoiceElement_Key, \"This field is required.\");\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{imageChoiceElement_Key}}",
															"value": "",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(404);"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get GUI form",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{url}}/cms/GetContentGuid?id=25610",
													"host": [
														"{{url}}"
													],
													"path": [
														"cms",
														"GetContentGuid"
													],
													"query": [
														{
															"key": "id",
															"value": "25610"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get a form contains Image choice  element - Allow multiple choices.",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
															"\r",
															"pm.collectionVariables.set(\"imageChoiceElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'ImageChoiceElementBlock').key);\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formGuid}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "7. Submit form with a valid value",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let imageChoiceElement_Key = pm.collectionVariables.get(\"imageChoiceElement_Key\");\r",
															"let element_Value = requestData.getElementValue(imageChoiceElement_Key);\r",
															"\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"pm.collectionVariables.set(\"element_Value\", element_Value);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{imageChoiceElement_Key}}",
															"value": "{{url}}/globalassets/alloy-meet/alloymeet.png",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let imageChoiceElement_Key = pm.collectionVariables.get(\"imageChoiceElement_Key\");\r",
															"let element_Value = pm.collectionVariables.get(\"element_Value\");\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifyFieldValueEqual(imageChoiceElement_Key, element_Value);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "8. Submit form with many valid values",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let imageChoiceElement_Key = pm.collectionVariables.get(\"imageChoiceElement_Key\");\r",
															"let element_Value = requestData.getElementValue(imageChoiceElement_Key);\r",
															"\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"pm.collectionVariables.set(\"element_Value\", element_Value);\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifySuccessSubmitMessage();\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{imageChoiceElement_Key}}",
															"value": "{{url}}/globalassets/alloy-meet/alloymeet.png,{{url}}/globalassets/alloy-plan/alloyplan.png,{{url}}/contentassets/be457f15300b4439a291c4e9ead751de/AlloyMeet.png",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"let imageChoiceElement_Key = pm.collectionVariables.get(\"imageChoiceElement_Key\");\r",
															"let element_Value = pm.collectionVariables.get(\"element_Value\");\r",
															"\r",
															"verifyResponseCode(200);\r",
															"verifyFieldValueEqual(imageChoiceElement_Key, element_Value);\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "9. Invalid - Submit form with invalid value + valid value",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"let imageChoiceElement_Key = pm.collectionVariables.get(\"imageChoiceElement_Key\");\r",
															"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
															"\r",
															"verifyResponseCode(400);\r",
															"verifyErrorMessageContains(imageChoiceElement_Key, \"This value is invalid\");\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disabledSystemHeaders": {}
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data; boundary=<calculated when request is sent>",
														"type": "text",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "formKey",
															"value": "{{formKey}}",
															"type": "text"
														},
														{
															"key": "locale",
															"value": "en",
															"type": "text"
														},
														{
															"key": "__field_{{imageChoiceElement_Key}}",
															"value": "{{url}}/globalassets/alloy-meet/alloymeet.png,{{url}}/globalassets/alloy-plan/alloyplan.png,{{url}}/contentassets/e7d1db2301f24a679e5b7fe22cc5ee64/AlloyMeet.png,{{url}}/globalassets/alloy-track/alloytrack.png",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get form submission",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"verifyResponseCode(404);"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
													"host": [
														"{{url}}{{formEndpoint}}"
													],
													"path": [
														"{{formKey}}",
														"submissions",
														"{{submissionKey}}"
													],
													"query": [
														{
															"key": "",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "File upload Element",
							"item": [
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=25616",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "25616"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form contains File upload element - Default",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
													"\r",
													"pm.collectionVariables.set(\"fileUploadElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'FileUploadElementBlock').key);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "1. Submit form without value",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let fileUploadElement_Key = pm.collectionVariables.get(\"fileUploadElement_Key\");\r",
													"// let element_Value = requestData.getElementValue(fileUploadElement_Key);\r",
													"\r",
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"// pm.collectionVariables.set(\"element_Value\", element_Value);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{fileUploadElement_Key}}",
													"value": "",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let fileUploadElement_Key = pm.collectionVariables.get(\"fileUploadElement_Key\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(fileUploadElement_Key, null);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "2.1. Submit form with valid value - (.jpg)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"image1JPG\", \"image1.jpg\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let fileUploadElement_Key = pm.collectionVariables.get(\"fileUploadElement_Key\");\r",
													"// let element_Value = requestData.getElementValue(fileUploadElement_Key);\r",
													"\r",
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"// pm.collectionVariables.set(\"element_Value\", element_Value);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{fileUploadElement_Key}}",
													"type": "file",
													"src": "postman-cloud:///1eeb35d4-ea74-46e0-91a6-0871d29e5912"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let fileUploadElement_Key = pm.collectionVariables.get(\"fileUploadElement_Key\");\r",
													"let  image1JPG = pm.collectionVariables.get(\"image1JPG\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueContains(fileUploadElement_Key, image1JPG);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "2.2. Submit form with valid value - (.png)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"bearPNG\", \"bear-png-with-transparent-background.png\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let fileUploadElement_Key = pm.collectionVariables.get(\"fileUploadElement_Key\");\r",
													"\r",
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{fileUploadElement_Key}}",
													"type": "file",
													"src": "postman-cloud:///1eeb371c-3d7a-44f0-a176-80ecf3335771"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let fileUploadElement_Key = pm.collectionVariables.get(\"fileUploadElement_Key\");\r",
													"let  bearPNG = pm.collectionVariables.get(\"bearPNG\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueContains(fileUploadElement_Key, bearPNG);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "2.3. Submit form with valid value - (.pdf)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"processPDF\", \"process.pdf\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let fileUploadElement_Key = pm.collectionVariables.get(\"fileUploadElement_Key\");\r",
													"\r",
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{fileUploadElement_Key}}",
													"type": "file",
													"src": "postman-cloud:///1eeb3722-47ab-4810-ab17-170f86fbf92a"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let fileUploadElement_Key = pm.collectionVariables.get(\"fileUploadElement_Key\");\r",
													"let  processPDF = pm.collectionVariables.get(\"processPDF\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueContains(fileUploadElement_Key, processPDF);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "3.1. Invalid - Submit form with invalid value - (string)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let fileUploadElement_Key = pm.collectionVariables.get(\"fileUploadElement_Key\");\r",
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(fileUploadElement_Key, \"This value is invalid\");\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{fileUploadElement_Key}}",
													"value": "test",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "3.2. Invalid - Submit form with invalid value - (path)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let fileUploadElement_Key = pm.collectionVariables.get(\"fileUploadElement_Key\");\r",
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(fileUploadElement_Key, \"This value is invalid\");\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{fileUploadElement_Key}}",
													"value": "C:\\Users\\tttn\\Postman\\files\\image1.jpg",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "4. Invalid - Submit form with valid value - (.json)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let fileUploadElement_Key = pm.collectionVariables.get(\"fileUploadElement_Key\");\r",
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(fileUploadElement_Key, \"This value is invalid\");\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{fileUploadElement_Key}}",
													"type": "file",
													"src": "postman-cloud:///1eeb372d-abdf-45b0-80ce-4dca5231bb1d"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=28615",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "28615"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form contains File upload element - Required",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
													"\r",
													"pm.collectionVariables.set(\"fileUploadElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'FileUploadElementBlock').key);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "5. Submit form with valid value",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"processPDF\", \"process.pdf\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let fileUploadElement_Key = pm.collectionVariables.get(\"fileUploadElement_Key\");\r",
													"\r",
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{fileUploadElement_Key}}",
													"type": "file",
													"src": "{{processPDF}}"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let fileUploadElement_Key = pm.collectionVariables.get(\"fileUploadElement_Key\");\r",
													"let  processPDF = pm.collectionVariables.get(\"processPDF\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueContains(fileUploadElement_Key, processPDF);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "6. Invalid - Submit form with invalid value",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let fileUploadElement_Key = pm.collectionVariables.get(\"fileUploadElement_Key\");\r",
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(fileUploadElement_Key, \"This value is invalid\");\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{fileUploadElement_Key}}",
													"type": "file",
													"src": []
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=29619",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "29619"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form contains File upload element - Allow multiple choices",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
													"\r",
													"pm.collectionVariables.set(\"fileUploadElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'FileUploadElementBlock').key);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "7. Submit form with valid value",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"autoCompleteXLSX\", \"AutoComplete.xlsx\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let fileUploadElement_Key = pm.collectionVariables.get(\"fileUploadElement_Key\");\r",
													"\r",
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{fileUploadElement_Key}}",
													"type": "file",
													"src": "{{autoCompleteXLSX}}"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let fileUploadElement_Key = pm.collectionVariables.get(\"fileUploadElement_Key\");\r",
													"let  processPDF = pm.collectionVariables.get(\"processPDF\");\r",
													"let  autoCompleteXLSX = pm.collectionVariables.get(\"autoCompleteXLSX\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueContains(fileUploadElement_Key, processPDF);\r",
													"verifyFieldValueContains(fileUploadElement_Key, autoCompleteXLSX);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "8. Submit form with many valid value",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"image1JPG\", \"image1.jpg\");\r",
													"pm.collectionVariables.set(\"bearPNG\", \"bear-png-with-transparent-background.png\");\r",
													"pm.collectionVariables.set(\"processPDF\", \"process.pdf\"); \r",
													"pm.collectionVariables.set(\"autoCompleteXLSX\", \"AutoComplete.xlsx\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let fileUploadElement_Key = pm.collectionVariables.get(\"fileUploadElement_Key\");\r",
													"\r",
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{fileUploadElement_Key}}",
													"type": "file",
													"src": [
														"{{processPDF}}",
														"{{image1JPG}}",
														"{{bearPNG}}",
														"{{autoCompleteXLSX}}"
													]
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let fileUploadElement_Key = pm.collectionVariables.get(\"fileUploadElement_Key\");\r",
													"let  processPDF = pm.collectionVariables.get(\"processPDF\");\r",
													"let  autoCompleteXLSX = pm.collectionVariables.get(\"autoCompleteXLSX\");\r",
													"let  image1JPG = pm.collectionVariables.get(\"image1JPG\");\r",
													"let  bearPNG = pm.collectionVariables.get(\"bearPNG\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueContains(fileUploadElement_Key, processPDF);\r",
													"verifyFieldValueContains(fileUploadElement_Key, autoCompleteXLSX);\r",
													"verifyFieldValueContains(fileUploadElement_Key, image1JPG);\r",
													"verifyFieldValueContains(fileUploadElement_Key, bearPNG);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "9. Invalid - Submit form with many valid + invalid values",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let fileUploadElement_Key = pm.collectionVariables.get(\"fileUploadElement_Key\");\r",
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(fileUploadElement_Key, \"This value is invalid\");\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{fileUploadElement_Key}}",
													"type": "file",
													"src": [
														"postman-cloud:///1eeb35d4-ea74-46e0-91a6-0871d29e5912",
														"postman-cloud:///1eeb371c-3d7a-44f0-a176-80ecf3335771",
														"postman-cloud:///1eeb372d-abdf-45b0-80ce-4dca5231bb1d"
													]
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=30632",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "30632"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form contains Image choice element - Required + Allow multiple choices",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
													"\r",
													"pm.collectionVariables.set(\"fileUploadElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'FileUploadElementBlock').key);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "10. Submit form with many valid value",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"image1JPG\", \"image1.jpg\");\r",
													"pm.collectionVariables.set(\"bearPNG\", \"bear-png-with-transparent-background.png\");\r",
													"pm.collectionVariables.set(\"processPDF\", \"process.pdf\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let fileUploadElement_Key = pm.collectionVariables.get(\"fileUploadElement_Key\");\r",
													"\r",
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{fileUploadElement_Key}}",
													"type": "file",
													"src": [
														"{{image1JPG}}",
														"{{bearPNG}}",
														"{{processPDF}}"
													]
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let fileUploadElement_Key = pm.collectionVariables.get(\"fileUploadElement_Key\");\r",
													"let  image1JPG = pm.collectionVariables.get(\"image1JPG\");\r",
													"let  bearPNG = pm.collectionVariables.get(\"bearPNG\");\r",
													"let  processPDF = pm.collectionVariables.get(\"processPDF\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueContains(fileUploadElement_Key, image1JPG);\r",
													"verifyFieldValueContains(fileUploadElement_Key, bearPNG);\r",
													"verifyFieldValueContains(fileUploadElement_Key, processPDF);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=30647",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "30647"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form contains File upload element - Max file",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
													"\r",
													"pm.collectionVariables.set(\"fileUploadElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'FileUploadElementBlock').key);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "11. Submit form with many valid value",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"image1JPG\", \"image1.jpg\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let fileUploadElement_Key = pm.collectionVariables.get(\"fileUploadElement_Key\");\r",
													"\r",
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{fileUploadElement_Key}}",
													"type": "file",
													"src": "{{image1JPG}}"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let fileUploadElement_Key = pm.collectionVariables.get(\"fileUploadElement_Key\");\r",
													"let  image1JPG = pm.collectionVariables.get(\"image1JPG\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueContains(fileUploadElement_Key, image1JPG);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "12. Invalid - Submit form with invalid value",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let fileUploadElement_Key = pm.collectionVariables.get(\"fileUploadElement_Key\");\r",
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(fileUploadElement_Key, \"The upload file size should be less than 1 MB.\");\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{fileUploadElement_Key}}",
													"type": "file",
													"src": "image2.tif"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=30660",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "30660"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form contains File upload element - Max file + Allow multiple choices",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
													"\r",
													"pm.collectionVariables.set(\"fileUploadElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'FileUploadElementBlock').key);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "12. Submit form with many valid value",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"image1JPG\", \"image1.jpg\");\r",
													"pm.collectionVariables.set(\"bearPNG\", \"bear-png-with-transparent-background.png\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let fileUploadElement_Key = pm.collectionVariables.get(\"fileUploadElement_Key\");\r",
													"\r",
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{fileUploadElement_Key}}",
													"type": "file",
													"src": [
														"{{image1JPG}}",
														"{{bearPNG}}"
													]
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let fileUploadElement_Key = pm.collectionVariables.get(\"fileUploadElement_Key\");\r",
													"let  image1JPG = pm.collectionVariables.get(\"image1JPG\");\r",
													"let  bearPNG = pm.collectionVariables.get(\"bearPNG\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueContains(fileUploadElement_Key, image1JPG);\r",
													"verifyFieldValueContains(fileUploadElement_Key, bearPNG);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "13. Invalid - Submit form with many valid + invalid value",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let fileUploadElement_Key = pm.collectionVariables.get(\"fileUploadElement_Key\");\r",
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(fileUploadElement_Key, \"The upload file size should be less than 1 MB.\");\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{fileUploadElement_Key}}",
													"type": "file",
													"src": [
														"postman-cloud:///1eeb35d4-ea74-46e0-91a6-0871d29e5912",
														"image2.tif"
													]
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=30672",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "30672"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form contains File upload element - Allowed extensions",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
													"\r",
													"pm.collectionVariables.set(\"fileUploadElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'FileUploadElementBlock').key);\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "13. Submit form with valid value",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"image1JPG\", \"image1.jpg\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let fileUploadElement_Key = pm.collectionVariables.get(\"fileUploadElement_Key\");\r",
													"\r",
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{fileUploadElement_Key}}",
													"type": "file",
													"src": "{{image1JPG}}"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let fileUploadElement_Key = pm.collectionVariables.get(\"fileUploadElement_Key\");\r",
													"let  image1JPG = pm.collectionVariables.get(\"image1JPG\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueContains(fileUploadElement_Key, image1JPG);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "14. Invalid - Submit form with many invalid value",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let fileUploadElement_Key = pm.collectionVariables.get(\"fileUploadElement_Key\");\r",
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(fileUploadElement_Key, \"The upload file format is not allowed or not supported. File format should be: .jpg,.png,.pdf.\");\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{fileUploadElement_Key}}",
													"type": "file",
													"src": "image2.tif"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=30683",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "30683"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form contains File upload element - Allowed extensions + Allow multiple files  + Max file size",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
													"\r",
													"pm.collectionVariables.set(\"fileUploadElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'FileUploadElementBlock').key);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "15. Submit form with valid value",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"image1JPG\", \"image1.jpg\");\r",
													"pm.collectionVariables.set(\"bearPNG\", \"bear-png-with-transparent-background.png\");\r",
													"pm.collectionVariables.set(\"processPDF\", \"process.pdf\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let fileUploadElement_Key = pm.collectionVariables.get(\"fileUploadElement_Key\");\r",
													"\r",
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{fileUploadElement_Key}}",
													"type": "file",
													"src": [
														"{{image1JPG}}",
														"{{bearPNG}}",
														"{{processPDF}}"
													]
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let fileUploadElement_Key = pm.collectionVariables.get(\"fileUploadElement_Key\");\r",
													"let  image1JPG = pm.collectionVariables.get(\"image1JPG\");\r",
													"let  bearPNG = pm.collectionVariables.get(\"bearPNG\");\r",
													"let  processPDF = pm.collectionVariables.get(\"processPDF\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueContains(fileUploadElement_Key, image1JPG);\r",
													"verifyFieldValueContains(fileUploadElement_Key, bearPNG);\r",
													"verifyFieldValueContains(fileUploadElement_Key, processPDF);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "16. Invalid - Submit form with valid + invalid value",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let fileUploadElement_Key = pm.collectionVariables.get(\"fileUploadElement_Key\");\r",
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(fileUploadElement_Key, \"The upload file format is not allowed or not supported. File format should be: .jpg,.png,.pdf,.tif.\",\r",
													"            \"The upload file size should be less than 1 MB.\");\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{fileUploadElement_Key}}",
													"type": "file",
													"src": [
														"postman-cloud:///1eeb372d-abdf-45b0-80ce-4dca5231bb1d",
														"postman-cloud:///1eeb35d4-ea74-46e0-91a6-0871d29e5912",
														"image2.tif"
													]
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Hidden visitor profiling",
							"item": [
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=31691",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "31691"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form contains Hidden visitor profiling element - Default Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
													"\r",
													"pm.collectionVariables.set(\"visitorDataHiddenElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'VisitorDataHiddenElementBlock').key);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "1. Submit form without value",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{visitorDataHiddenElement_Key}}",
													"value": "",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "2. Invalid - Submit form with value",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let visitorDataHiddenElement_Key = pm.collectionVariables.get(\"visitorDataHiddenElement_Key\");\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(visitorDataHiddenElement_Key,  \"Invalid value\");\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{visitorDataHiddenElement_Key}}",
													"value": "test",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=31695",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "31695"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form contains Hidden visitor profiling element - Auto-collect visitor data",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
													"\r",
													"pm.collectionVariables.set(\"visitorDataHiddenElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'VisitorDataHiddenElementBlock').key);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "3. Submit form without value",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{visitorDataHiddenElement_Key}}",
													"value": "",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "4. Invalid - Submit form with value",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let visitorDataHiddenElement_Key = pm.collectionVariables.get(\"visitorDataHiddenElement_Key\");\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(visitorDataHiddenElement_Key,  \"Invalid value\");\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{visitorDataHiddenElement_Key}}",
													"value": "test",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Complex form",
							"item": [
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=31701",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "31701"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a complex single form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
													"\r",
													"pm.collectionVariables.set(\"textboxElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'TextboxElementBlock').key);\r",
													"\r",
													"pm.collectionVariables.set(\"textareaElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'TextareaElementBlock').key);\r",
													"\r",
													"pm.collectionVariables.set(\"numberElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'NumberElementBlock').key);\r",
													"\r",
													"pm.collectionVariables.set(\"rangeElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'RangeElementBlock').key);\r",
													"\r",
													"pm.collectionVariables.set(\"urlElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'UrlElementBlock').key);\r",
													"\r",
													"pm.collectionVariables.set(\"selectionElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'SelectionElementBlock').key);\r",
													"\r",
													"pm.collectionVariables.set(\"choiceElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'ChoiceElementBlock').key);\r",
													"\r",
													"pm.collectionVariables.set(\"imageChoiceElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'ImageChoiceElementBlock').key);\r",
													"\r",
													"pm.collectionVariables.set(\"visitorDataHiddenElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'VisitorDataHiddenElementBlock').key);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "1. Submit form with valid values",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = requestData.getElementValue(textboxElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value1\", element_Value1);\r",
													"\r",
													"let textareaElement_Key = pm.collectionVariables.get(\"textareaElement_Key\");\r",
													"let element_Value2 = requestData.getElementValue(textareaElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value2\", element_Value2);\r",
													"\r",
													"let numberElement_Key = pm.collectionVariables.get(\"numberElement_Key\");\r",
													"let element_Value3 = requestData.getElementValue(numberElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value3\", element_Value3);\r",
													"\r",
													"let rangeElement_Key = pm.collectionVariables.get(\"rangeElement_Key\");\r",
													"let element_Value4 = requestData.getElementValue(rangeElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value4\", element_Value4);\r",
													"\r",
													"let urlElement_Key = pm.collectionVariables.get(\"urlElement_Key\");\r",
													"let element_Value5 = requestData.getElementValue(urlElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value5\", element_Value5);\r",
													"\r",
													"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
													"let element_Value6 = requestData.getElementValue(selectionElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value6\", element_Value6);\r",
													"\r",
													"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
													"let element_Value7 = requestData.getElementValue(choiceElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value7\", element_Value7);\r",
													"\r",
													"let imageChoiceElement_Key = pm.collectionVariables.get(\"imageChoiceElement_Key\");\r",
													"let element_Value8 = requestData.getElementValue(imageChoiceElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value8\", element_Value8);\r",
													"\r",
													"let fileUploadElement_Key = pm.collectionVariables.get(\"fileUploadElement_Key\");\r",
													"let element_Value9 = requestData.getElementValue(fileUploadElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value9\", element_Value9);\r",
													"\r",
													"let visitorDataHiddenElement_Key = pm.collectionVariables.get(\"visitorDataHiddenElement_Key\");\r",
													"let element_Value10 = requestData.getElementValue(visitorDataHiddenElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value10\", element_Value10);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "test@gmail.com",
													"type": "text"
												},
												{
													"key": "__field_{{textareaElement_Key}}",
													"value": "test_123",
													"type": "text"
												},
												{
													"key": "__field_{{numberElement_Key}}",
													"value": "1000000",
													"type": "text"
												},
												{
													"key": "__field_{{rangeElement_Key}}",
													"value": "10",
													"type": "text"
												},
												{
													"key": "__field_{{urlElement_Key}}",
													"value": "https://www.google.com/maps",
													"type": "text"
												},
												{
													"key": "__field_{{selectionElement_Key}}",
													"value": "Ha Noi",
													"type": "text"
												},
												{
													"key": "__field_{{choiceElement_Key}}",
													"value": "1",
													"type": "text"
												},
												{
													"key": "__field_{{imageChoiceElement_Key}}",
													"value": "{{url}}/globalassets/alloy-meet/alloymeet.png",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = pm.collectionVariables.get(\"element_Value1\");\r",
													"\r",
													"let textareaElement_Key = pm.collectionVariables.get(\"textareaElement_Key\");\r",
													"let element_Value2 = pm.collectionVariables.get(\"element_Value2\");\r",
													"\r",
													"let numberElement_Key = pm.collectionVariables.get(\"numberElement_Key\");\r",
													"let element_Value3 = pm.collectionVariables.get(\"element_Value3\");\r",
													"console.log(element_Value3);\r",
													"let rangeElement_Key = pm.collectionVariables.get(\"rangeElement_Key\");\r",
													"let element_Value4 = pm.collectionVariables.get(\"element_Value4\");\r",
													"\r",
													"let urlElement_Key = pm.collectionVariables.get(\"urlElement_Key\");\r",
													"let element_Value5 = pm.collectionVariables.get(\"element_Value5\");\r",
													"\r",
													"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
													"let element_Value6 = pm.collectionVariables.get(\"element_Value6\");\r",
													"\r",
													"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
													"let element_Value7 = pm.collectionVariables.get(\"element_Value7\");\r",
													"console.log(element_Value7);\r",
													"\r",
													"let imageChoiceElement_Key = pm.collectionVariables.get(\"imageChoiceElement_Key\");\r",
													"let element_Value8 = pm.collectionVariables.get(\"element_Value8\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key, element_Value1);\r",
													"verifyFieldValueEqual(textareaElement_Key, element_Value2);\r",
													"verifyFieldValueEqual(numberElement_Key, Number.parseInt(element_Value3));\r",
													"verifyFieldValueEqual(rangeElement_Key, Number.parseInt(element_Value4));\r",
													"verifyFieldValueEqual(urlElement_Key, element_Value5);\r",
													"verifyFieldValueEqual(selectionElement_Key, element_Value6);\r",
													"verifyFieldValueEqual(choiceElement_Key, element_Value7);\r",
													"verifyFieldValueEqual(imageChoiceElement_Key, element_Value8);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "2. Invalid - Submit form without value all fields",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"let textboxElement_Key = pm.collectionVariables.get('textboxElement_Key');\r",
													"\r",
													"let textareaElement_Key = pm.collectionVariables.get('textareaElement_Key');\r",
													"\r",
													"let numberElement_Key = pm.collectionVariables.get('numberElement_Key');\r",
													"\r",
													"let rangeElement_Key = pm.collectionVariables.get('rangeElement_Key');\r",
													"\r",
													"let urlElement_Key = pm.collectionVariables.get('urlElement_Key');\r",
													"\r",
													"let selectionElement_Key = pm.collectionVariables.get('selectionElement_Key');\r",
													"\r",
													"let choiceElement_Key = pm.collectionVariables.get('choiceElement_Key');\r",
													"\r",
													"let imageChoiceElement_Key = pm.collectionVariables.get('imageChoiceElement_Key');\r",
													"\r",
													"let visitorDataHiddenElement_Key = pm.collectionVariables.get('visitorDataHiddenElement_Key');\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(textboxElement_Key, \"This field is required.\");\r",
													"verifyErrorMessageContains(textareaElement_Key, \"This field is required.\");\r",
													"verifyErrorMessageContains(numberElement_Key, \"This field is required.\");\r",
													"verifyErrorMessageContains(rangeElement_Key,  \"Unexpected value is not accepted.\");\r",
													"verifyErrorMessageContains(urlElement_Key, \"This field is required.\");\r",
													"verifyErrorMessageContains(selectionElement_Key, \"This field is required.\");\r",
													"verifyErrorMessageContains(choiceElement_Key, \"This field is required.\");\r",
													"verifyErrorMessageContains(imageChoiceElement_Key, \"This field is required.\");\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "test",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{textareaElement_Key}}",
													"value": "Form contains textarea element and element is required. Submit form which enter value to the element.",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{numberElement_Key}}",
													"value": "1.000.000",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{rangeElement_Key}}",
													"value": "10",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{urlElement_Key}}",
													"value": "https://www.google.com/maps",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{selectionElement_Key}}",
													"value": "Ha Noi",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{choiceElement_Key}}",
													"value": "1",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{imageChoiceElement_Key}}",
													"value": "/globalassets/alloy-meet/alloymeet.png",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "3. Invalid - Submit form with invalid value all fields",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"let textboxElement_Key = pm.collectionVariables.get('textboxElement_Key');\r",
													"\r",
													"let textareaElement_Key = pm.collectionVariables.get('textareaElement_Key');\r",
													"\r",
													"let numberElement_Key = pm.collectionVariables.get('numberElement_Key');\r",
													"\r",
													"let rangeElement_Key = pm.collectionVariables.get('rangeElement_Key');\r",
													"\r",
													"let urlElement_Key = pm.collectionVariables.get('urlElement_Key');\r",
													"\r",
													"let selectionElement_Key = pm.collectionVariables.get('selectionElement_Key');\r",
													"\r",
													"let choiceElement_Key = pm.collectionVariables.get('choiceElement_Key');\r",
													"\r",
													"let imageChoiceElement_Key = pm.collectionVariables.get('imageChoiceElement_Key');\r",
													"\r",
													"let visitorDataHiddenElement_Key = pm.collectionVariables.get('visitorDataHiddenElement_Key');\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(textboxElement_Key, \"Enter a valid email address.\");\r",
													"verifyErrorMessageContains(textareaElement_Key, \"This field should be in \\\"^[a-z0-9_-]{3,16}$\\\" format.\");\r",
													"verifyErrorMessageContains(numberElement_Key, \"Unexpected value is not accepted.\");\r",
													"verifyErrorMessageContains(rangeElement_Key,  \"Unexpected value is not accepted.\");\r",
													"verifyErrorMessageContains(urlElement_Key, \"Enter a valid URL.\");\r",
													"verifyErrorMessageContains(selectionElement_Key, \"Unexpected value is not accepted.\");\r",
													"verifyErrorMessageContains(imageChoiceElement_Key, \"Unexpected value is not accepted.\");\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "test",
													"type": "text"
												},
												{
													"key": "__field_{{textareaElement_Key}}",
													"value": "Form contains textarea element and element is required. Submit form which enter value to the element.",
													"type": "text"
												},
												{
													"key": "__field_{{numberElement_Key}}",
													"value": "test",
													"type": "text"
												},
												{
													"key": "__field_{{rangeElement_Key}}",
													"value": "11",
													"type": "text"
												},
												{
													"key": "__field_{{urlElement_Key}}",
													"value": "test",
													"type": "text"
												},
												{
													"key": "__field_{{selectionElement_Key}}",
													"value": "test",
													"type": "text"
												},
												{
													"key": "__field_{{choiceElement_Key}}",
													"value": "10",
													"type": "text"
												},
												{
													"key": "__field_{{imageChoiceElement_Key}}",
													"value": "test",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=33714",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "33714"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a complex multiple form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
													"\r",
													"pm.collectionVariables.set(\"textboxElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'TextboxElementBlock').key);\r",
													"\r",
													"pm.collectionVariables.set(\"textareaElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'TextareaElementBlock').key);\r",
													"\r",
													"pm.collectionVariables.set(\"numberElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'NumberElementBlock').key);\r",
													"\r",
													"pm.collectionVariables.set(\"rangeElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'RangeElementBlock').key);\r",
													"\r",
													"pm.collectionVariables.set(\"urlElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'UrlElementBlock').key);\r",
													"\r",
													"pm.collectionVariables.set(\"selectionElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'SelectionElementBlock').key);\r",
													"\r",
													"pm.collectionVariables.set(\"choiceElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'ChoiceElementBlock').key);\r",
													"\r",
													"pm.collectionVariables.set(\"imageChoiceElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'ImageChoiceElementBlock').key);\r",
													"\r",
													"pm.collectionVariables.set(\"visitorDataHiddenElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'VisitorDataHiddenElementBlock').key);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "4.1 Submit form with valid values - CurrentStep = 0",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = requestData.getElementValue(textboxElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value1\", element_Value1);\r",
													"\r",
													"let textareaElement_Key = pm.collectionVariables.get(\"textareaElement_Key\");\r",
													"let element_Value2 = requestData.getElementValue(textareaElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value2\", element_Value2);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "test@gmail.com",
													"type": "text"
												},
												{
													"key": "__field_{{textareaElement_Key}}",
													"value": "test_123",
													"type": "text"
												},
												{
													"key": "__field_{{numberElement_Key}}",
													"value": "1.000.000",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{rangeElement_Key}}",
													"value": "10",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{urlElement_Key}}",
													"value": "https://www.google.com/maps",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{selectionElement_Key}}",
													"value": "Ha Noi",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{choiceElement_Key}}",
													"value": "1",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{imageChoiceElement_Key}}",
													"value": "/globalassets/alloy-meet/alloymeet.png",
													"type": "text",
													"disabled": true
												},
												{
													"key": "CurrentStep",
													"value": "0",
													"type": "text"
												},
												{
													"key": "IsFinalized",
													"value": "false",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = pm.collectionVariables.get(\"element_Value1\");\r",
													"\r",
													"let textareaElement_Key = pm.collectionVariables.get(\"textareaElement_Key\");\r",
													"let element_Value2 = pm.collectionVariables.get(\"element_Value2\");\r",
													"\r",
													"let numberElement_Key = pm.collectionVariables.get(\"numberElement_Key\");\r",
													"let rangeElement_Key = pm.collectionVariables.get(\"rangeElement_Key\");\r",
													"let urlElement_Key = pm.collectionVariables.get(\"urlElement_Key\");\r",
													"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
													"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
													"let imageChoiceElement_Key = pm.collectionVariables.get(\"imageChoiceElement_Key\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key, element_Value1);\r",
													"verifyFieldValueEqual(textareaElement_Key, element_Value2);\r",
													"verifyFieldValueEqual(numberElement_Key, null);\r",
													"verifyFieldValueEqual(rangeElement_Key, null);\r",
													"verifyFieldValueEqual(urlElement_Key, null);\r",
													"verifyFieldValueEqual(selectionElement_Key, null);\r",
													"verifyFieldValueEqual(choiceElement_Key, null);\r",
													"verifyFieldValueEqual(imageChoiceElement_Key, null);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "4.2 Submit form with valid values - CurrentStep = 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"let numberElement_Key = pm.collectionVariables.get(\"numberElement_Key\");\r",
													"let element_Value3 = requestData.getElementValue(numberElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value3\", element_Value3);\r",
													"\r",
													"let rangeElement_Key = pm.collectionVariables.get(\"rangeElement_Key\");\r",
													"let element_Value4 = requestData.getElementValue(rangeElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value4\", element_Value4);\r",
													"\r",
													"let urlElement_Key = pm.collectionVariables.get(\"urlElement_Key\");\r",
													"let element_Value5 = requestData.getElementValue(urlElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value5\", element_Value5);\r",
													"\r",
													"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
													"let element_Value6 = requestData.getElementValue(selectionElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value6\", element_Value6);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "test@gmail.com",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{textareaElement_Key}}",
													"value": "test_123",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{numberElement_Key}}",
													"value": "1000000",
													"type": "text"
												},
												{
													"key": "__field_{{rangeElement_Key}}",
													"value": "10",
													"type": "text"
												},
												{
													"key": "__field_{{urlElement_Key}}",
													"value": "https://www.google.com/maps",
													"type": "text"
												},
												{
													"key": "__field_{{selectionElement_Key}}",
													"value": "Ha Noi",
													"type": "text"
												},
												{
													"key": "__field_{{choiceElement_Key}}",
													"value": "1",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{imageChoiceElement_Key}}",
													"value": "/globalassets/alloy-meet/alloymeet.png",
													"type": "text",
													"disabled": true
												},
												{
													"key": "CurrentStep",
													"value": "1",
													"type": "text"
												},
												{
													"key": "SubmissionKey",
													"value": "{{submissionKey}}",
													"type": "text"
												},
												{
													"key": "IsFinalized",
													"value": "false",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = pm.collectionVariables.get(\"element_Value1\");\r",
													"\r",
													"let textareaElement_Key = pm.collectionVariables.get(\"textareaElement_Key\");\r",
													"let element_Value2 = pm.collectionVariables.get(\"element_Value2\");\r",
													"console.log(element_Value2);\r",
													"\r",
													"let numberElement_Key = pm.collectionVariables.get(\"numberElement_Key\");\r",
													"let element_Value3 = pm.collectionVariables.get(\"element_Value3\");\r",
													"\r",
													"let rangeElement_Key = pm.collectionVariables.get(\"rangeElement_Key\");\r",
													"let element_Value4 = pm.collectionVariables.get(\"element_Value4\");\r",
													"\r",
													"let urlElement_Key = pm.collectionVariables.get(\"urlElement_Key\");\r",
													"let element_Value5 = pm.collectionVariables.get(\"element_Value5\");\r",
													"\r",
													"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
													"let element_Value6 = pm.collectionVariables.get(\"element_Value6\");\r",
													"\r",
													"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
													"let imageChoiceElement_Key = pm.collectionVariables.get(\"imageChoiceElement_Key\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key, element_Value1);\r",
													"verifyFieldValueEqual(textareaElement_Key, element_Value2);\r",
													"verifyFieldValueEqual(numberElement_Key, Number.parseInt(element_Value3));\r",
													"verifyFieldValueEqual(rangeElement_Key, Number.parseInt(element_Value4));\r",
													"verifyFieldValueEqual(urlElement_Key, element_Value5);\r",
													"verifyFieldValueEqual(selectionElement_Key, element_Value6);\r",
													"verifyFieldValueEqual(choiceElement_Key, null);\r",
													"verifyFieldValueEqual(imageChoiceElement_Key, null);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "4.3 Submit form with valid values - CurrentStep = 2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
													"let element_Value7 = requestData.getElementValue(choiceElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value7\", element_Value7);\r",
													"\r",
													"let imageChoiceElement_Key = pm.collectionVariables.get(\"imageChoiceElement_Key\");\r",
													"let element_Value8 = requestData.getElementValue(imageChoiceElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value8\", element_Value8);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "test@gmail.com",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{textareaElement_Key}}",
													"value": "test_123",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{numberElement_Key}}",
													"value": "1,000,000",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{rangeElement_Key}}",
													"value": "10",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{urlElement_Key}}",
													"value": "https://www.google.com/maps",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{selectionElement_Key}}",
													"value": "Ha Noi",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{choiceElement_Key}}",
													"value": "1",
													"type": "text"
												},
												{
													"key": "__field_{{imageChoiceElement_Key}}",
													"value": "{{url}}/globalassets/alloy-meet/alloymeet.png",
													"type": "text"
												},
												{
													"key": "CurrentStep",
													"value": "2",
													"type": "text"
												},
												{
													"key": "SubmissionKey",
													"value": "{{submissionKey}}",
													"type": "text"
												},
												{
													"key": "IsFinalized",
													"value": "true",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = pm.collectionVariables.get(\"element_Value1\");\r",
													"\r",
													"let textareaElement_Key = pm.collectionVariables.get(\"textareaElement_Key\");\r",
													"let element_Value2 = pm.collectionVariables.get(\"element_Value2\");\r",
													"\r",
													"let numberElement_Key = pm.collectionVariables.get(\"numberElement_Key\");\r",
													"let element_Value3 = pm.collectionVariables.get(\"element_Value3\");\r",
													"\r",
													"let rangeElement_Key = pm.collectionVariables.get(\"rangeElement_Key\");\r",
													"let element_Value4 = pm.collectionVariables.get(\"element_Value4\");\r",
													"\r",
													"let urlElement_Key = pm.collectionVariables.get(\"urlElement_Key\");\r",
													"let element_Value5 = pm.collectionVariables.get(\"element_Value5\");\r",
													"\r",
													"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
													"let element_Value6 = pm.collectionVariables.get(\"element_Value6\");\r",
													"\r",
													"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
													"let element_Value7 = pm.collectionVariables.get(\"element_Value7\");\r",
													"\r",
													"let imageChoiceElement_Key = pm.collectionVariables.get(\"imageChoiceElement_Key\");\r",
													"let element_Value8 = pm.collectionVariables.get(\"element_Value8\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key, element_Value1);\r",
													"verifyFieldValueEqual(textareaElement_Key, element_Value2);\r",
													"verifyFieldValueEqual(numberElement_Key, Number.parseInt(element_Value3));\r",
													"verifyFieldValueEqual(rangeElement_Key, Number.parseInt(element_Value4));\r",
													"verifyFieldValueEqual(urlElement_Key, element_Value5);\r",
													"verifyFieldValueEqual(selectionElement_Key, element_Value6);\r",
													"verifyFieldValueEqual(choiceElement_Key, element_Value7);\r",
													"verifyFieldValueEqual(imageChoiceElement_Key, element_Value8);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "5.1 Invalid - Submit form without values - CurrentStep = 0",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"let textboxElement_Key = pm.collectionVariables.get('textboxElement_Key');\r",
													"\r",
													"let textareaElement_Key = pm.collectionVariables.get('textareaElement_Key');\r",
													"\r",
													"let numberElement_Key = pm.collectionVariables.get('numberElement_Key');\r",
													"\r",
													"let rangeElement_Key = pm.collectionVariables.get('rangeElement_Key');\r",
													"\r",
													"let urlElement_Key = pm.collectionVariables.get('urlElement_Key');\r",
													"\r",
													"let selectionElement_Key = pm.collectionVariables.get('selectionElement_Key');\r",
													"\r",
													"let choiceElement_Key = pm.collectionVariables.get('choiceElement_Key');\r",
													"\r",
													"let imageChoiceElement_Key = pm.collectionVariables.get('imageChoiceElement_Key');\r",
													"\r",
													"let visitorDataHiddenElement_Key = pm.collectionVariables.get('visitorDataHiddenElement_Key');\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(textboxElement_Key, \"This field is required.\");\r",
													"verifyErrorMessageContains(textareaElement_Key, \"This field is required.\");\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "test@gmail.com",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{textareaElement_Key}}",
													"value": "test_123",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{numberElement_Key}}",
													"value": "1,000,000",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{rangeElement_Key}}",
													"value": "10",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{urlElement_Key}}",
													"value": "https://www.google.com/maps",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{selectionElement_Key}}",
													"value": "Ha Noi",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{choiceElement_Key}}",
													"value": "1",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{imageChoiceElement_Key}}",
													"value": "/globalassets/alloy-meet/alloymeet.png",
													"type": "text",
													"disabled": true
												},
												{
													"key": "CurrentStep",
													"value": "0",
													"type": "text"
												},
												{
													"key": "SubmissionKey",
													"value": "{{submissionKey}}",
													"type": "text",
													"disabled": true
												},
												{
													"key": "IsFinalized",
													"value": "false",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "5.2 Invalid - Submit form without values - CurrentStep = 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"let textboxElement_Key = pm.collectionVariables.get('textboxElement_Key');\r",
													"\r",
													"let textareaElement_Key = pm.collectionVariables.get('textareaElement_Key');\r",
													"\r",
													"let numberElement_Key = pm.collectionVariables.get('numberElement_Key');\r",
													"\r",
													"let rangeElement_Key = pm.collectionVariables.get('rangeElement_Key');\r",
													"\r",
													"let urlElement_Key = pm.collectionVariables.get('urlElement_Key');\r",
													"\r",
													"let selectionElement_Key = pm.collectionVariables.get('selectionElement_Key');\r",
													"\r",
													"let choiceElement_Key = pm.collectionVariables.get('choiceElement_Key');\r",
													"\r",
													"let imageChoiceElement_Key = pm.collectionVariables.get('imageChoiceElement_Key');\r",
													"\r",
													"let fileUploadElement_Key = pm.collectionVariables.get('fileUploadElement_Key');\r",
													"\r",
													"let visitorDataHiddenElement_Key = pm.collectionVariables.get('visitorDataHiddenElement_Key');\r",
													"\r",
													"verifyResponseCode(400);\r",
													"verifyErrorMessageContains(numberElement_Key, \"This field is required.\");\r",
													"verifyErrorMessageContains(rangeElement_Key,  \"Unexpected value is not accepted.\");\r",
													"verifyErrorMessageContains(urlElement_Key, \"This field is required.\");\r",
													"verifyErrorMessageContains(selectionElement_Key, \"This field is required.\");\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "test@gmail.com",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{textareaElement_Key}}",
													"value": "test_123",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{numberElement_Key}}",
													"value": "1,000,000",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{rangeElement_Key}}",
													"value": "10",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{urlElement_Key}}",
													"value": "https://www.google.com/maps",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{selectionElement_Key}}",
													"value": "Ha Noi",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{choiceElement_Key}}",
													"value": "1",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{imageChoiceElement_Key}}",
													"value": "/globalassets/alloy-meet/alloymeet.png",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{fileUploadElement_Key}}",
													"type": "file",
													"src": [
														"postman-cloud:///1eeb35d4-ea74-46e0-91a6-0871d29e5912",
														"postman-cloud:///1eeb371c-3d7a-44f0-a176-80ecf3335771"
													],
													"disabled": true
												},
												{
													"key": "CurrentStep",
													"value": "1",
													"type": "text"
												},
												{
													"key": "SubmissionKey",
													"value": "{{submission_Key}}",
													"type": "text",
													"disabled": true
												},
												{
													"key": "IsFinalized",
													"value": "false",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "5.3 Invalid - Submit form without values - CurrentStep = 2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key = pm.collectionVariables.get('textboxElement_Key');\r",
													"\r",
													"let textareaElement_Key = pm.collectionVariables.get('textareaElement_Key');\r",
													"\r",
													"let numberElement_Key = pm.collectionVariables.get('numberElement_Key');\r",
													"\r",
													"let rangeElement_Key = pm.collectionVariables.get('rangeElement_Key');\r",
													"\r",
													"let urlElement_Key = pm.collectionVariables.get('urlElement_Key');\r",
													"\r",
													"let selectionElement_Key = pm.collectionVariables.get('selectionElement_Key');\r",
													"\r",
													"let choiceElement_Key = pm.collectionVariables.get('choiceElement_Key');\r",
													"\r",
													"let imageChoiceElement_Key = pm.collectionVariables.get('imageChoiceElement_Key');\r",
													"\r",
													"let visitorDataHiddenElement_Key = pm.collectionVariables.get('visitorDataHiddenElement_Key');\r",
													"\r",
													"verifyResponseCode(400);\r",
													"\r",
													"verifyErrorMessageContains(choiceElement_Key, \"This field is required.\");\r",
													"verifyErrorMessageContains(imageChoiceElement_Key, \"This field is required.\");\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "test@gmail.com",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{textareaElement_Key}}",
													"value": "test_123",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{numberElement_Key}}",
													"value": "1,000,000",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{rangeElement_Key}}",
													"value": "10",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{urlElement_Key}}",
													"value": "https://www.google.com/maps",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{selectionElement_Key}}",
													"value": "Ha Noi",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{choiceElement_Key}}",
													"value": "1",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{imageChoiceElement_Key}}",
													"value": "/globalassets/alloy-meet/alloymeet.png",
													"type": "text",
													"disabled": true
												},
												{
													"key": "CurrentStep",
													"value": "2",
													"type": "text"
												},
												{
													"key": "SubmissionKey",
													"value": "{{submission_Key}}",
													"type": "text",
													"disabled": true
												},
												{
													"key": "IsFinalized",
													"value": "false",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(404);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=34736",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "34736"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a complex multiple form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
													"\r",
													"pm.collectionVariables.set(\"textboxElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'TextboxElementBlock').key);\r",
													"\r",
													"pm.collectionVariables.set(\"textareaElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'TextareaElementBlock').key);\r",
													"\r",
													"pm.collectionVariables.set(\"numberElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'NumberElementBlock').key);\r",
													"\r",
													"pm.collectionVariables.set(\"rangeElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'RangeElementBlock').key);\r",
													"\r",
													"pm.collectionVariables.set(\"urlElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'UrlElementBlock').key);\r",
													"\r",
													"pm.collectionVariables.set(\"selectionElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'SelectionElementBlock').key);\r",
													"\r",
													"pm.collectionVariables.set(\"choiceElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'ChoiceElementBlock').key);\r",
													"\r",
													"pm.collectionVariables.set(\"imageChoiceElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'ImageChoiceElementBlock').key);\r",
													"\r",
													"pm.collectionVariables.set(\"fileUploadElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'FileUploadElementBlock').key);\r",
													"\r",
													"pm.collectionVariables.set(\"visitorDataHiddenElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'VisitorDataHiddenElementBlock').key);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "6.1 Submit form with valid values - CurrentStep = 0",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = requestData.getElementValue(textboxElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value1\", element_Value1);\r",
													"\r",
													"let textareaElement_Key = pm.collectionVariables.get(\"textareaElement_Key\");\r",
													"let element_Value2 = requestData.getElementValue(textareaElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value2\", element_Value2);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "test@gmail.com",
													"type": "text"
												},
												{
													"key": "__field_{{textareaElement_Key}}",
													"value": "test_123",
													"type": "text"
												},
												{
													"key": "__field_{{numberElement_Key}}",
													"value": "1.000.000",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{rangeElement_Key}}",
													"value": "10",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{urlElement_Key}}",
													"value": "https://www.google.com/maps",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{selectionElement_Key}}",
													"value": "Ha Noi",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{choiceElement_Key}}",
													"value": "1",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{imageChoiceElement_Key}}",
													"value": "/globalassets/alloy-meet/alloymeet.png",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{fileUploadElement_Key}}",
													"type": "file",
													"src": [
														"postman-cloud:///1eeb35d4-ea74-46e0-91a6-0871d29e5912",
														"postman-cloud:///1eeb371c-3d7a-44f0-a176-80ecf3335771"
													],
													"disabled": true
												},
												{
													"key": "CurrentStep",
													"value": "0",
													"type": "text"
												},
												{
													"key": "IsFinalized",
													"value": "false",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = pm.collectionVariables.get(\"element_Value1\");\r",
													"\r",
													"let textareaElement_Key = pm.collectionVariables.get(\"textareaElement_Key\");\r",
													"let element_Value2 = pm.collectionVariables.get(\"element_Value2\");\r",
													"\r",
													"let numberElement_Key = pm.collectionVariables.get(\"numberElement_Key\");\r",
													"let rangeElement_Key = pm.collectionVariables.get(\"rangeElement_Key\");\r",
													"let urlElement_Key = pm.collectionVariables.get(\"urlElement_Key\");\r",
													"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
													"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
													"let imageChoiceElement_Key = pm.collectionVariables.get(\"imageChoiceElement_Key\");\r",
													"let fileUploadElement_Key = pm.collectionVariables.get(\"fileUploadElement_Key\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key, element_Value1);\r",
													"verifyFieldValueEqual(textareaElement_Key, element_Value2);\r",
													"verifyFieldValueEqual(numberElement_Key, null);\r",
													"verifyFieldValueEqual(rangeElement_Key, null);\r",
													"verifyFieldValueEqual(urlElement_Key, null);\r",
													"verifyFieldValueEqual(selectionElement_Key, null);\r",
													"verifyFieldValueEqual(choiceElement_Key, null);\r",
													"verifyFieldValueEqual(imageChoiceElement_Key, null);\r",
													"verifyFieldValueEqual(fileUploadElement_Key, null);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "6.2 Submit form with valid values - CurrentStep = 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"let numberElement_Key = pm.collectionVariables.get(\"numberElement_Key\");\r",
													"let element_Value3 = requestData.getElementValue(numberElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value3\", element_Value3);\r",
													"\r",
													"let rangeElement_Key = pm.collectionVariables.get(\"rangeElement_Key\");\r",
													"let element_Value4 = requestData.getElementValue(rangeElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value4\", element_Value4);\r",
													"\r",
													"let urlElement_Key = pm.collectionVariables.get(\"urlElement_Key\");\r",
													"let element_Value5 = requestData.getElementValue(urlElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value5\", element_Value5);\r",
													"\r",
													"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
													"let element_Value6 = requestData.getElementValue(selectionElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value6\", element_Value6);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "test@gmail.com",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{textareaElement_Key}}",
													"value": "test_123",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{numberElement_Key}}",
													"value": "1000000",
													"type": "text"
												},
												{
													"key": "__field_{{rangeElement_Key}}",
													"value": "10",
													"type": "text"
												},
												{
													"key": "__field_{{urlElement_Key}}",
													"value": "https://www.google.com/maps",
													"type": "text"
												},
												{
													"key": "__field_{{selectionElement_Key}}",
													"value": "Ha Noi",
													"type": "text"
												},
												{
													"key": "__field_{{choiceElement_Key}}",
													"value": "1",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{imageChoiceElement_Key}}",
													"value": "/globalassets/alloy-meet/alloymeet.png",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{fileUploadElement_Key}}",
													"type": "file",
													"src": [
														"postman-cloud:///1eeb35d4-ea74-46e0-91a6-0871d29e5912",
														"postman-cloud:///1eeb371c-3d7a-44f0-a176-80ecf3335771"
													],
													"disabled": true
												},
												{
													"key": "CurrentStep",
													"value": "1",
													"type": "text"
												},
												{
													"key": "IsFinalized",
													"value": "false",
													"type": "text"
												},
												{
													"key": "submissionKey",
													"value": "{{submissionKey}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = pm.collectionVariables.get(\"element_Value1\");\r",
													"\r",
													"let textareaElement_Key = pm.collectionVariables.get(\"textareaElement_Key\");\r",
													"let element_Value2 = pm.collectionVariables.get(\"element_Value2\");\r",
													"\r",
													"let numberElement_Key = pm.collectionVariables.get(\"numberElement_Key\");\r",
													"let element_Value3 = pm.collectionVariables.get(\"element_Value3\");\r",
													"\r",
													"let rangeElement_Key = pm.collectionVariables.get(\"rangeElement_Key\");\r",
													"let element_Value4 = pm.collectionVariables.get(\"element_Value4\");\r",
													"\r",
													"let urlElement_Key = pm.collectionVariables.get(\"urlElement_Key\");\r",
													"let element_Value5 = pm.collectionVariables.get(\"element_Value5\");\r",
													"\r",
													"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
													"let element_Value6 = pm.collectionVariables.get(\"element_Value6\");\r",
													"\r",
													"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
													"let imageChoiceElement_Key = pm.collectionVariables.get(\"imageChoiceElement_Key\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key, element_Value1);\r",
													"verifyFieldValueEqual(textareaElement_Key, element_Value2);\r",
													"verifyFieldValueEqual(numberElement_Key, Number.parseInt(element_Value3));\r",
													"verifyFieldValueEqual(rangeElement_Key, Number.parseInt(element_Value4));\r",
													"verifyFieldValueEqual(urlElement_Key, element_Value5);\r",
													"verifyFieldValueEqual(selectionElement_Key, element_Value6);\r",
													"verifyFieldValueEqual(choiceElement_Key, null);\r",
													"verifyFieldValueEqual(imageChoiceElement_Key, null);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "6.3 Submit form with valid values - CurrentStep = 2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
													"let element_Value7 = requestData.getElementValue(choiceElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value7\", element_Value7);\r",
													"\r",
													"let imageChoiceElement_Key = pm.collectionVariables.get(\"imageChoiceElement_Key\");\r",
													"let element_Value8 = requestData.getElementValue(imageChoiceElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value8\", element_Value8);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "test@gmail.com",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{textareaElement_Key}}",
													"value": "test_123",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{numberElement_Key}}",
													"value": "1.000.000",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{rangeElement_Key}}",
													"value": "10",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{urlElement_Key}}",
													"value": "https://www.google.com/maps",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{selectionElement_Key}}",
													"value": "Ha Noi",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{choiceElement_Key}}",
													"value": "1",
													"type": "text"
												},
												{
													"key": "__field_{{imageChoiceElement_Key}}",
													"value": "{{url}}/globalassets/alloy-meet/alloymeet.png",
													"type": "text"
												},
												{
													"key": "CurrentStep",
													"value": "2",
													"type": "text"
												},
												{
													"key": "IsFinalized",
													"value": "false",
													"type": "text"
												},
												{
													"key": "submissionKey",
													"value": "{{submissionKey}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = pm.collectionVariables.get(\"element_Value1\");\r",
													"\r",
													"let textareaElement_Key = pm.collectionVariables.get(\"textareaElement_Key\");\r",
													"let element_Value2 = pm.collectionVariables.get(\"element_Value2\");\r",
													"\r",
													"let numberElement_Key = pm.collectionVariables.get(\"numberElement_Key\");\r",
													"let element_Value3 = pm.collectionVariables.get(\"element_Value3\");\r",
													"\r",
													"let rangeElement_Key = pm.collectionVariables.get(\"rangeElement_Key\");\r",
													"let element_Value4 = pm.collectionVariables.get(\"element_Value4\");\r",
													"\r",
													"let urlElement_Key = pm.collectionVariables.get(\"urlElement_Key\");\r",
													"let element_Value5 = pm.collectionVariables.get(\"element_Value5\");\r",
													"\r",
													"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
													"let element_Value6 = pm.collectionVariables.get(\"element_Value6\");\r",
													"\r",
													"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
													"let element_Value7 = pm.collectionVariables.get(\"element_Value7\");\r",
													"\r",
													"let imageChoiceElement_Key = pm.collectionVariables.get(\"imageChoiceElement_Key\");\r",
													"let element_Value8 = pm.collectionVariables.get(\"element_Value8\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key, element_Value1);\r",
													"verifyFieldValueEqual(textareaElement_Key, element_Value2);\r",
													"verifyFieldValueEqual(numberElement_Key, Number.parseInt(element_Value3));\r",
													"verifyFieldValueEqual(rangeElement_Key, Number.parseInt(element_Value4));\r",
													"verifyFieldValueEqual(urlElement_Key, element_Value5);\r",
													"verifyFieldValueEqual(selectionElement_Key, element_Value6);\r",
													"verifyFieldValueEqual(choiceElement_Key, element_Value7);\r",
													"verifyFieldValueEqual(imageChoiceElement_Key, element_Value8);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Dependencies",
							"item": [
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=35757",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "35757"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form contains field - Shown, Equals",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
													"\r",
													"pm.collectionVariables.set(\"textboxElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'TextboxElementBlock').key);\r",
													"\r",
													"pm.collectionVariables.set(\"textareaElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'TextareaElementBlock').key);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "1. Submit form with matching condition",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = requestData.getElementValue(textboxElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value1\", element_Value1);\r",
													"\r",
													"let textareaElement_Key = pm.collectionVariables.get(\"textareaElement_Key\");\r",
													"let element_Value2 = requestData.getElementValue(textareaElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value2\", element_Value2);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "Ha Noi",
													"type": "text"
												},
												{
													"key": "__field_{{textareaElement_Key}}",
													"value": "test_123",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = pm.collectionVariables.get(\"element_Value1\");\r",
													"\r",
													"let textareaElement_Key = pm.collectionVariables.get(\"textareaElement_Key\");\r",
													"let element_Value2 = pm.collectionVariables.get(\"element_Value2\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key, element_Value1);\r",
													"verifyFieldValueEqual(textareaElement_Key, element_Value2);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "2. Submit form with not matching condition",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = requestData.getElementValue(textboxElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value1\", element_Value1);\r",
													"\r",
													"let textareaElement_Key = pm.collectionVariables.get(\"textareaElement_Key\");\r",
													"let element_Value2 = requestData.getElementValue(textareaElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value2\", element_Value2);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "test",
													"type": "text"
												},
												{
													"key": "__field_{{textareaElement_Key}}",
													"value": "test_123",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"console.log(textboxElement_Key);\r",
													"// let textboxElement_Key = pm.collectionVariables.get(\"textareaElement_Key\");\r",
													"let element_Value1 = pm.collectionVariables.get(\"element_Value1\");\r",
													"console.log(element_Value1);\r",
													"\r",
													"let textareaElement_Key = pm.collectionVariables.get(\"textareaElement_Key\");\r",
													"console.log(textareaElement_Key);\r",
													"// let textboxElement_Key = pm.collectionVariables.get(\"textareaElement_Key\");\r",
													"let element_Value2 = pm.collectionVariables.get(\"element_Value2\");\r",
													"console.log(element_Value2);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key, element_Value1);\r",
													"verifyFieldValueEqual(textareaElement_Key, \"\");\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=35767",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "35767"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form contains field - Shown, Not Equals",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
													"\r",
													"pm.collectionVariables.set(\"textboxElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'TextboxElementBlock').key);\r",
													"\r",
													"pm.collectionVariables.set(\"textareaElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'TextareaElementBlock').key);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "3. Submit form with matching condition",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = requestData.getElementValue(textboxElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value1\", element_Value1);\r",
													"\r",
													"let textareaElement_Key = pm.collectionVariables.get(\"textareaElement_Key\");\r",
													"let element_Value2 = requestData.getElementValue(textareaElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value2\", element_Value2);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textareaElement_Key}}",
													"value": "test_123",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "Hai Phong",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = pm.collectionVariables.get(\"element_Value1\");\r",
													"\r",
													"let textareaElement_Key = pm.collectionVariables.get(\"textareaElement_Key\");\r",
													"let element_Value2 = pm.collectionVariables.get(\"element_Value2\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key, element_Value1);\r",
													"verifyFieldValueEqual(textareaElement_Key, element_Value2);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "4. Submit form with not matching condition",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = requestData.getElementValue(textboxElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value1\", element_Value1);\r",
													"\r",
													"let textareaElement_Key = pm.collectionVariables.get(\"textareaElement_Key\");\r",
													"let element_Value2 = requestData.getElementValue(textareaElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value2\", element_Value2);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "test",
													"type": "text"
												},
												{
													"key": "__field_{{textareaElement_Key}}",
													"value": "Ha Noi",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = pm.collectionVariables.get(\"element_Value1\");\r",
													"\r",
													"let textareaElement_Key = pm.collectionVariables.get(\"textareaElement_Key\");\r",
													"let element_Value2 = pm.collectionVariables.get(\"element_Value2\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key, \"\");\r",
													"verifyFieldValueEqual(textareaElement_Key, element_Value2);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=35785",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "35785"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form contains field - Shown + Contains",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
													"\r",
													"pm.collectionVariables.set(\"textboxElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'TextboxElementBlock').key);\r",
													"\r",
													"pm.collectionVariables.set(\"numberElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'NumberElementBlock').key);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "5. Submit form with matching condition",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = requestData.getElementValue(textboxElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value1\", element_Value1);\r",
													"\r",
													"let numberElement_Key = pm.collectionVariables.get(\"numberElement_Key\");\r",
													"let element_Value2 = requestData.getElementValue(numberElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value2\", element_Value2);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "province",
													"type": "text"
												},
												{
													"key": "__field_{{numberElement_Key}}",
													"value": "10000",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = pm.collectionVariables.get(\"element_Value1\");\r",
													"\r",
													"let numberElement_Key = pm.collectionVariables.get(\"numberElement_Key\");\r",
													"let element_Value2 = pm.collectionVariables.get(\"element_Value2\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key, element_Value1);\r",
													"verifyFieldValueEqual(numberElement_Key, Number.parseInt(element_Value2, 10));\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "6. Submit form with not matching condition",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = requestData.getElementValue(textboxElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value1\", element_Value1);\r",
													"\r",
													"let numberElement_Key = pm.collectionVariables.get(\"numberElement_Key\");\r",
													"let element_Value2 = requestData.getElementValue(numberElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value2\", element_Value2);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "test",
													"type": "text"
												},
												{
													"key": "__field_{{numberElement_Key}}",
													"value": "10000",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = pm.collectionVariables.get(\"element_Value1\");\r",
													"\r",
													"let numberElement_Key = pm.collectionVariables.get(\"numberElement_Key\");\r",
													"let element_Value2 = pm.collectionVariables.get(\"element_Value2\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key, element_Value1);\r",
													"verifyFieldValueEqual(numberElement_Key, null);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=35790",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "35790"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form contains field - Shown + Not Contains",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
													"\r",
													"pm.collectionVariables.set(\"textboxElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'TextboxElementBlock').key);\r",
													"\r",
													"pm.collectionVariables.set(\"rangeElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'RangeElementBlock').key);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "7. Submit form with matching condition",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = requestData.getElementValue(textboxElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value1\", element_Value1);\r",
													"\r",
													"let rangeElement_Key = pm.collectionVariables.get(\"rangeElement_Key\");\r",
													"let element_Value2 = requestData.getElementValue(rangeElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value2\", element_Value2);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "Ha Noi",
													"type": "text"
												},
												{
													"key": "__field_{{rangeElement_Key}}",
													"value": "10",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = pm.collectionVariables.get(\"element_Value1\");\r",
													"\r",
													"let rangeElement_Key = pm.collectionVariables.get(\"rangeElement_Key\");\r",
													"let element_Value2 = pm.collectionVariables.get(\"element_Value2\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key, element_Value1);\r",
													"verifyFieldValueEqual(rangeElement_Key, element_Value2);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "8. Submit form with not matching condition",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = requestData.getElementValue(textboxElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value1\", element_Value1);\r",
													"\r",
													"let rangeElement_Key = pm.collectionVariables.get(\"rangeElement_Key\");\r",
													"let element_Value2 = requestData.getElementValue(rangeElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value2\", element_Value2);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "province",
													"type": "text"
												},
												{
													"key": "__field_{{rangeElement_Key}}",
													"value": "10",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = pm.collectionVariables.get(\"element_Value1\");\r",
													"\r",
													"let rangeElement_Key = pm.collectionVariables.get(\"rangeElement_Key\");\r",
													"let element_Value2 = pm.collectionVariables.get(\"element_Value2\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key, element_Value1);\r",
													"verifyFieldValueEqual(rangeElement_Key, \"\");\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=36785",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "36785"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form contains field - Shown + Regular expression",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
													"\r",
													"pm.collectionVariables.set(\"textboxElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'TextboxElementBlock').key);\r",
													"\r",
													"pm.collectionVariables.set(\"urlElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'UrlElementBlock').key);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "9. Submit form with matching condition",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = requestData.getElementValue(textboxElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value1\", element_Value1);\r",
													"\r",
													"let urlElement_Key = pm.collectionVariables.get(\"urlElement_Key\");\r",
													"let element_Value2 = requestData.getElementValue(urlElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value2\", element_Value2);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "HaNoi",
													"type": "text"
												},
												{
													"key": "__field_{{urlElement_Key}}",
													"value": "https://digitalfortress.tech/",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = pm.collectionVariables.get(\"element_Value1\");\r",
													"\r",
													"let urlElement_Key = pm.collectionVariables.get(\"urlElement_Key\");\r",
													"let element_Value2 = pm.collectionVariables.get(\"element_Value2\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key, element_Value1);\r",
													"verifyFieldValueEqual(urlElement_Key, element_Value2);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "10. Submit form with not matching condition",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = requestData.getElementValue(textboxElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value1\", element_Value1);\r",
													"\r",
													"let urlElement_Key = pm.collectionVariables.get(\"urlElement_Key\");\r",
													"let element_Value2 = requestData.getElementValue(urlElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value2\", element_Value2);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "Ha Noi",
													"type": "text"
												},
												{
													"key": "__field_{{urlElement_Key}}",
													"value": "https://digitalfortress.tech/",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = pm.collectionVariables.get(\"element_Value1\");\r",
													"\r",
													"let urlElement_Key = pm.collectionVariables.get(\"urlElement_Key\");\r",
													"let element_Value2 = pm.collectionVariables.get(\"element_Value2\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key, element_Value1);\r",
													"verifyFieldValueEqual(urlElement_Key, \"\");\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=36792",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "36792"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form contains field - Hidden + Equals",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
													"\r",
													"pm.collectionVariables.set(\"textboxElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'TextboxElementBlock').key);\r",
													"\r",
													"pm.collectionVariables.set(\"selectionElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'SelectionElementBlock').key);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "11. Submit form with matching condition",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = requestData.getElementValue(textboxElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value1\", element_Value1);\r",
													"\r",
													"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
													"let element_Value2 = requestData.getElementValue(selectionElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value2\", element_Value2);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "Ha Noi",
													"type": "text"
												},
												{
													"key": "__field_{{selectionElement_Key}}",
													"value": "Hai Phong",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = pm.collectionVariables.get(\"element_Value1\");\r",
													"\r",
													"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
													"let element_Value2 = pm.collectionVariables.get(\"element_Value2\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key, element_Value1);\r",
													"verifyFieldValueEqual(selectionElement_Key, \"\");\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "12. Submit form with not matching condition",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = requestData.getElementValue(textboxElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value1\", element_Value1);\r",
													"\r",
													"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
													"let element_Value2 = requestData.getElementValue(selectionElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value2\", element_Value2);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "Hai Phong",
													"type": "text"
												},
												{
													"key": "__field_{{selectionElement_Key}}",
													"value": "Hai Phong",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = pm.collectionVariables.get(\"element_Value1\");\r",
													"\r",
													"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
													"let element_Value2 = pm.collectionVariables.get(\"element_Value2\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key, element_Value1);\r",
													"verifyFieldValueEqual(selectionElement_Key, element_Value2);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=36800",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "36800"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form contains field - Hidden + Not Equals",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
													"\r",
													"pm.collectionVariables.set(\"textboxElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'TextboxElementBlock').key);\r",
													"\r",
													"pm.collectionVariables.set(\"choiceElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'ChoiceElementBlock').key);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "13. Submit form with matching condition",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = requestData.getElementValue(textboxElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value1\", element_Value1);\r",
													"\r",
													"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
													"let element_Value2 = requestData.getElementValue(choiceElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value2\", element_Value2);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "Hai Phong",
													"type": "text"
												},
												{
													"key": "__field_{{choiceElement_Key}}",
													"value": "Hai Phong",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = pm.collectionVariables.get(\"element_Value1\");\r",
													"\r",
													"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
													"let element_Value2 = pm.collectionVariables.get(\"element_Value2\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key, element_Value1);\r",
													"verifyFieldValueEqual(choiceElement_Key, \"\");\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "14. Submit form with not matching condition",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = requestData.getElementValue(textboxElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value1\", element_Value1);\r",
													"\r",
													"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
													"let element_Value2 = requestData.getElementValue(choiceElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value2\", element_Value2);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "Ha Noi",
													"type": "text"
												},
												{
													"key": "__field_{{choiceElement_Key}}",
													"value": "Hai Phong",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = pm.collectionVariables.get(\"element_Value1\");\r",
													"\r",
													"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
													"let element_Value2 = pm.collectionVariables.get(\"element_Value2\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key, element_Value1);\r",
													"verifyFieldValueEqual(choiceElement_Key, element_Value2);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=36809",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "36809"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form contains field - Shown + All",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
													"\r",
													"pm.collectionVariables.set(\"textboxElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'TextboxElementBlock').key);\r",
													"\r",
													"pm.collectionVariables.set(\"choiceElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'ChoiceElementBlock').key);\r",
													"\r",
													"pm.collectionVariables.set(\"imageChoiceElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'ImageChoiceElementBlock').key);\r",
													"\r",
													"pm.collectionVariables.set(\"fileUploadElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'FileUploadElementBlock').key);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "15.1 Submit form with matching condition - 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = requestData.getElementValue(textboxElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value1\", element_Value1);\r",
													"\r",
													"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
													"let element_Value2 = requestData.getElementValue(choiceElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value2\", element_Value2);\r",
													"\r",
													"let imageChoiceElement_Key = pm.collectionVariables.get(\"imageChoiceElement_Key\");\r",
													"let element_Value3 = requestData.getElementValue(imageChoiceElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value3\", element_Value3);\r",
													"\r",
													"let fileUploadElement_Key = pm.collectionVariables.get(\"fileUploadElement_Key\");\r",
													"let element_Value4 = requestData.getElementValue(fileUploadElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value4\", element_Value4);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "test",
													"type": "text"
												},
												{
													"key": "__field_{{choiceElement_Key}}",
													"value": "1",
													"type": "text"
												},
												{
													"key": "__field_{{imageChoiceElement_Key}}",
													"value": "{{url}}/globalassets/alloy-meet/alloymeet.png",
													"type": "text"
												},
												{
													"key": "__field_{{fileUploadElement_Key}}",
													"type": "file",
													"src": "postman-cloud:///1eeb3722-47ab-4810-ab17-170f86fbf92a"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = pm.collectionVariables.get(\"element_Value1\");\r",
													"\r",
													"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
													"let element_Value2 = pm.collectionVariables.get(\"element_Value2\");\r",
													"\r",
													"let imageChoiceElement_Key = pm.collectionVariables.get(\"imageChoiceElement_Key\");\r",
													"let element_Value3 = pm.collectionVariables.get(\"element_Value3\");\r",
													"\r",
													"let fileUploadElement_Key = pm.collectionVariables.get(\"fileUploadElement_Key\");\r",
													"let element_Value4 = pm.collectionVariables.get(\"element_Value4\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key, element_Value1);\r",
													"verifyFieldValueEqual(choiceElement_Key, element_Value2);\r",
													"verifyFieldValueEqual(imageChoiceElement_Key, \"\");\r",
													"verifyFieldValueEqual(fileUploadElement_Key, element_Value4);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "15.2 Submit form with matching condition - 2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = requestData.getElementValue(textboxElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value1\", element_Value1);\r",
													"\r",
													"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
													"let element_Value2 = requestData.getElementValue(choiceElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value2\", element_Value2);\r",
													"\r",
													"let imageChoiceElement_Key = pm.collectionVariables.get(\"imageChoiceElement_Key\");\r",
													"let element_Value3 = requestData.getElementValue(imageChoiceElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value3\", element_Value3);\r",
													"\r",
													"let fileUploadElement_Key = pm.collectionVariables.get(\"fileUploadElement_Key\");\r",
													"let element_Value4 = requestData.getElementValue(fileUploadElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value4\", element_Value4);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "test",
													"type": "text"
												},
												{
													"key": "__field_{{choiceElement_Key}}",
													"value": "2",
													"type": "text"
												},
												{
													"key": "__field_{{imageChoiceElement_Key}}",
													"value": "{{url}}/globalassets/alloy-meet/alloymeet.png",
													"type": "text"
												},
												{
													"key": "__field_{{fileUploadElement_Key}}",
													"type": "file",
													"src": "postman-cloud:///1eeb3722-47ab-4810-ab17-170f86fbf92a"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = pm.collectionVariables.get(\"element_Value1\");\r",
													"\r",
													"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
													"let element_Value2 = pm.collectionVariables.get(\"element_Value2\");\r",
													"\r",
													"let imageChoiceElement_Key = pm.collectionVariables.get(\"imageChoiceElement_Key\");\r",
													"let element_Value3 = pm.collectionVariables.get(\"element_Value3\");\r",
													"\r",
													"let fileUploadElement_Key = pm.collectionVariables.get(\"fileUploadElement_Key\");\r",
													"let element_Value4 = pm.collectionVariables.get(\"element_Value4\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key, element_Value1);\r",
													"verifyFieldValueEqual(choiceElement_Key, element_Value2);\r",
													"verifyFieldValueEqual(imageChoiceElement_Key, element_Value3);\r",
													"verifyFieldValueEqual(fileUploadElement_Key, \"\");\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "16 Submit form with not matching condition",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = requestData.getElementValue(textboxElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value1\", element_Value1);\r",
													"\r",
													"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
													"let element_Value2 = requestData.getElementValue(choiceElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value2\", element_Value2);\r",
													"\r",
													"let imageChoiceElement_Key = pm.collectionVariables.get(\"imageChoiceElement_Key\");\r",
													"let element_Value3 = requestData.getElementValue(imageChoiceElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value3\", element_Value3);\r",
													"\r",
													"let fileUploadElement_Key = pm.collectionVariables.get(\"fileUploadElement_Key\");\r",
													"let element_Value4 = requestData.getElementValue(fileUploadElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value4\", element_Value4);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "test",
													"type": "text"
												},
												{
													"key": "__field_{{choiceElement_Key}}",
													"value": "3",
													"type": "text"
												},
												{
													"key": "__field_{{imageChoiceElement_Key}}",
													"value": "{{url}}/globalassets/alloy-meet/alloymeet.png",
													"type": "text"
												},
												{
													"key": "__field_{{fileUploadElement_Key}}",
													"type": "file",
													"src": "postman-cloud:///1eeb3722-47ab-4810-ab17-170f86fbf92a"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = pm.collectionVariables.get(\"element_Value1\");\r",
													"\r",
													"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
													"let element_Value2 = pm.collectionVariables.get(\"element_Value2\");\r",
													"\r",
													"let imageChoiceElement_Key = pm.collectionVariables.get(\"imageChoiceElement_Key\");\r",
													"let element_Value3 = pm.collectionVariables.get(\"element_Value3\");\r",
													"\r",
													"let fileUploadElement_Key = pm.collectionVariables.get(\"fileUploadElement_Key\");\r",
													"let element_Value4 = pm.collectionVariables.get(\"element_Value4\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key, element_Value1);\r",
													"verifyFieldValueEqual(choiceElement_Key, element_Value2);\r",
													"verifyFieldValueEqual(imageChoiceElement_Key, \"\");\r",
													"verifyFieldValueEqual(fileUploadElement_Key, \"\");\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=37842",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "37842"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form contains field - Shown + Any",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
													"\r",
													"pm.collectionVariables.set(\"textboxElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'TextboxElementBlock').key);\r",
													"\r",
													"pm.collectionVariables.set(\"choiceElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'ChoiceElementBlock').key);\r",
													"\r",
													"pm.collectionVariables.set(\"imageChoiceElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'ImageChoiceElementBlock').key);\r",
													"\r",
													"pm.collectionVariables.set(\"fileUploadElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'FileUploadElementBlock').key);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "17.1 Submit form with matching condition - 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = requestData.getElementValue(textboxElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value1\", element_Value1);\r",
													"\r",
													"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
													"let element_Value2 = requestData.getElementValue(choiceElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value2\", element_Value2);\r",
													"\r",
													"let imageChoiceElement_Key = pm.collectionVariables.get(\"imageChoiceElement_Key\");\r",
													"let element_Value3 = requestData.getElementValue(imageChoiceElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value3\", element_Value3);\r",
													"\r",
													"let fileUploadElement_Key = pm.collectionVariables.get(\"fileUploadElement_Key\");\r",
													"let element_Value4 = requestData.getElementValue(fileUploadElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value4\", element_Value4);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "test",
													"type": "text"
												},
												{
													"key": "__field_{{choiceElement_Key}}",
													"value": "3",
													"type": "text"
												},
												{
													"key": "__field_{{imageChoiceElement_Key}}",
													"value": "{{url}}/globalassets/alloy-meet/alloymeet.png",
													"type": "text"
												},
												{
													"key": "__field_{{fileUploadElement_Key}}",
													"type": "file",
													"src": "postman-cloud:///1eeb3722-47ab-4810-ab17-170f86fbf92a"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = pm.collectionVariables.get(\"element_Value1\");\r",
													"\r",
													"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
													"let element_Value2 = pm.collectionVariables.get(\"element_Value2\");\r",
													"\r",
													"let imageChoiceElement_Key = pm.collectionVariables.get(\"imageChoiceElement_Key\");\r",
													"let element_Value3 = pm.collectionVariables.get(\"element_Value3\");\r",
													"\r",
													"let fileUploadElement_Key = pm.collectionVariables.get(\"fileUploadElement_Key\");\r",
													"let element_Value4 = pm.collectionVariables.get(\"element_Value4\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key, element_Value1);\r",
													"verifyFieldValueEqual(choiceElement_Key, element_Value2);\r",
													"verifyFieldValueEqual(imageChoiceElement_Key, element_Value3);\r",
													"verifyFieldValueEqual(fileUploadElement_Key, element_Value4);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "17.2 Submit form with matching condition - 2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = requestData.getElementValue(textboxElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value1\", element_Value1);\r",
													"\r",
													"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
													"let element_Value2 = requestData.getElementValue(choiceElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value2\", element_Value2);\r",
													"\r",
													"let imageChoiceElement_Key = pm.collectionVariables.get(\"imageChoiceElement_Key\");\r",
													"let element_Value3 = requestData.getElementValue(imageChoiceElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value3\", element_Value3);\r",
													"\r",
													"let fileUploadElement_Key = pm.collectionVariables.get(\"fileUploadElement_Key\");\r",
													"let element_Value4 = requestData.getElementValue(fileUploadElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value4\", element_Value4);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "Ha Noi",
													"type": "text"
												},
												{
													"key": "__field_{{choiceElement_Key}}",
													"value": "2",
													"type": "text"
												},
												{
													"key": "__field_{{imageChoiceElement_Key}}",
													"value": "{{url}}/globalassets/alloy-meet/alloymeet.png",
													"type": "text"
												},
												{
													"key": "__field_{{fileUploadElement_Key}}",
													"type": "file",
													"src": "postman-cloud:///1eeb3722-47ab-4810-ab17-170f86fbf92a"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = pm.collectionVariables.get(\"element_Value1\");\r",
													"\r",
													"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
													"let element_Value2 = pm.collectionVariables.get(\"element_Value2\");\r",
													"\r",
													"let imageChoiceElement_Key = pm.collectionVariables.get(\"imageChoiceElement_Key\");\r",
													"let element_Value3 = pm.collectionVariables.get(\"element_Value3\");\r",
													"\r",
													"let fileUploadElement_Key = pm.collectionVariables.get(\"fileUploadElement_Key\");\r",
													"let element_Value4 = pm.collectionVariables.get(\"element_Value4\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key, element_Value1);\r",
													"verifyFieldValueEqual(choiceElement_Key, element_Value2);\r",
													"verifyFieldValueEqual(imageChoiceElement_Key, element_Value3);\r",
													"verifyFieldValueEqual(fileUploadElement_Key, \"\");\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "18 Submit form with not matching condition",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = requestData.getElementValue(textboxElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value1\", element_Value1);\r",
													"\r",
													"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
													"let element_Value2 = requestData.getElementValue(choiceElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value2\", element_Value2);\r",
													"\r",
													"let imageChoiceElement_Key = pm.collectionVariables.get(\"imageChoiceElement_Key\");\r",
													"let element_Value3 = requestData.getElementValue(imageChoiceElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value3\", element_Value3);\r",
													"\r",
													"let fileUploadElement_Key = pm.collectionVariables.get(\"fileUploadElement_Key\");\r",
													"let element_Value4 = requestData.getElementValue(fileUploadElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value4\", element_Value4);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "Ha Noi",
													"type": "text"
												},
												{
													"key": "__field_{{choiceElement_Key}}",
													"value": "Hai Phong",
													"type": "text"
												},
												{
													"key": "__field_{{imageChoiceElement_Key}}",
													"value": "/globalassets/alloy-meet/alloymeet.png",
													"type": "text"
												},
												{
													"key": "__field_{{fileUploadElement_Key}}",
													"type": "file",
													"src": "postman-cloud:///1eeb3722-47ab-4810-ab17-170f86fbf92a"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = pm.collectionVariables.get(\"element_Value1\");\r",
													"\r",
													"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
													"let element_Value2 = pm.collectionVariables.get(\"element_Value2\");\r",
													"\r",
													"let imageChoiceElement_Key = pm.collectionVariables.get(\"imageChoiceElement_Key\");\r",
													"let element_Value3 = pm.collectionVariables.get(\"element_Value3\");\r",
													"\r",
													"let fileUploadElement_Key = pm.collectionVariables.get(\"fileUploadElement_Key\");\r",
													"let element_Value4 = pm.collectionVariables.get(\"element_Value4\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key, element_Value1);\r",
													"verifyFieldValueEqual(choiceElement_Key, element_Value2);\r",
													"verifyFieldValueEqual(imageChoiceElement_Key, \"\");\r",
													"verifyFieldValueEqual(fileUploadElement_Key, \"\");\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AFORM-3864 Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=48915",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "48915"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AFORM-3864 Get a form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
													"var textboxElement_List = pm.response.json().formElements.filter(x => x.contentType == 'TextboxElementBlock');\r",
													"\r",
													"pm.collectionVariables.set(\"textboxElement_Key1\", textboxElement_List[0].key);\r",
													"pm.collectionVariables.set(\"textboxElement_Key2\", textboxElement_List[1].key);\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AFORM-3864 Submit form with matching values",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"let textboxElement_Key1 = pm.collectionVariables.get(\"textboxElement_Key1\");\r",
													"let element_Value1 = requestData.getElementValue(textboxElement_Key1);\r",
													"pm.collectionVariables.set(\"element_Value1\", element_Value1);\r",
													"\r",
													"let textboxElement_Key2 = pm.collectionVariables.get(\"textboxElement_Key2\");\r",
													"let element_Value2 = requestData.getElementValue(textboxElement_Key2);\r",
													"pm.collectionVariables.set(\"element_Value2\", element_Value2);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key1}}",
													"value": "2",
													"type": "text"
												},
												{
													"key": "CurrentStep",
													"value": "0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key1 = pm.collectionVariables.get(\"textboxElement_Key1\");\r",
													"let element_Value1 = pm.collectionVariables.get(\"element_Value1\");\r",
													"\r",
													"let textboxElement_Key2 = pm.collectionVariables.get(\"textboxElement_Key2\");\r",
													"let element_Value2 = pm.collectionVariables.get(\"element_Value2\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key1, element_Value1);\r",
													"verifyFieldValueEqual(textboxElement_Key2, element_Value2);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AFORM-3864 Re-Submit form with valid values",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"let textboxElement_Key2 = pm.collectionVariables.get(\"textboxElement_Key2\");\r",
													"let element_Value2 = requestData.getElementValue(textboxElement_Key2);\r",
													"pm.collectionVariables.set(\"element_Value2\", element_Value2);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key2}}",
													"value": "test",
													"type": "text"
												},
												{
													"key": "SubmissionKey",
													"value": "{{submissionKey}}",
													"type": "text"
												},
												{
													"key": "CurrentStep",
													"value": "1",
													"type": "text"
												},
												{
													"key": "isfinalized",
													"value": "true",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key1 = pm.collectionVariables.get(\"textboxElement_Key1\");\r",
													"let element_Value1 = pm.collectionVariables.get(\"element_Value1\");\r",
													"\r",
													"let textboxElement_Key2 = pm.collectionVariables.get(\"textboxElement_Key2\");\r",
													"let element_Value2 = pm.collectionVariables.get(\"element_Value2\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key1, element_Value1);\r",
													"verifyFieldValueEqual(textboxElement_Key2, element_Value2);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Submit form with not matching values",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"let textboxElement_Key1 = pm.collectionVariables.get(\"textboxElement_Key1\");\r",
													"let element_Value1 = requestData.getElementValue(textboxElement_Key1);\r",
													"pm.collectionVariables.set(\"element_Value1\", element_Value1);\r",
													"\r",
													"// let textboxElement_Key2 = pm.collectionVariables.get(\"textboxElement_Key2\");\r",
													"// let element_Value2 = requestData.getElementValue(textboxElement_Key2);\r",
													"// pm.collectionVariables.set(\"element_Value2\", element_Value2);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key1}}",
													"value": "1",
													"type": "text"
												},
												{
													"key": "CurrentStep",
													"value": "0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key1 = pm.collectionVariables.get(\"textboxElement_Key1\");\r",
													"let element_Value1 = pm.collectionVariables.get(\"element_Value1\");\r",
													"\r",
													"let textboxElement_Key2 = pm.collectionVariables.get(\"textboxElement_Key2\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key1, element_Value1);\r",
													"verifyFieldValueEqual(textboxElement_Key2, null);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Re-Submit form with valid values",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"let textboxElement_Key2 = pm.collectionVariables.get(\"textboxElement_Key2\");\r",
													"let element_Value2 = requestData.getElementValue(textboxElement_Key2);\r",
													"pm.collectionVariables.set(\"element_Value2\", element_Value2);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key2}}",
													"value": "test",
													"type": "text"
												},
												{
													"key": "SubmissionKey",
													"value": "{{submissionKey}}",
													"type": "text"
												},
												{
													"key": "CurrentStep",
													"value": "1",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key1 = pm.collectionVariables.get(\"textboxElement_Key1\");\r",
													"let element_Value1 = pm.collectionVariables.get(\"element_Value1\");\r",
													"\r",
													"let textboxElement_Key2 = pm.collectionVariables.get(\"textboxElement_Key2\");\r",
													"let element_Value2 = pm.collectionVariables.get(\"element_Value2\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key1, element_Value1);\r",
													"verifyFieldValueEqual(textboxElement_Key2, \"\");\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AFORM-3958 Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=48915",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "48915"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AFORM-3958 Get a form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
													"var textboxElement_List = pm.response.json().formElements.filter(x => x.contentType == 'TextboxElementBlock');\r",
													"\r",
													"pm.collectionVariables.set(\"textboxElement_Key1\", textboxElement_List[0].key);\r",
													"pm.collectionVariables.set(\"textboxElement_Key2\", textboxElement_List[1].key);\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AFORM-3958 Submit form with matching values",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"let textboxElement_Key1 = pm.collectionVariables.get(\"textboxElement_Key1\");\r",
													"let element_Value1 = requestData.getElementValue(textboxElement_Key1);\r",
													"pm.collectionVariables.set(\"element_Value1\", element_Value1);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key1}}",
													"value": "2",
													"type": "text"
												},
												{
													"key": "CurrentStep",
													"value": "0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key1 = pm.collectionVariables.get(\"textboxElement_Key1\");\r",
													"let element_Value1 = pm.collectionVariables.get(\"element_Value1\");\r",
													"\r",
													"let textboxElement_Key2 = pm.collectionVariables.get(\"textboxElement_Key2\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key1, element_Value1);\r",
													"verifyFieldValueEqual(textboxElement_Key2, null);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AFORM-3958 Re-Submit form with valid values",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"let textboxElement_Key2 = pm.collectionVariables.get(\"textboxElement_Key2\");\r",
													"let element_Value2 = requestData.getElementValue(textboxElement_Key2);\r",
													"pm.collectionVariables.set(\"element_Value2\", element_Value2);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key2}}",
													"value": "test",
													"type": "text"
												},
												{
													"key": "SubmissionKey",
													"value": "{{submissionKey}}",
													"type": "text"
												},
												{
													"key": "CurrentStep",
													"value": "1",
													"type": "text"
												},
												{
													"key": "isfinalized",
													"value": "false",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key1 = pm.collectionVariables.get(\"textboxElement_Key1\");\r",
													"let element_Value1 = pm.collectionVariables.get(\"element_Value1\");\r",
													"\r",
													"let textboxElement_Key2 = pm.collectionVariables.get(\"textboxElement_Key2\");\r",
													"let element_Value2 = pm.collectionVariables.get(\"element_Value2\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key1, element_Value1);\r",
													"verifyFieldValueEqual(textboxElement_Key2, element_Value2);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AFORM-3940 Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=56016",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "56016"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AFORM-3940  Get a form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
													"var textboxElement_List = pm.response.json().formElements.filter(x => x.contentType == 'TextboxElementBlock');\r",
													"\r",
													"pm.collectionVariables.set(\"textboxElement_Key1\", textboxElement_List[0].key);\r",
													"pm.collectionVariables.set(\"textboxElement_Key2\", textboxElement_List[1].key);\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AFORM-3940 Submit form on CurrentStep = 0 with matching values",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"let textboxElement_Key1 = pm.collectionVariables.get(\"textboxElement_Key1\");\r",
													"let element_Value1 = requestData.getElementValue(textboxElement_Key1);\r",
													"pm.collectionVariables.set(\"element_Value1\", element_Value1);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key1}}",
													"value": "2",
													"type": "text"
												},
												{
													"key": "CurrentStep",
													"value": "0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key1 = pm.collectionVariables.get(\"textboxElement_Key1\");\r",
													"let element_Value1 = pm.collectionVariables.get(\"element_Value1\");\r",
													"\r",
													"let textboxElement_Key2 = pm.collectionVariables.get(\"textboxElement_Key2\");\r",
													"// let element_Value2 = pm.collectionVariables.get(\"element_Value2\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key1, element_Value1);\r",
													"verifyFieldValueEqual(textboxElement_Key2, null);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AFORM-3940 Re-submit above form on CurrentStep = 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"let textboxElement_Key2 = pm.collectionVariables.get(\"textboxElement_Key2\");\r",
													"let element_Value2 = requestData.getElementValue(textboxElement_Key2);\r",
													"pm.collectionVariables.set(\"element_Value2\", element_Value2);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key2}}",
													"value": "test",
													"type": "text"
												},
												{
													"key": "CurrentStep",
													"value": "1",
													"type": "text"
												},
												{
													"key": "IsFinalized",
													"value": "false",
													"type": "text"
												},
												{
													"key": "SubmissionKey",
													"value": "{{submissionKey}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key1 = pm.collectionVariables.get(\"textboxElement_Key1\");\r",
													"let element_Value1 = pm.collectionVariables.get(\"element_Value1\");\r",
													"\r",
													"let textboxElement_Key2 = pm.collectionVariables.get(\"textboxElement_Key2\");\r",
													"let element_Value2 = pm.collectionVariables.get(\"element_Value2\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key1, element_Value1);\r",
													"verifyFieldValueEqual(textboxElement_Key2, element_Value2);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AFORM-3940 Re-submit above form on CurrentStep = 0 with not matching condition",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"let textboxElement_Key1 = pm.collectionVariables.get(\"textboxElement_Key1\");\r",
													"let element_Value1 = requestData.getElementValue(textboxElement_Key1);\r",
													"pm.collectionVariables.set(\"element_Value1\", element_Value1);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key1}}",
													"value": "3",
													"type": "text"
												},
												{
													"key": "CurrentStep",
													"value": "0",
													"type": "text"
												},
												{
													"key": "IsFinalized",
													"value": "false",
													"type": "text"
												},
												{
													"key": "SubmissionKey",
													"value": "{{submissionKey}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key1 = pm.collectionVariables.get(\"textboxElement_Key1\");\r",
													"let element_Value1 = pm.collectionVariables.get(\"element_Value1\");\r",
													"\r",
													"let textboxElement_Key2 = pm.collectionVariables.get(\"textboxElement_Key2\");\r",
													"// let element_Value2 = pm.collectionVariables.get(\"element_Value2\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key1, element_Value1);\r",
													"verifyFieldValueEqual(textboxElement_Key2, null);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AFORM-3940 Re-submit above form on CurrentStep = 2 and finalize form",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"// let textboxElement_Key2 = pm.collectionVariables.get(\"textboxElement_Key2\");\r",
													"// let element_Value2 = requestData.getElementValue(textboxElement_Key2);\r",
													"// pm.collectionVariables.set(\"element_Value2\", element_Value2);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key1}}",
													"value": "3",
													"type": "text",
													"disabled": true
												},
												{
													"key": "CurrentStep",
													"value": "2",
													"type": "text"
												},
												{
													"key": "IsFinalized",
													"value": "true",
													"type": "text"
												},
												{
													"key": "SubmissionKey",
													"value": "{{submissionKey}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key1 = pm.collectionVariables.get(\"textboxElement_Key1\");\r",
													"let element_Value1 = pm.collectionVariables.get(\"element_Value1\");\r",
													"\r",
													"let textboxElement_Key2 = pm.collectionVariables.get(\"textboxElement_Key2\");\r",
													"let element_Value2 = pm.collectionVariables.get(\"element_Value2\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key1, element_Value1);\r",
													"verifyFieldValueEqual(textboxElement_Key2, null);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AFORM-3957 Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=56025",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "56025"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AFORM-3957  Get a form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
													"var textboxElement_List = pm.response.json().formElements.filter(x => x.contentType == 'TextboxElementBlock');\r",
													"\r",
													"pm.collectionVariables.set(\"textboxElement_Key1\", textboxElement_List[0].key);\r",
													"pm.collectionVariables.set(\"textboxElement_Key2\", textboxElement_List[1].key);\r",
													"pm.collectionVariables.set(\"textboxElement_Key3\", textboxElement_List[2].key);\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AFORM-3957 Submit form on CurrentStep = 0 with matching condition 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"let textboxElement_Key1 = pm.collectionVariables.get(\"textboxElement_Key1\");\r",
													"let element_Value1 = requestData.getElementValue(textboxElement_Key1);\r",
													"pm.collectionVariables.set(\"element_Value1\", element_Value1);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key1}}",
													"value": "1",
													"type": "text"
												},
												{
													"key": "CurrentStep",
													"value": "0",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key1 = pm.collectionVariables.get(\"textboxElement_Key1\");\r",
													"let element_Value1 = pm.collectionVariables.get(\"element_Value1\");\r",
													"\r",
													"let textboxElement_Key2 = pm.collectionVariables.get(\"textboxElement_Key2\"); \r",
													"let element_Value2 = pm.collectionVariables.get(\"element_Value2\");\r",
													"\r",
													"let textboxElement_Key3 = pm.collectionVariables.get(\"textboxElement_Key3\");\r",
													"let element_Value3 = pm.collectionVariables.get(\"element_Value3\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key1, element_Value1);\r",
													"verifyFieldValueEqual(textboxElement_Key2, null);\r",
													"verifyFieldValueEqual(textboxElement_Key3, null);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AFORM-3957 Re-submit above form on CurrentStep = 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"let textboxElement_Key2 = pm.collectionVariables.get(\"textboxElement_Key2\");\r",
													"let element_Value2 = requestData.getElementValue(textboxElement_Key2);\r",
													"pm.collectionVariables.set(\"element_Value2\", element_Value2);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key2}}",
													"value": "test",
													"type": "text"
												},
												{
													"key": "CurrentStep",
													"value": "1",
													"type": "text"
												},
												{
													"key": "IsFinalized",
													"value": "false",
													"type": "text"
												},
												{
													"key": "SubmissionKey",
													"value": "{{submissionKey}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key1 = pm.collectionVariables.get(\"textboxElement_Key1\");\r",
													"let element_Value1 = pm.collectionVariables.get(\"element_Value1\");\r",
													"\r",
													"let textboxElement_Key2 = pm.collectionVariables.get(\"textboxElement_Key2\");\r",
													"let element_Value2 = pm.collectionVariables.get(\"element_Value2\");\r",
													"\r",
													"let textboxElement_Key3 = pm.collectionVariables.get(\"textboxElement_Key3\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key1, element_Value1);\r",
													"verifyFieldValueEqual(textboxElement_Key2, element_Value2);\r",
													"verifyFieldValueEqual(textboxElement_Key3, null);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AFORM-3957 Re-submit above form on CurrentStep = 2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"let textboxElement_Key3 = pm.collectionVariables.get(\"textboxElement_Key3\");\r",
													"let element_Value3 = requestData.getElementValue(textboxElement_Key3);\r",
													"pm.collectionVariables.set(\"element_Value3\", element_Value3);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key3}}",
													"value": "test2",
													"type": "text"
												},
												{
													"key": "CurrentStep",
													"value": "2",
													"type": "text"
												},
												{
													"key": "IsFinalized",
													"value": "false",
													"type": "text"
												},
												{
													"key": "SubmissionKey",
													"value": "{{submissionKey}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key1 = pm.collectionVariables.get(\"textboxElement_Key1\");\r",
													"let element_Value1 = pm.collectionVariables.get(\"element_Value1\");\r",
													"\r",
													"let textboxElement_Key2 = pm.collectionVariables.get(\"textboxElement_Key2\");\r",
													"// let element_Value2 = pm.collectionVariables.get(\"element_Value2\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key1, element_Value1);\r",
													"verifyFieldValueEqual(textboxElement_Key2, null);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AFORM-3957 Re-submit above form on CurrentStep = 0 with matching condition 2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"let textboxElement_Key1 = pm.collectionVariables.get(\"textboxElement_Key1\");\r",
													"let element_Value1 = requestData.getElementValue(textboxElement_Key1);\r",
													"pm.collectionVariables.set(\"element_Value1\", element_Value1);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key1}}",
													"value": "2",
													"type": "text"
												},
												{
													"key": "CurrentStep",
													"value": "0",
													"type": "text"
												},
												{
													"key": "IsFinalized",
													"value": "false",
													"type": "text"
												},
												{
													"key": "SubmissionKey",
													"value": "{{submissionKey}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key1 = pm.collectionVariables.get(\"textboxElement_Key1\");\r",
													"let element_Value1 = pm.collectionVariables.get(\"element_Value1\");\r",
													"\r",
													"let textboxElement_Key2 = pm.collectionVariables.get(\"textboxElement_Key2\"); \r",
													"let element_Value2 = pm.collectionVariables.get(\"element_Value2\");\r",
													"\r",
													"let textboxElement_Key3 = pm.collectionVariables.get(\"textboxElement_Key3\");\r",
													"let element_Value3 = pm.collectionVariables.get(\"element_Value3\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key1, element_Value1);\r",
													"verifyFieldValueEqual(textboxElement_Key2, \"\");\r",
													"verifyFieldValueEqual(textboxElement_Key3, \"\");\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AFORM-3983 Invalid - Re-submit above form on CurrentStep = 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"let textboxElement_Key2 = pm.collectionVariables.get(\"textboxElement_Key2\");\r",
													"let element_Value2 = requestData.getElementValue(textboxElement_Key2);\r",
													"pm.collectionVariables.set(\"element_Value2\", element_Value2);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key2}}",
													"value": "test",
													"type": "text"
												},
												{
													"key": "CurrentStep",
													"value": "1",
													"type": "text"
												},
												{
													"key": "IsFinalized",
													"value": "false",
													"type": "text"
												},
												{
													"key": "SubmissionKey",
													"value": "{{submissionKey}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key1 = pm.collectionVariables.get(\"textboxElement_Key1\");\r",
													"let element_Value1 = pm.collectionVariables.get(\"element_Value1\");\r",
													"\r",
													"let textboxElement_Key2 = pm.collectionVariables.get(\"textboxElement_Key2\");\r",
													"let element_Value2 = pm.collectionVariables.get(\"element_Value2\");\r",
													"\r",
													"let textboxElement_Key3 = pm.collectionVariables.get(\"textboxElement_Key3\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key1, element_Value1);\r",
													"verifyFieldValueEqual(textboxElement_Key2, \"\");\r",
													"verifyFieldValueEqual(textboxElement_Key3, \"\");\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AFORM-3983 Invalid - Re-submit above form on CurrentStep = 2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"let textboxElement_Key3 = pm.collectionVariables.get(\"textboxElement_Key3\");\r",
													"let element_Value3 = requestData.getElementValue(textboxElement_Key3);\r",
													"pm.collectionVariables.set(\"element_Value3\", element_Value3);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key3}}",
													"value": "test2",
													"type": "text"
												},
												{
													"key": "CurrentStep",
													"value": "2",
													"type": "text"
												},
												{
													"key": "IsFinalized",
													"value": "false",
													"type": "text"
												},
												{
													"key": "SubmissionKey",
													"value": "{{submissionKey}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key1 = pm.collectionVariables.get(\"textboxElement_Key1\");\r",
													"let element_Value1 = pm.collectionVariables.get(\"element_Value1\");\r",
													"\r",
													"let textboxElement_Key2 = pm.collectionVariables.get(\"textboxElement_Key2\");\r",
													"let element_Value2 = pm.collectionVariables.get(\"element_Value2\");\r",
													"\r",
													"let textboxElement_Key3 = pm.collectionVariables.get(\"textboxElement_Key3\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key1, element_Value1);\r",
													"verifyFieldValueEqual(textboxElement_Key2, \"\");\r",
													"verifyFieldValueEqual(textboxElement_Key3, \"\");\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Language",
							"item": [
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=38864",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "38864"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form in Master language - en",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
													"\r",
													"pm.collectionVariables.set(\"textboxElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'TextboxElementBlock').key);\r",
													"pm.collectionVariables.set(\"textareaElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'TextareaElementBlock').key);\r",
													"pm.collectionVariables.set(\"numberElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'NumberElementBlock').key);\r",
													"pm.collectionVariables.set(\"rangeElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'RangeElementBlock').key);\r",
													"pm.collectionVariables.set(\"urlElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'UrlElementBlock').key);\r",
													"pm.collectionVariables.set(\"selectionElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'SelectionElementBlock').key);\r",
													"pm.collectionVariables.set(\"choiceElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'ChoiceElementBlock').key);\r",
													"pm.collectionVariables.set(\"imageChoiceElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'ImageChoiceElementBlock').key);\r",
													"pm.collectionVariables.set(\"fileUploadElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'FileUploadElementBlock').key);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}?locale=en",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "locale",
													"value": "en"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "1. Submit form with valid values - locale = en",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = requestData.getElementValue(textboxElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value1\", element_Value1);\r",
													"\r",
													"let textareaElement_Key = pm.collectionVariables.get(\"textareaElement_Key\");\r",
													"let element_Value2 = requestData.getElementValue(textareaElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value2\", element_Value2);\r",
													"\r",
													"let numberElement_Key = pm.collectionVariables.get(\"numberElement_Key\");\r",
													"let element_Value3 = requestData.getElementValue(numberElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value3\", element_Value3);\r",
													"\r",
													"let rangeElement_Key = pm.collectionVariables.get(\"rangeElement_Key\");\r",
													"let element_Value4 = requestData.getElementValue(rangeElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value4\", element_Value4);\r",
													"\r",
													"let urlElement_Key = pm.collectionVariables.get(\"urlElement_Key\");\r",
													"let element_Value5 = requestData.getElementValue(urlElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value5\", element_Value5);\r",
													"\r",
													"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
													"let element_Value6 = requestData.getElementValue(selectionElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value6\", element_Value6);\r",
													"\r",
													"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
													"let element_Value7 = requestData.getElementValue(choiceElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value7\", element_Value7);\r",
													"\r",
													"let imageChoiceElement_Key = pm.collectionVariables.get(\"imageChoiceElement_Key\");\r",
													"let element_Value8 = requestData.getElementValue(imageChoiceElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value8\", element_Value8);\r",
													"\r",
													"let fileUploadElement_Key = pm.collectionVariables.get(\"fileUploadElement_Key\");\r",
													"let element_Value9 = requestData.getElementValue(fileUploadElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value9\", element_Value9);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "Ha Noi",
													"type": "text"
												},
												{
													"key": "__field_{{textareaElement_Key}}",
													"value": "test_123",
													"type": "text"
												},
												{
													"key": "__field_{{numberElement_Key}}",
													"value": "1000",
													"type": "text"
												},
												{
													"key": "__field_{{rangeElement_Key}}",
													"value": "5",
													"type": "text"
												},
												{
													"key": "__field_{{selectionElement_Key}}",
													"value": "1",
													"type": "text"
												},
												{
													"key": "__field_{{choiceElement_Key}}",
													"value": "2",
													"type": "text"
												},
												{
													"key": "__field_{{urlElement_Key}}",
													"value": "https://www.postman.com/downloads/postman-agent/",
													"type": "text"
												},
												{
													"key": "__field_{{imageChoiceElement_Key}}",
													"value": "{{url}}/globalassets/alloy-meet/alloymeet.png",
													"type": "text"
												},
												{
													"key": "__field_{{fileUploadElement_Key}}",
													"type": "file",
													"src": "postman-cloud:///1eeb35d4-ea74-46e0-91a6-0871d29e5912"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = pm.collectionVariables.get(\"element_Value1\");\r",
													"\r",
													"let textareaElement_Key = pm.collectionVariables.get(\"textareaElement_Key\");\r",
													"let element_Value2 = pm.collectionVariables.get(\"element_Value2\");\r",
													"\r",
													"let numberElement_Key = pm.collectionVariables.get(\"numberElement_Key\");\r",
													"let element_Value3 = pm.collectionVariables.get(\"element_Value3\");\r",
													"console.log(element_Value3);\r",
													"let rangeElement_Key = pm.collectionVariables.get(\"rangeElement_Key\");\r",
													"let element_Value4 = pm.collectionVariables.get(\"element_Value4\");\r",
													"\r",
													"let urlElement_Key = pm.collectionVariables.get(\"urlElement_Key\");\r",
													"let element_Value5 = pm.collectionVariables.get(\"element_Value5\");\r",
													"\r",
													"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
													"let element_Value6 = pm.collectionVariables.get(\"element_Value6\");\r",
													"\r",
													"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
													"let element_Value7 = pm.collectionVariables.get(\"element_Value7\");\r",
													"console.log(element_Value7);\r",
													"\r",
													"let imageChoiceElement_Key = pm.collectionVariables.get(\"imageChoiceElement_Key\");\r",
													"let element_Value8 = pm.collectionVariables.get(\"element_Value8\");\r",
													"\r",
													"let fileUploadElement_Key = pm.collectionVariables.get(\"fileUploadElement_Key\");\r",
													"let element_Value9 = pm.collectionVariables.get(\"element_Value9\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key, element_Value1);\r",
													"verifyFieldValueEqual(textareaElement_Key, element_Value2);\r",
													"verifyFieldValueEqual(numberElement_Key, Number.parseInt(element_Value3));\r",
													"verifyFieldValueEqual(rangeElement_Key, Number.parseInt(element_Value4));\r",
													"verifyFieldValueEqual(urlElement_Key, element_Value5);\r",
													"verifyFieldValueEqual(selectionElement_Key, element_Value6);\r",
													"verifyFieldValueEqual(choiceElement_Key, element_Value7);\r",
													"verifyFieldValueEqual(imageChoiceElement_Key, element_Value8);\r",
													"verifyFieldValueEqual(fileUploadElement_Key, element_Value9);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form in other language - sv",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
													"\r",
													"pm.collectionVariables.set(\"textboxElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'TextboxElementBlock').key);\r",
													"pm.collectionVariables.set(\"textareaElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'TextareaElementBlock').key);\r",
													"pm.collectionVariables.set(\"numberElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'NumberElementBlock').key);\r",
													"pm.collectionVariables.set(\"rangeElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'RangeElementBlock').key);\r",
													"pm.collectionVariables.set(\"urlElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'UrlElementBlock').key);\r",
													"pm.collectionVariables.set(\"selectionElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'SelectionElementBlock').key);\r",
													"pm.collectionVariables.set(\"choiceElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'ChoiceElementBlock').key);\r",
													"pm.collectionVariables.set(\"imageChoiceElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'ImageChoiceElementBlock').key);\r",
													"pm.collectionVariables.set(\"fileUploadElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'FileUploadElementBlock').key);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}?locale=sv",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												},
												{
													"key": "locale",
													"value": "sv"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "2. Submit form with valid values - locale = sv",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = requestData.getElementValue(textboxElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value1\", element_Value1);\r",
													"\r",
													"let textareaElement_Key = pm.collectionVariables.get(\"textareaElement_Key\");\r",
													"let element_Value2 = requestData.getElementValue(textareaElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value2\", element_Value2);\r",
													"\r",
													"let numberElement_Key = pm.collectionVariables.get(\"numberElement_Key\");\r",
													"let element_Value3 = requestData.getElementValue(numberElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value3\", element_Value3);\r",
													"\r",
													"let rangeElement_Key = pm.collectionVariables.get(\"rangeElement_Key\");\r",
													"let element_Value4 = requestData.getElementValue(rangeElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value4\", element_Value4);\r",
													"\r",
													"let urlElement_Key = pm.collectionVariables.get(\"urlElement_Key\");\r",
													"let element_Value5 = requestData.getElementValue(urlElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value5\", element_Value5);\r",
													"\r",
													"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
													"let element_Value6 = requestData.getElementValue(selectionElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value6\", element_Value6);\r",
													"\r",
													"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
													"let element_Value7 = requestData.getElementValue(choiceElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value7\", element_Value7);\r",
													"\r",
													"let imageChoiceElement_Key = pm.collectionVariables.get(\"imageChoiceElement_Key\");\r",
													"let element_Value8 = requestData.getElementValue(imageChoiceElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value8\", element_Value8);\r",
													"\r",
													"let fileUploadElement_Key = pm.collectionVariables.get(\"fileUploadElement_Key\");\r",
													"let element_Value9 = requestData.getElementValue(fileUploadElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value9\", element_Value9);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "sv",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "Ha Noi",
													"type": "text"
												},
												{
													"key": "__field_{{textareaElement_Key}}",
													"value": "test_123",
													"type": "text"
												},
												{
													"key": "__field_{{numberElement_Key}}",
													"value": "1000",
													"type": "text"
												},
												{
													"key": "__field_{{rangeElement_Key}}",
													"value": "5",
													"type": "text"
												},
												{
													"key": "__field_{{selectionElement_Key}}",
													"value": "1",
													"type": "text"
												},
												{
													"key": "__field_{{choiceElement_Key}}",
													"value": "2",
													"type": "text"
												},
												{
													"key": "__field_{{urlElement_Key}}",
													"value": "https://www.postman.com/downloads/postman-agent/",
													"type": "text"
												},
												{
													"key": "__field_{{imageChoiceElement_Key}}",
													"value": "{{url}}/globalassets/alloy-meet/alloymeet.png",
													"type": "text"
												},
												{
													"key": "__field_{{fileUploadElement_Key}}",
													"type": "file",
													"src": "postman-cloud:///1eeb35d4-ea74-46e0-91a6-0871d29e5912"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = pm.collectionVariables.get(\"element_Value1\");\r",
													"\r",
													"let textareaElement_Key = pm.collectionVariables.get(\"textareaElement_Key\");\r",
													"let element_Value2 = pm.collectionVariables.get(\"element_Value2\");\r",
													"\r",
													"let numberElement_Key = pm.collectionVariables.get(\"numberElement_Key\");\r",
													"let element_Value3 = pm.collectionVariables.get(\"element_Value3\");\r",
													"console.log(element_Value3);\r",
													"let rangeElement_Key = pm.collectionVariables.get(\"rangeElement_Key\");\r",
													"let element_Value4 = pm.collectionVariables.get(\"element_Value4\");\r",
													"\r",
													"let urlElement_Key = pm.collectionVariables.get(\"urlElement_Key\");\r",
													"let element_Value5 = pm.collectionVariables.get(\"element_Value5\");\r",
													"\r",
													"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
													"let element_Value6 = pm.collectionVariables.get(\"element_Value6\");\r",
													"\r",
													"let choiceElement_Key = pm.collectionVariables.get(\"choiceElement_Key\");\r",
													"let element_Value7 = pm.collectionVariables.get(\"element_Value7\");\r",
													"\r",
													"let imageChoiceElement_Key = pm.collectionVariables.get(\"imageChoiceElement_Key\");\r",
													"let element_Value8 = pm.collectionVariables.get(\"element_Value8\");\r",
													"\r",
													"let fileUploadElement_Key = pm.collectionVariables.get(\"fileUploadElement_Key\");\r",
													"let element_Value9 = pm.collectionVariables.get(\"element_Value9\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key, element_Value1);\r",
													"verifyFieldValueEqual(textareaElement_Key, element_Value2);\r",
													"verifyFieldValueEqual(numberElement_Key, Number.parseInt(element_Value3));\r",
													"verifyFieldValueEqual(rangeElement_Key, Number.parseInt(element_Value4));\r",
													"verifyFieldValueEqual(urlElement_Key, element_Value5);\r",
													"verifyFieldValueEqual(selectionElement_Key, element_Value6);\r",
													"verifyFieldValueEqual(choiceElement_Key, element_Value7);\r",
													"verifyFieldValueEqual(imageChoiceElement_Key, element_Value8);\r",
													"verifyFieldValueEqual(fileUploadElement_Key, element_Value9);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AFORM-4036 Get a form in other language - nl-BE",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
													"\r",
													"pm.collectionVariables.set(\"textboxElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'TextboxElementBlock').key);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}?locale=nl-BE",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": "",
													"disabled": true
												},
												{
													"key": "locale",
													"value": "nl-BE"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AFORM-4036 3. Submit form with valid values - locale = nl-BE",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = requestData.getElementValue(textboxElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value1\", element_Value1);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "nl-BE",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "Ha Noi",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AFORM-4036 Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = pm.collectionVariables.get(\"element_Value1\");\r",
													"let expectSubmissionData = \r",
													"{\r",
													"    \"__field_847666946ab2479bbb6451a35f42732c\": \"Ha Noi\"\r",
													"}\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyResponseEqual(expectSubmissionData, pm.response.json().submissionData);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=39891",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "39891"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form in Master language - sv",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
													"\r",
													"pm.collectionVariables.set(\"textboxElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'TextboxElementBlock').key);\r",
													"pm.collectionVariables.set(\"selectionElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'SelectionElementBlock').key);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}?locale=sv",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "locale",
													"value": "sv"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "4. Submit form with valid values - locale = sv",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = requestData.getElementValue(textboxElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value1\", element_Value1);\r",
													"\r",
													"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
													"let element_Value2 = requestData.getElementValue(selectionElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value2\", element_Value2);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "sv",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "Ha Noi",
													"type": "text"
												},
												{
													"key": "__field_{{selectionElement_Key}}",
													"value": "2",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = pm.collectionVariables.get(\"element_Value1\");\r",
													"\r",
													"let selectionElement_Key = pm.collectionVariables.get(\"selectionElement_Key\");\r",
													"let element_Value2 = pm.collectionVariables.get(\"element_Value2\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key, element_Value1);\r",
													"verifyFieldValueEqual(selectionElement_Key, element_Value2);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form in other language - en",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
													"\r",
													"pm.collectionVariables.set(\"textboxElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'TextboxElementBlock').key);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}?locale=en",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": "",
													"disabled": true
												},
												{
													"key": "locale",
													"value": "en"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "5. Submit form with valid values - locale = en",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = requestData.getElementValue(textboxElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value1\", element_Value1);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "Ha Noi",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = pm.collectionVariables.get(\"element_Value1\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key, element_Value1);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form in other language - nl-BE",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
													"\r",
													"pm.collectionVariables.set(\"textboxElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'TextboxElementBlock').key);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}?locale=nl-BE",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": "",
													"disabled": true
												},
												{
													"key": "locale",
													"value": "nl-BE"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "6. Submit form with valid values - locale = nl-BE",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = requestData.getElementValue(textboxElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value1\", element_Value1);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "nl-BE",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "Ha Noi",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = pm.collectionVariables.get(\"element_Value1\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key, element_Value1);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AFORM-3785 Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=49943",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "49943"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AFORM-3785 Get a form in Master language - en",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
													"\r",
													"pm.collectionVariables.set(\"textboxElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'TextboxElementBlock').key);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}?locale=en",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "locale",
													"value": "en"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AFORM-3785  Get a form in other language - sv",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const response = pm.response.json();\r",
													"\r",
													"pm.collectionVariables.set(\"formKey\", response.key);\r",
													"pm.collectionVariables.set(\"textboxElement_Key\", response.formElements.find(x => x.contentType == 'TextboxElementBlock').key);\r",
													"\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyResponseEqual(response.formElements[0].locale, \"sv\");\r",
													"verifyResponseEqual(response.locale, \"sv\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}?locale=sv",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "locale",
													"value": "sv"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "8. Submit form with valid values - locale = sv",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = requestData.getElementValue(textboxElement_Key);\r",
													"pm.collectionVariables.set(\"element_Value1\", element_Value1);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "sv",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "Ha Noi",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form submission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let textboxElement_Key = pm.collectionVariables.get(\"textboxElement_Key\");\r",
													"let element_Value1 = pm.collectionVariables.get(\"element_Value1\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyFieldValueEqual(textboxElement_Key, element_Value1);\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formKey}}/submissions/{{submissionKey}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formKey}}",
												"submissions",
												"{{submissionKey}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Roles",
							"item": [
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=39907",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "39907"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form by admin",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
													"\r",
													"pm.collectionVariables.set(\"textboxElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'TextboxElementBlock').key);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}?locale=en",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "locale",
													"value": "en"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "GetJwtToken for other administrator - user1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"JwtToken_user1\", pm.response.json().access_token);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "client_id",
													"value": "TestClient",
													"type": "text"
												},
												{
													"key": "grant_type",
													"value": "password",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user1",
													"type": "text"
												},
												{
													"key": "password",
													"value": "devLab08@",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "http://localhost:8000/api/episerver/connect/token",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8000",
											"path": [
												"api",
												"episerver",
												"connect",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form by user1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
													"\r",
													"// pm.collectionVariables.set(\"textboxElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'TextboxElementBlock').key);\r",
													"// pm.collectionVariables.set(\"textareaElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'TextareaElementBlock').key);\r",
													"// pm.collectionVariables.set(\"numberElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'NumberElementBlock').key);\r",
													"// pm.collectionVariables.set(\"rangeElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'RangeElementBlock').key);\r",
													"// pm.collectionVariables.set(\"urlElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'UrlElementBlock').key);\r",
													"// pm.collectionVariables.set(\"selectionElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'SelectionElementBlock').key);\r",
													"// pm.collectionVariables.set(\"choiceElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'ChoiceElementBlock').key);\r",
													"// pm.collectionVariables.set(\"imageChoiceElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'ImageChoiceElementBlock').key);\r",
													"// pm.collectionVariables.set(\"fileUploadElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'FileUploadElementBlock').key);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}?locale=en",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "locale",
													"value": "en"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "1. Submit form with valid values",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "Ha Noi",
													"type": "text"
												},
												{
													"key": "__field_{{textareaElement_Key}}",
													"value": "test_123",
													"type": "text"
												},
												{
													"key": "__field_{{numberElement_Key}}",
													"value": "1000",
													"type": "text"
												},
												{
													"key": "__field_{{rangeElement_Key}}",
													"value": "5",
													"type": "text"
												},
												{
													"key": "__field_{{selectionElement_Key}}",
													"value": "1",
													"type": "text"
												},
												{
													"key": "__field_{{choiceElement_Key}}",
													"value": "2",
													"type": "text"
												},
												{
													"key": "__field_{{urlElement_Key}}",
													"value": "https://www.postman.com/downloads/postman-agent/",
													"type": "text"
												},
												{
													"key": "__field_{{imageChoiceElement_Key}}",
													"value": "/globalassets/alloy-meet/alloymeet.png",
													"type": "text"
												},
												{
													"key": "__field_{{fileUploadElement_Key}}",
													"type": "file",
													"src": "postman-cloud:///1eeb35d4-ea74-46e0-91a6-0871d29e5912"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "GetJwtToken for other user- user2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"JwtToken_user1\", pm.response.json().access_token);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "client_id",
													"value": "TestClient",
													"type": "text"
												},
												{
													"key": "grant_type",
													"value": "password",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user2",
													"type": "text"
												},
												{
													"key": "password",
													"value": "devLab08@",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "http://localhost:8000/api/episerver/connect/token",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8000",
											"path": [
												"api",
												"episerver",
												"connect",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form by user2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
													"\r",
													"// pm.collectionVariables.set(\"textboxElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'TextboxElementBlock').key);\r",
													"// pm.collectionVariables.set(\"textareaElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'TextareaElementBlock').key);\r",
													"// pm.collectionVariables.set(\"numberElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'NumberElementBlock').key);\r",
													"// pm.collectionVariables.set(\"rangeElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'RangeElementBlock').key);\r",
													"// pm.collectionVariables.set(\"urlElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'UrlElementBlock').key);\r",
													"// pm.collectionVariables.set(\"selectionElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'SelectionElementBlock').key);\r",
													"// pm.collectionVariables.set(\"choiceElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'ChoiceElementBlock').key);\r",
													"// pm.collectionVariables.set(\"imageChoiceElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'ImageChoiceElementBlock').key);\r",
													"// pm.collectionVariables.set(\"fileUploadElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'FileUploadElementBlock').key);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}?locale=en",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "locale",
													"value": "en"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "2. Submit form with valid values",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "Ha Noi",
													"type": "text"
												},
												{
													"key": "__field_{{textareaElement_Key}}",
													"value": "test_123",
													"type": "text"
												},
												{
													"key": "__field_{{numberElement_Key}}",
													"value": "1000",
													"type": "text"
												},
												{
													"key": "__field_{{rangeElement_Key}}",
													"value": "5",
													"type": "text"
												},
												{
													"key": "__field_{{selectionElement_Key}}",
													"value": "1",
													"type": "text"
												},
												{
													"key": "__field_{{choiceElement_Key}}",
													"value": "2",
													"type": "text"
												},
												{
													"key": "__field_{{urlElement_Key}}",
													"value": "https://www.postman.com/downloads/postman-agent/",
													"type": "text"
												},
												{
													"key": "__field_{{imageChoiceElement_Key}}",
													"value": "/globalassets/alloy-meet/alloymeet.png",
													"type": "text"
												},
												{
													"key": "__field_{{fileUploadElement_Key}}",
													"type": "file",
													"src": "postman-cloud:///1eeb35d4-ea74-46e0-91a6-0871d29e5912"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "GetJwtToken for other user- user3",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"JwtToken_user1\", pm.response.json().access_token);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "client_id",
													"value": "TestClient",
													"type": "text"
												},
												{
													"key": "grant_type",
													"value": "password",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user3",
													"type": "text"
												},
												{
													"key": "password",
													"value": "devLab08@",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "http://localhost:8000/api/episerver/connect/token",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8000",
											"path": [
												"api",
												"episerver",
												"connect",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form by user3",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
													"\r",
													"// pm.collectionVariables.set(\"textboxElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'TextboxElementBlock').key);\r",
													"// pm.collectionVariables.set(\"textareaElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'TextareaElementBlock').key);\r",
													"// pm.collectionVariables.set(\"numberElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'NumberElementBlock').key);\r",
													"// pm.collectionVariables.set(\"rangeElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'RangeElementBlock').key);\r",
													"// pm.collectionVariables.set(\"urlElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'UrlElementBlock').key);\r",
													"// pm.collectionVariables.set(\"selectionElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'SelectionElementBlock').key);\r",
													"// pm.collectionVariables.set(\"choiceElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'ChoiceElementBlock').key);\r",
													"// pm.collectionVariables.set(\"imageChoiceElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'ImageChoiceElementBlock').key);\r",
													"// pm.collectionVariables.set(\"fileUploadElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'FileUploadElementBlock').key);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}?locale=en",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "locale",
													"value": "en"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "2. Submit form with valid values",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "Ha Noi",
													"type": "text"
												},
												{
													"key": "__field_{{textareaElement_Key}}",
													"value": "test_123",
													"type": "text"
												},
												{
													"key": "__field_{{numberElement_Key}}",
													"value": "1000",
													"type": "text"
												},
												{
													"key": "__field_{{rangeElement_Key}}",
													"value": "5",
													"type": "text"
												},
												{
													"key": "__field_{{selectionElement_Key}}",
													"value": "1",
													"type": "text"
												},
												{
													"key": "__field_{{choiceElement_Key}}",
													"value": "2",
													"type": "text"
												},
												{
													"key": "__field_{{urlElement_Key}}",
													"value": "https://www.postman.com/downloads/postman-agent/",
													"type": "text"
												},
												{
													"key": "__field_{{imageChoiceElement_Key}}",
													"value": "/globalassets/alloy-meet/alloymeet.png",
													"type": "text"
												},
												{
													"key": "__field_{{fileUploadElement_Key}}",
													"type": "file",
													"src": "postman-cloud:///1eeb35d4-ea74-46e0-91a6-0871d29e5912"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Verify bug",
							"item": [
								{
									"name": "AFORM-3910 Get GUI form - case2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=45906",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "45906"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AFORM-3910 Get a form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
													"\r",
													"pm.collectionVariables.set(\"textboxElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'TextboxElementBlock').key);\r",
													"\r",
													"pm.collectionVariables.set(\"rangeElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'RangeElementBlock').key);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AFORM-3910 Submit form",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let submissionKey = pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "2",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{rangeElement_Key}}",
													"value": "3",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AFORM-3910 Re-Submit form on step 2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "test",
													"type": "text"
												},
												{
													"key": "CurrentStep",
													"value": "1",
													"type": "text"
												},
												{
													"key": "SubmissionKey",
													"value": "{{submissionKey}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AFORM-3910 Get GUI form - case1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=54981",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "54981"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AFORM-3910 Get a form - case 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
													"\r",
													"pm.collectionVariables.set(\"textboxElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'TextboxElementBlock').key);\r",
													"\r",
													"// pm.collectionVariables.set(\"rangeElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'RangeElementBlock').key);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AFORM-3910 Submit form  - case 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let submissionKey = pm.collectionVariables.set(\"submissionKey\", pm.response.json().submissionKey);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "2",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AFORM-3910 Re-Submit form - case1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "test",
													"type": "text"
												},
												{
													"key": "CurrentStep",
													"value": "0",
													"type": "text"
												},
												{
													"key": "SubmissionKey",
													"value": "{{submissionKey}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AFORM-3829 Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=46913",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "46913"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
													"\r",
													"pm.collectionVariables.set(\"textboxElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'TextboxElementBlock').key);\r",
													"\r",
													"// pm.collectionVariables.set(\"numberElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'NumberElementBlock').key);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Submit form",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "en",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "test",
													"type": "text"
												},
												{
													"key": "__field_{{choiceElement_Key}}",
													"value": "3",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{imageChoiceElement_Key}}",
													"value": "/globalassets/alloy-meet/alloymeet.png",
													"type": "text",
													"disabled": true
												},
												{
													"key": "__field_{{fileUploadElement_Key}}",
													"type": "file",
													"src": "postman-cloud:///1eeb3722-47ab-4810-ab17-170f86fbf92a",
													"disabled": true
												},
												{
													"key": "",
													"value": "",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AFORM-3840 Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=53949",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "53949"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AFORM-3840 Get a form in Master language - sv",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
													"\r",
													"pm.collectionVariables.set(\"textboxElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'TextboxElementBlock').key);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}?locale=sv",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "locale",
													"value": "sv"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AFORM-3840. Submit form with valid values - locale = sv",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "sv",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key}}",
													"value": "Ha Noi",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "URL reference",
							"item": [
								{
									"name": "AFORM-3941 Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=53974",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "53974"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AFORM-3941 Get a form - redirectPage language is another language",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"\r",
													"pm.collectionVariables.set(\"formKey\", responseBody.key);\r",
													"pm.collectionVariables.set(\"textboxElement_Key\", responseBody.formElements.find(x => x.contentType == 'TextboxElementBlock').key);\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyParamValueContains(responseBody.properties.redirectToPage, \"http://localhost:8000/en/alloy-plan/\");\r",
													"verifyParamValueContains(responseBody.locale, \"sv\");\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AFORM-3941. Submit form with valid values",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"verifyResponseCode(200);\r",
													"verifySuccessSubmitMessage();\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data; boundary=<calculated when request is sent>",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "formKey",
													"value": "{{formKey}}",
													"type": "text"
												},
												{
													"key": "locale",
													"value": "sv",
													"type": "text"
												},
												{
													"key": "__field_{{textboxElement_Key1}}",
													"value": "1",
													"type": "text"
												},
												{
													"key": "IsFinalized",
													"value": "true",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "GetJwtToken",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"JwtToken\", pm.response.json().access_token);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "TestClient",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "text"
								},
								{
									"key": "password",
									"value": "devLab08@",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:8000/api/episerver/connect/token",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"episerver",
								"connect",
								"token"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{JwtToken}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.sendRequest({",
							"    url: 'http://localhost:8000/api/episerver/connect/token',",
							"    method: 'POST',",
							"    body: {",
							"        mode: 'urlencoded',",
							"        urlencoded: [",
							"            { key: \"client_id\", value: \"TestClient\" },",
							"            { key: \"grant_type\", value: \"password\" },",
							"            { key: \"username\", value: \"admin\" },",
							"            { key: \"password\", value: \"devLab08@\" }",
							"        ]",
							"    }",
							"}, function (err, res) {",
							"    if (err === null) {",
							"        // pm.globals.set(\"token\", res.json()[\"access_token\"]);",
							"        pm.collectionVariables.set(\"JwtToken\", res.json().access_token);",
							"    }",
							"});"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Get Forms",
			"item": [
				{
					"name": "Common",
					"item": [
						{
							"name": "1. Get form which isn't existing",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(404);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}{{formEndpoint}}/123",
									"host": [
										"{{url}}{{formEndpoint}}"
									],
									"path": [
										"123"
									]
								}
							},
							"response": []
						},
						{
							"name": "2. Get unpublished form",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(404);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}{{formEndpoint}}/DE42767E75F446249C1426094A538A27",
									"host": [
										"{{url}}{{formEndpoint}}"
									],
									"path": [
										"DE42767E75F446249C1426094A538A27"
									]
								}
							},
							"response": []
						},
						{
							"name": "3. Get publish form without form element",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"const expectedResponse = \r",
											"{\r",
											"    \"key\": \"8d0d8a9dc7a7481bbd0e0fca2122a49d\",\r",
											"    \"properties\": {\r",
											"        \"allowToStoreSubmissionData\": true,\r",
											"        \"allowMultipleSubmission\": true,\r",
											"        \"showNavigationBar\": true\r",
											"    },\r",
											"    \"formElements\": [],\r",
											"    \"locale\": \"en\",\r",
											"    \"localizations\": {\r",
											"        \"allowAnonymousSubmissionErrorMessage\": \"You must be logged in to submit this form. If you are logged in and still cannot post, make sure \\\"Do not track\\\" in your browser settings is disabled.\",\r",
											"        \"allowMultipleSubmissionErrorMessage\": \"You already submitted this form.\",\r",
											"        \"malformstepconfigruationErrorMessage\": \"Improperly formed FormStep configuration. Some steps are attached to pages, while some steps are not attached, or attached to content with no public URL.\"\r",
											"    }\r",
											"}\r",
											"\r",
											"const actualResponse = pm.response.json();\r",
											"\r",
											"verifyResponseCode(200);\r",
											"verifyResponseEqual(expectedResponse, actualResponse);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}{{formEndpoint}}/8D0D8A9DC7A7481BBD0E0FCA2122A49D",
									"host": [
										"{{url}}{{formEndpoint}}"
									],
									"path": [
										"8D0D8A9DC7A7481BBD0E0FCA2122A49D"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.  Get form which has deleted",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(404);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}{{formEndpoint}}/A02A408DDE2E4906AC018A7C80D7DF6B",
									"host": [
										"{{url}}{{formEndpoint}}"
									],
									"path": [
										"A02A408DDE2E4906AC018A7C80D7DF6B"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get GUI",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/cms/GetContentGuid?id=66",
									"host": [
										"{{url}}"
									],
									"path": [
										"cms",
										"GetContentGuid"
									],
									"query": [
										{
											"key": "id",
											"value": "66"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "5. Get content type # form container",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(400);\r",
											"verifyFormMessageContains(\"is not Form container type\");\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
									"host": [
										"{{url}}{{formEndpoint}}"
									],
									"path": [
										"{{formGuid}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Form container",
					"item": [
						{
							"name": "1. Get form which Form title, Description are defined",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(200);\r",
											"const response = pm.response.json();\r",
											"const actualTitle = response.properties.title;\r",
											"const actualDescription = response.properties.description;\r",
											"\r",
											"verifyResponseEqual(\"F4\", actualTitle);\r",
											"verifyResponseEqual(\"F4\", actualDescription);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}{{formEndpoint}}/8362490F70284DBC845F40EEE1E7CEC9?locale=en",
									"host": [
										"{{url}}{{formEndpoint}}"
									],
									"path": [
										"8362490F70284DBC845F40EEE1E7CEC9"
									],
									"query": [
										{
											"key": "locale",
											"value": "en"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "2. Get form which 'Show a summary confirmation message after submission' is check, 'Confirmation message'  'Reset Confirmation message' are defined",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();\r",
											"const showSummarizedData = response.properties.showSummarizedData;\r",
											"const confirmationMessage = response.properties.confirmationMessage;\r",
											"const resetConfirmationMessage = response.properties.resetConfirmationMessage;\r",
											"\r",
											"verifyResponseCode(200);\r",
											"verifyResponseEqual(true, showSummarizedData);\r",
											"verifyResponseEqual(\"Thank you!\", confirmationMessage);\r",
											"verifyResponseEqual(\"Reset Confirmation message\", resetConfirmationMessage);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}{{formEndpoint}}/D02BC492173E4B8EADE81E1E71E232AF",
									"host": [
										"{{url}}{{formEndpoint}}"
									],
									"path": [
										"D02BC492173E4B8EADE81E1E71E232AF"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get GUI",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/cms/GetContentGuid?id=1235",
									"host": [
										"{{url}}"
									],
									"path": [
										"cms",
										"GetContentGuid"
									],
									"query": [
										{
											"key": "id",
											"value": "1235"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "3. Get form which 'Show a summary confirmation message after submission' isn't check and  'Confirmation message' is defined.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();\r",
											"const showSummarizedData = response.properties.showSummarizedData;\r",
											"const confirmationMessage = response.properties.confirmationMessage;\r",
											"\r",
											"verifyResponseCode(200);\r",
											"verifyResponseEqual(false, showSummarizedData);\r",
											"verifyResponseEqual(\"Thank you!\", confirmationMessage);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
									"host": [
										"{{url}}{{formEndpoint}}"
									],
									"path": [
										"{{formGuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get GUI",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/cms/GetContentGuid?id=56045",
									"host": [
										"{{url}}"
									],
									"path": [
										"cms",
										"GetContentGuid"
									],
									"query": [
										{
											"key": "id",
											"value": "56045"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "4. Get form which define 'Display page after submission' and  'Display message after form submission'",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();\r",
											"const redirectToPage = response.properties.redirectToPage;\r",
											"const submitSuccessMessage = response.properties.submitSuccessMessage;\r",
											"\r",
											"verifyResponseCode(200);\r",
											"verifyParamValueContains(redirectToPage, \"http://localhost:8000/en/alloy-plan/\");\r",
											"verifyParamValueContains(submitSuccessMessage, \"Thank you!\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
									"host": [
										"{{url}}{{formEndpoint}}"
									],
									"path": [
										"{{formGuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get GUI",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/cms/GetContentGuid?id=1239",
									"host": [
										"{{url}}"
									],
									"path": [
										"cms",
										"GetContentGuid"
									],
									"query": [
										{
											"key": "id",
											"value": "1239"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "5. Get form which \"Allow anonymous submissions\", \"Allow multiple submissions from the same IP/cookie\", \"Show navigation bar if the form has multiple steps\", \"Store form submissions\" are checked",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();\r",
											"const allowToStoreSubmissionData = response.properties.allowToStoreSubmissionData;\r",
											"const allowAnonymousSubmission = response.properties.allowAnonymousSubmission;\r",
											"const allowMultipleSubmission = response.properties.allowMultipleSubmission;\r",
											"const showNavigationBar = response.properties.showNavigationBar;\r",
											"\r",
											"\r",
											"verifyResponseCode(200);\r",
											"verifyResponseEqual(true, allowToStoreSubmissionData);\r",
											"verifyResponseEqual(true, allowAnonymousSubmission);\r",
											"verifyResponseEqual(true, allowMultipleSubmission);\r",
											"verifyResponseEqual(true, showNavigationBar);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
									"host": [
										"{{url}}{{formEndpoint}}"
									],
									"path": [
										"{{formGuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get GUI",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/cms/GetContentGuid?id=1240",
									"host": [
										"{{url}}"
									],
									"path": [
										"cms",
										"GetContentGuid"
									],
									"query": [
										{
											"key": "id",
											"value": "1240"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "6. Get form which \"Allow anonymous submissions\", \"Allow multiple submissions from the same IP/cookie\", \"Show navigation bar if the form has multiple steps\", \"Store form submissions\" are not checked",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();\r",
											"const allowToStoreSubmissionData = response.properties.allowToStoreSubmissionData;\r",
											"const allowAnonymousSubmission = response.properties.allowAnonymousSubmission;\r",
											"const allowMultipleSubmission = response.properties.allowMultipleSubmission;\r",
											"const showNavigationBar = response.properties.showNavigationBar;\r",
											"\r",
											"\r",
											"verifyResponseCode(200);\r",
											"verifyResponseEqual(false, allowToStoreSubmissionData);\r",
											"verifyResponseEqual(false, allowAnonymousSubmission);\r",
											"verifyResponseEqual(false, allowMultipleSubmission);\r",
											"verifyResponseEqual(false, showNavigationBar);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
									"host": [
										"{{url}}{{formEndpoint}}"
									],
									"path": [
										"{{formGuid}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Form Elements",
					"item": [
						{
							"name": "Text element",
							"item": [
								{
									"name": "Get GUI",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=1256",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "1256"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "1. Get form contains Text element. Name, Label text, Tooltip, Placeholder text, Predefined value, Auto complete are defined.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const response = pm.response.json();\r",
													"const contentType = response.formElements[0].contentType;\r",
													"const displayName = response.formElements[0].displayName;\r",
													"const label = response.formElements[0].properties.label;\r",
													"const description = response.formElements[0].properties.description;\r",
													"const placeHolder = response.formElements[0].properties.placeHolder;\r",
													"const autoComplete = response.formElements[0].properties.autoComplete;\r",
													"const predefinedValue = response.formElements[0].properties.predefinedValue;\r",
													"\r",
													"\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyParamValueContains(contentType, \"TextboxElementBlock\");\r",
													"verifyParamValueContains(displayName, \"Text 1\");\r",
													"verifyParamValueContains(label, \"Text 1\");\r",
													"verifyParamValueContains(description, \"Text 1\");\r",
													"verifyParamValueContains(placeHolder, \"Text 1\");\r",
													"verifyParamValueContains(autoComplete, \"name\");\r",
													"verifyParamValueContains(predefinedValue, \"Text 1\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=1262",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "1262"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "2. Get form contains Text element. Validators 'Required', 'Email', 'Date (DD/MM/YYYY)', 'Date (MM/DD/YYYY)', 'Date (YYYY-MM-DD)' is checked.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const response = pm.response.json();\r",
													"const requiredValidator =\r",
													"{\r",
													"    \"type\": \"RequiredValidator\",\r",
													"    \"description\": null,\r",
													"    \"model\": {\r",
													"        \"message\": \"This field is required.\",\r",
													"        \"validationCssClass\": \"ValidationRequired\",\r",
													"        \"additionalAttributes\": {\r",
													"            \"required\": \"\",\r",
													"            \"aria-required\": \"true\"\r",
													"        }\r",
													"    }\r",
													"}\r",
													"const regularExpressionValidator = \r",
													"{\r",
													"    \"type\": \"RegularExpressionValidator\",\r",
													"    \"description\": null,\r",
													"    \"model\": {\r",
													"        \"jsPattern\": \"[a-zA-Z]\",\r",
													"        \"dotNetPattern\": \"[a-zA-Z]\",\r",
													"        \"message\": \"This field should be in \\\"[a-zA-Z]\\\" format.\",\r",
													"        \"validationCssClass\": null,\r",
													"        \"additionalAttributes\": null\r",
													"    }\r",
													"}\r",
													"// var emailValidator = \r",
													"// {\r",
													"//     \"type\": \"EmailValidator\",\r",
													"//     \"description\": null,\r",
													"//     \"model\": {\r",
													"//         \"jsPattern\":\"^((([a-zA-Z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-zA-Z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?$\",\r",
													"//         \"dotNetPattern\":\"^((([a-zA-Z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-zA-Z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?$\",\r",
													"//         \"message\": \"Enter a valid email address.\",\r",
													"//         \"validationCssClass\": null,\r",
													"//         \"additionalAttributes\": null\r",
													"//     }\r",
													"// }\r",
													"const dateDDMMYYYYValidator =\r",
													"{\r",
													"                        \"type\": \"DateDDMMYYYYValidator\",\r",
													"                        \"description\": null,\r",
													"                        \"model\": {\r",
													"                            \"jsPattern\": \"^(((0[1-9]|[12]\\\\d|3[01])\\/(0[13578]|1[02])\\/((19|[2-9]\\\\d)\\\\d{2}))|((0[1-9]|[12]\\\\d|30)\\/(0[13456789]|1[012])\\/((19|[2-9]\\\\d)\\\\d{2}))|((0[1-9]|1\\\\d|2[0-8])\\/02\\/((19|[2-9]\\\\d)\\\\d{2}))|(29\\/02\\/(19|[2-9]\\\\d)([02468][048]|[13579][26])))$\",\r",
													"                            \"dotNetPattern\": \"^(((0[1-9]|[12]\\\\d|3[01])\\/(0[13578]|1[02])\\/((19|[2-9]\\\\d)\\\\d{2}))|((0[1-9]|[12]\\\\d|30)\\/(0[13456789]|1[012])\\/((19|[2-9]\\\\d)\\\\d{2}))|((0[1-9]|1\\\\d|2[0-8])\\/02\\/((19|[2-9]\\\\d)\\\\d{2}))|(29\\/02\\/(19|[2-9]\\\\d)([02468][048]|[13579][26])))$\",\r",
													"                            \"message\": \"Enter a date in the DD/MM/YYYY format.\",\r",
													"                            \"validationCssClass\": null,\r",
													"                            \"additionalAttributes\": null\r",
													"                        }\r",
													"                    }\r",
													"const dateMMDDYYYYValidator =\r",
													"{\r",
													"    \"type\": \"DateMMDDYYYYValidator\",\r",
													"    \"description\": null,\r",
													"    \"model\": {\r",
													"        \"jsPattern\": \"^(((0[13578]|1[02])\\/(0[1-9]|[12]\\\\d|3[01])\\/((19|[2-9]\\\\d)\\\\d{2}))|((0[13456789]|1[012])\\/(0[1-9]|[12]\\\\d|30)\\/((19|[2-9]\\\\d)\\\\d{2}))|(02\\/(0[1-9]|1\\\\d|2[0-8])\\/((19|[2-9]\\\\d)\\\\d{2}))|(02\\/29\\/(19|[2-9]\\\\d)([02468][048]|[13579][26])))$\",\r",
													"        \"dotNetPattern\": \"^(((0[13578]|1[02])\\/(0[1-9]|[12]\\\\d|3[01])\\/((19|[2-9]\\\\d)\\\\d{2}))|((0[13456789]|1[012])\\/(0[1-9]|[12]\\\\d|30)\\/((19|[2-9]\\\\d)\\\\d{2}))|(02\\/(0[1-9]|1\\\\d|2[0-8])\\/((19|[2-9]\\\\d)\\\\d{2}))|(02\\/29\\/(19|[2-9]\\\\d)([02468][048]|[13579][26])))$\",\r",
													"        \"message\": \"Enter a date in the MM/DD/YYYY format.\",\r",
													"        \"validationCssClass\": null,\r",
													"        \"additionalAttributes\": null\r",
													"    }\r",
													"}\r",
													"const dateYYYYMMDDValidator =\r",
													"{\r",
													"    \"type\": \"DateYYYYMMDDValidator\",\r",
													"    \"description\": null,\r",
													"    \"model\": {\r",
													"        \"jsPattern\": \"^((((19|[2-9]\\\\d)(([02468][048])|([13579][26]))-02-29))|(([2-9]\\\\d)|(19))\\\\d{2}-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\\\\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))$\",\r",
													"        \"dotNetPattern\": \"^((((19|[2-9]\\\\d)(([02468][048])|([13579][26]))-02-29))|(([2-9]\\\\d)|(19))\\\\d{2}-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\\\\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))$\",\r",
													"        \"message\": \"Enter a date in the YYYY-MM-DD format.\",\r",
													"        \"validationCssClass\": null,\r",
													"        \"additionalAttributes\": null\r",
													"    }\r",
													"}\r",
													"\r",
													"dateDDMMYYYYValidator.model.jsPattern = dateDDMMYYYYValidator.model.jsPattern.replace (/\\//g, \"\\\\\\/\");\r",
													"dateDDMMYYYYValidator.model.dotNetPattern = dateDDMMYYYYValidator.model.dotNetPattern.replace (/\\//g, \"\\\\\\/\");\r",
													"\r",
													"dateMMDDYYYYValidator.model.jsPattern = dateMMDDYYYYValidator.model.jsPattern.replace (/\\//g, \"\\\\\\/\");\r",
													"dateMMDDYYYYValidator.model.dotNetPattern = dateMMDDYYYYValidator.model.dotNetPattern.replace (/\\//g, \"\\\\\\/\");\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyResponseEqual(response.formElements[0].properties.validators[0], requiredValidator);\r",
													"verifyResponseEqual(response.formElements[0].properties.validators[1], regularExpressionValidator);\r",
													"// verifyResponseEqual(response.formElements[0].properties.validators[2], emailValidator);\r",
													"verifyResponseEqual(response.formElements[0].properties.validators[3], dateDDMMYYYYValidator);\r",
													"verifyResponseEqual(response.formElements[0].properties.validators[4], dateMMDDYYYYValidator);\r",
													"verifyResponseEqual(response.formElements[0].properties.validators[5], dateYYYYMMDDValidator);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Textarea element",
							"item": [
								{
									"name": "Get GUI",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=1259",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "1259"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "1. Get form contains Text area element.Name, Label text, Tooltip, Placeholder text, Auto Complete are defined",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const response = pm.response.json();\r",
													"const contentType = response.formElements[0].contentType;\r",
													"const displayName = response.formElements[0].displayName;\r",
													"const label = response.formElements[0].properties.label;\r",
													"const description = response.formElements[0].properties.description;\r",
													"const placeHolder = response.formElements[0].properties.placeHolder;\r",
													"const autoComplete = response.formElements[0].properties.autoComplete;\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyParamValueContains(contentType, \"TextareaElementBlock\");\r",
													"verifyParamValueContains(displayName, \"Text area 1\");\r",
													"verifyParamValueContains(label, \"Text area 1\");\r",
													"verifyParamValueContains(description, \"Text area 1\");\r",
													"verifyParamValueContains(placeHolder, \"Text area 1\");\r",
													"verifyParamValueContains(autoComplete, \"email\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=1266",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "1266"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "2.Get form contains Text area element. Validators 'Required' is checked, 'Regular expression' is checked and define regular expression.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const response = pm.response.json();\r",
													"const requiredValidator =\r",
													"{\r",
													"    \"type\": \"RequiredValidator\",\r",
													"    \"description\": null,\r",
													"    \"model\": {\r",
													"        \"message\": \"This field is required.\",\r",
													"        \"validationCssClass\": \"ValidationRequired\",\r",
													"        \"additionalAttributes\": {\r",
													"            \"required\": \"\",\r",
													"            \"aria-required\": \"true\"\r",
													"        }\r",
													"    }\r",
													"}\r",
													"const regularExpressionValidator =\r",
													"{\r",
													"    \"type\": \"RegularExpressionValidator\",\r",
													"    \"description\": null,\r",
													"    \"model\": {\r",
													"        \"jsPattern\": \"[^abc]\",\r",
													"        \"dotNetPattern\": \"[^abc]\",\r",
													"        \"message\": \"This field should be in \\\"[^abc]\\\" format.\",\r",
													"        \"validationCssClass\": null,\r",
													"        \"additionalAttributes\": null\r",
													"    }\r",
													"}\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyResponseEqual(response.formElements[0].properties.validators[0], requiredValidator);\r",
													"verifyResponseEqual(response.formElements[0].properties.validators[1], regularExpressionValidator);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Number element",
							"item": [
								{
									"name": "Get GUI",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=1269",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "1269"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "1.Get form contains Number element. Name, Label text, Tooltip, Placeholder text, Auto Complete are defined.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const response = pm.response.json();\r",
													"const contentType = response.formElements[0].contentType;\r",
													"const displayName = response.formElements[0].displayName;\r",
													"const label = response.formElements[0].properties.label;\r",
													"const description = response.formElements[0].properties.description;\r",
													"const placeHolder = response.formElements[0].properties.placeHolder;\r",
													"const autoComplete = response.formElements[0].properties.autoComplete;\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyParamValueContains(contentType, \"NumberElementBlock\");\r",
													"verifyParamValueContains(displayName, \"Number 1\");\r",
													"verifyParamValueContains(label, \"Number 1\");\r",
													"verifyParamValueContains(description, \"Number 1\");\r",
													"verifyParamValueContains(placeHolder, \"Number 1\");\r",
													"verifyParamValueContains(autoComplete, \"username\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=1272",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "1272"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "2. Get form contains Number element. Validators 'Required', 'Integer', 'Positive integer' are checked.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const response = pm.response.json();\r",
													"const numericValidator =\r",
													"{\r",
													"    \"type\": \"NumericValidator\",\r",
													"    \"description\": null,\r",
													"    \"model\": {\r",
													"        \"message\": \"Enter a valid number.\",\r",
													"        \"validationCssClass\": null,\r",
													"        \"additionalAttributes\": null\r",
													"    }\r",
													"}\r",
													"const requiredValidator =\r",
													"{\r",
													"    \"type\": \"RequiredValidator\",\r",
													"    \"description\": null,\r",
													"    \"model\": {\r",
													"        \"message\": \"This field is required.\",\r",
													"        \"validationCssClass\": \"ValidationRequired\",\r",
													"        \"additionalAttributes\": {\r",
													"            \"required\": \"\",\r",
													"            \"aria-required\": \"true\"\r",
													"        }\r",
													"    }\r",
													"}\r",
													"const integerValidator =\r",
													"{\r",
													"    \"type\": \"IntegerValidator\",\r",
													"    \"description\": null,\r",
													"    \"model\": {\r",
													"        \"jsPattern\": \"^(-)?\\\\d+$\",\r",
													"        \"dotNetPattern\": \"^(-)?\\\\d+$\",\r",
													"        \"message\": \"Enter a valid integer.\",\r",
													"        \"validationCssClass\": null,\r",
													"        \"additionalAttributes\": null\r",
													"    }\r",
													"}\r",
													"const positiveIntegerValidator =\r",
													"{\r",
													"    \"type\": \"PositiveIntegerValidator\",\r",
													"    \"description\": null,\r",
													"    \"model\": {\r",
													"        \"jsPattern\": \"^\\\\d+$\",\r",
													"        \"dotNetPattern\": \"^\\\\d+$\",\r",
													"        \"message\": \"Enter a valid positive integer.\",\r",
													"        \"validationCssClass\": null,\r",
													"        \"additionalAttributes\": null\r",
													"    }\r",
													"}\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyResponseEqual(response.formElements[0].properties.validators[0], numericValidator);\r",
													"verifyResponseEqual(response.formElements[0].properties.validators[1], requiredValidator);\r",
													"verifyResponseEqual(response.formElements[0].properties.validators[2], integerValidator);\r",
													"verifyResponseEqual(response.formElements[0].properties.validators[3], positiveIntegerValidator);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Range Element",
							"item": [
								{
									"name": "Get GUI",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=1275",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "1275"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "1.Get form contains Range element.Name, Label text, Tooltip, Placeholder text, Min, Max, Step are defined.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const response = pm.response.json();\r",
													"const contentType = response.formElements[0].contentType;\r",
													"const displayName = response.formElements[0].displayName;\r",
													"const label = response.formElements[0].properties.label;\r",
													"const description = response.formElements[0].properties.description;\r",
													"const predefinedValue = response.formElements[0].properties.predefinedValue;\r",
													"const min = response.formElements[0].properties.min;\r",
													"const max = response.formElements[0].properties.max;\r",
													"const step = response.formElements[0].properties.step;\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyParamValueContains(contentType, \"RangeElementBlock\");\r",
													"verifyParamValueContains(displayName, \"Range 1\");\r",
													"verifyParamValueContains(label, \"Range 1\");\r",
													"verifyParamValueContains(description, \"Range 1\");\r",
													"verifyResponseEqual(min, 10);\r",
													"verifyResponseEqual(max, 100);\r",
													"verifyResponseEqual(step, 10);\r",
													"verifyParamValueContains(predefinedValue, \"10\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Url element",
							"item": [
								{
									"name": "Get GUI",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=1278",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "1278"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "1.Get form contains Range element. Name, Label text, Tooltip, Placeholder, Predefined value text are defined.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const response = pm.response.json();\r",
													"const contentType = response.formElements[0].contentType;\r",
													"const displayName = response.formElements[0].displayName;\r",
													"const label = response.formElements[0].properties.label;\r",
													"const description = response.formElements[0].properties.description;\r",
													"const placeHolder = response.formElements[0].properties.placeHolder;\r",
													"const predefinedValue = response.formElements[0].properties.predefinedValue;\r",
													"const urlValidator = \r",
													"{\r",
													"    \"type\": \"UrlValidator\",\r",
													"    \"description\": null,\r",
													"    \"model\": {\r",
													"        \"jsPattern\": \"^(http:\\/\\/www\\\\.|https:\\/\\/www\\\\.|http:\\/\\/|https:\\/\\/)?[a-z0-9]+([\\\\-\\\\.]{1}[a-z0-9]+)*\\\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$\",\r",
													"        \"dotNetPattern\": \"^(http:\\/\\/www\\\\.|https:\\/\\/www\\\\.|http:\\/\\/|https:\\/\\/)?[a-z0-9]+([\\\\-\\\\.]{1}[a-z0-9]+)*\\\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$\",\r",
													"        \"message\": \"Enter a valid URL.\",\r",
													"        \"validationCssClass\": null,\r",
													"        \"additionalAttributes\": null\r",
													"    }\r",
													"}\r",
													"urlValidator.model.jsPattern = urlValidator.model.jsPattern.replace(/\\//g,\"\\\\\\/\");  \r",
													"urlValidator.model.dotNetPattern = urlValidator.model.dotNetPattern.replace(/\\//g,\"\\\\\\/\");  \r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyParamValueContains(contentType, \"UrlElementBlock\");\r",
													"verifyParamValueContains(displayName, \"Url 1\");\r",
													"verifyParamValueContains(label, \"Url 1\");\r",
													"verifyParamValueContains(description, \"Url 1\");\r",
													"verifyParamValueContains(placeHolder, \"Url 1\");\r",
													"verifyParamValueContains(predefinedValue, \"Url 1\");\r",
													"verifyResponseEqual(response.formElements[0].properties.validators[0], urlValidator);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=1281",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "1281"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "2. Get form contains Url element. Validators 'Required', 'Regular expression' are checked.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const response = pm.response.json();\r",
													"const urlValidator =\r",
													"{\r",
													"    \"type\": \"UrlValidator\",\r",
													"    \"description\": null,\r",
													"    \"model\": {\r",
													"        \"jsPattern\": \"^(http:\\/\\/www\\\\.|https:\\/\\/www\\\\.|http:\\/\\/|https:\\/\\/)?[a-z0-9]+([\\\\-\\\\.]{1}[a-z0-9]+)*\\\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$\",\r",
													"        \"dotNetPattern\": \"^(http:\\/\\/www\\\\.|https:\\/\\/www\\\\.|http:\\/\\/|https:\\/\\/)?[a-z0-9]+([\\\\-\\\\.]{1}[a-z0-9]+)*\\\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$\",\r",
													"        \"message\": \"Enter a valid URL.\",\r",
													"        \"validationCssClass\": null,\r",
													"        \"additionalAttributes\": null\r",
													"    }\r",
													"}\r",
													"const requiredValidator = \r",
													" {\r",
													"    \"type\": \"RequiredValidator\",\r",
													"    \"description\": null,\r",
													"    \"model\": {\r",
													"        \"message\": \"This field is required.\",\r",
													"        \"validationCssClass\": \"ValidationRequired\",\r",
													"        \"additionalAttributes\": {\r",
													"            \"required\": \"\",\r",
													"            \"aria-required\": \"true\"\r",
													"        }\r",
													"    }\r",
													"}\r",
													"const regularExpressionValidator =\r",
													"{\r",
													"    \"type\": \"RegularExpressionValidator\",\r",
													"    \"description\": null,\r",
													"    \"model\": {\r",
													"        \"jsPattern\": null,\r",
													"        \"dotNetPattern\": null,\r",
													"        \"message\": \"This field should be in \\\"\\\" format.\",\r",
													"        \"validationCssClass\": null,\r",
													"        \"additionalAttributes\": null\r",
													"    }\r",
													"}\r",
													"urlValidator.model.jsPattern = urlValidator.model.jsPattern.replace(/\\//g,\"\\\\\\/\");  \r",
													"urlValidator.model.dotNetPattern = urlValidator.model.dotNetPattern.replace(/\\//g,\"\\\\\\/\");  \r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyResponseEqual(response.formElements[0].properties.validators[0], urlValidator);\r",
													"verifyResponseEqual(response.formElements[0].properties.validators[1], requiredValidator);\r",
													"verifyResponseEqual(response.formElements[0].properties.validators[2], regularExpressionValidator);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Selection element",
							"item": [
								{
									"name": "Get GUI",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=1284",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "1284"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "1. Get form contains Selection element. Name, Label text, Tooltip, Placeholder, Auto Complete are defined.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const response = pm.response.json();\r",
													"const contentType = response.formElements[0].contentType;\r",
													"const displayName = response.formElements[0].displayName;\r",
													"const label = response.formElements[0].properties.label;\r",
													"const description = response.formElements[0].properties.description;\r",
													"const placeHolder = response.formElements[0].properties.placeHolder;\r",
													"const autoComplete = response.formElements[0].properties.autoComplete;\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyParamValueContains(contentType, \"SelectionElementBlock\");\r",
													"verifyParamValueContains(displayName, \"Selection 1\");\r",
													"verifyParamValueContains(label, \"Selection 1\");\r",
													"verifyParamValueContains(description, \"Selection 1\");\r",
													"verifyParamValueContains(placeHolder, \"Selection 1\");\r",
													"verifyParamValueContains(autoComplete, \"street-address\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=1287",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "1287"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "2. Get form contains Selection element. Validators 'Required', 'Allow multiple choices' are checked.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const response = pm.response.json();\r",
													"const requiredValidator = \r",
													"{\r",
													"    \"type\": \"RequiredValidator\",\r",
													"    \"description\": null,\r",
													"    \"model\": {\r",
													"        \"message\": \"This field is required.\",\r",
													"        \"validationCssClass\": \"ValidationRequired\",\r",
													"        \"additionalAttributes\": {\r",
													"            \"required\": \"\",\r",
													"            \"aria-required\": \"true\"\r",
													"        }\r",
													"    }\r",
													"}\r",
													"const allowMultiSelect = response.formElements[0].properties.allowMultiSelect;\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyResponseEqual(requiredValidator, response.formElements[0].properties.validators[0]);\r",
													"verifyResponseEqual(allowMultiSelect, true);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=1290",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "1290"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "3.Get form contains Selection element. Items are defined and one item is checked by default.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const response = pm.response.json();\r",
													"const items =\r",
													"[\r",
													"    {\r",
													"        \"caption\": \"1\",\r",
													"        \"value\": \"1\",\r",
													"        \"checked\": true\r",
													"    },\r",
													"    {\r",
													"        \"caption\": \"2\",\r",
													"        \"value\": \"2\",\r",
													"        \"checked\": false\r",
													"    },\r",
													"    {\r",
													"        \"caption\": \"3\",\r",
													"        \"value\": \"3\",\r",
													"        \"checked\": false\r",
													"    }\r",
													"]\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyResponseEqual(items, response.formElements[0].properties.items);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=56058",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "56058"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "4. Get forms which feed is 'Episerver'",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const response = pm.response.json();\r",
													"const properties = \r",
													"{\r",
													"    \"validators\": [],\r",
													"    \"label\": \"Selection\",\r",
													"    \"feed\": \"EPiServer\"\r",
													"}\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyResponseEqual(response.formElements[0].properties, properties);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Multiple or single choice Element",
							"item": [
								{
									"name": "Get GUI",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=56062",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "56062"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "1. Get form contains Multiple or single choice Element element.Name, Label text, Tooltip are defined.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const response = pm.response.json();\r",
													"const contentType = response.formElements[0].contentType;\r",
													"const displayName = response.formElements[0].displayName;\r",
													"const label = response.formElements[0].properties.label;\r",
													"const description = response.formElements[0].properties.description;\r",
													"const feed = response.formElements[0].properties.feed;\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyParamValueContains(contentType, \"ChoiceElementBlock\");\r",
													"verifyParamValueContains(displayName, \"Multiple or single choice\");\r",
													"verifyParamValueContains(label, \"Multiple or single choice\");\r",
													"verifyParamValueContains(description, \"Multiple or single choice\");\r",
													"verifyParamValueContains(feed, \"FormsFeed_UseManualInput\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=56065",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "56065"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "2.Get form contains Selection element. Validators 'Required', 'Allow multiple choices' are checked.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const response = pm.response.json();\r",
													"const requiredValidator = \r",
													"{\r",
													"    \"type\": \"RequiredValidator\",\r",
													"    \"description\": null,\r",
													"    \"model\": {\r",
													"        \"message\": \"This field is required.\",\r",
													"        \"validationCssClass\": \"ValidationRequired\",\r",
													"        \"additionalAttributes\": {\r",
													"            \"required\": \"\",\r",
													"            \"aria-required\": \"true\"\r",
													"        }\r",
													"    }\r",
													"}\r",
													"const allowMultiSelect = response.formElements[0].properties.allowMultiSelect;\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyResponseEqual(requiredValidator, response.formElements[0].properties.validators[0]);\r",
													"verifyResponseEqual(allowMultiSelect, true);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=56068",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "56068"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "3.Get form contains Selection element. Items are defined and one item is checked by default.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const response = pm.response.json();\r",
													"const items =\r",
													"[\r",
													"    {\r",
													"        \"caption\": \"1\",\r",
													"        \"value\": \"1\",\r",
													"        \"checked\": true\r",
													"    },\r",
													"    {\r",
													"        \"caption\": \"2\",\r",
													"        \"value\": \"2\",\r",
													"        \"checked\": false\r",
													"    },\r",
													"    {\r",
													"        \"caption\": \"3\",\r",
													"        \"value\": \"3\",\r",
													"        \"checked\": false\r",
													"    }\r",
													"]\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyResponseEqual(items, response.formElements[0].properties.items);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=56071",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "56071"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "4. Get forms which feed is 'Episerver'",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const response = pm.response.json();\r",
													"const properties = \r",
													"{\r",
													"    \"validators\": [],\r",
													"    \"label\": \"Multiple or single choice\",\r",
													"    \"feed\": \"EPiServer\"\r",
													"}\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyResponseEqual(response.formElements[0].properties, properties);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=56074",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "56074"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "5. Feed change from items defined to Episerver",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const response = pm.response.json();\r",
													"const properties = \r",
													"{\r",
													"    \"validators\": [],\r",
													"    \"label\": \"Multiple or single choice\",\r",
													"    \"feed\": \"EPiServer\"\r",
													"}\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyResponseEqual(response.formElements[0].properties, properties);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Image element",
							"item": [
								{
									"name": "Get GUI",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=1302",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "1302"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "1. Get form contains Image choice Element element. Name, Label text, Tooltip are defined.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const response = pm.response.json();\r",
													"const contentType = response.formElements[0].contentType;\r",
													"const displayName = response.formElements[0].displayName;\r",
													"const label = response.formElements[0].properties.label;\r",
													"const description = response.formElements[0].properties.description;\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyParamValueContains(contentType, \"ImageChoiceElementBlock\");\r",
													"verifyParamValueContains(displayName, \"Image choice\");\r",
													"verifyParamValueContains(label, \"Image choice\");\r",
													"verifyParamValueContains(description, \"Image choice\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=1305",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "1305"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "2. Get form contains Image choice element. Validators 'Required', 'Allow multiple choices', 'Show the check box or radio button' are checked.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const response = pm.response.json();\r",
													"const requiredValidator = \r",
													"{\r",
													"    \"type\": \"RequiredValidator\",\r",
													"    \"description\": null,\r",
													"    \"model\": {\r",
													"        \"message\": \"This field is required.\",\r",
													"        \"validationCssClass\": \"ValidationRequired\",\r",
													"        \"additionalAttributes\": {\r",
													"            \"required\": \"\",\r",
													"            \"aria-required\": \"true\"\r",
													"        }\r",
													"    }\r",
													"}\r",
													"const allowMultiSelect = response.formElements[0].properties.allowMultiSelect;\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyResponseEqual(requiredValidator, response.formElements[0].properties.validators[0]);\r",
													"verifyResponseEqual(allowMultiSelect, true);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=1308",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "1308"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "3.Get form contains Image choice element. Image choices Item are defined.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const response = pm.response.json();\r",
													"const items = \r",
													"[\r",
													"    {\r",
													"        \"text\": \"AlloyMeet.png\",\r",
													"        \"url\": \"http://localhost:8000/globalassets/alloy-meet/alloymeet.png\",\r",
													"        \"target\": \"\",\r",
													"        \"title\": \"AlloyMeet\"\r",
													"    },\r",
													"    {\r",
													"        \"text\": \"AlloyPlan.png\",\r",
													"        \"url\": \"http://localhost:8000/globalassets/alloy-plan/alloyplan.png\",\r",
													"        \"target\": \"\",\r",
													"        \"title\": \"AlloyPlan\"\r",
													"    },\r",
													"    {\r",
													"        \"text\": \"AlloyTrack.png\",\r",
													"        \"url\": \"http://localhost:8000/globalassets/alloy-track/alloytrack.png\",\r",
													"        \"target\": \"\",\r",
													"        \"title\": \"AlloyTrack\"\r",
													"    }\r",
													"]\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyResponseEqual(items, response.formElements[0].properties.items);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=56082",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "56082"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "4. Get form which image items are from uploaded external file",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const response = pm.response.json();\r",
													"const items = \r",
													"[\r",
													"    {\r",
													"        \"text\": \"bear-png-with-transparent-background.png\",\r",
													"        \"url\": \"http://localhost:8000/globalassets/upload-external-file/bear-png-with-transparent-background.png\",\r",
													"        \"target\": \"\",\r",
													"        \"title\": \"\"\r",
													"    },\r",
													"    {\r",
													"        \"text\": \"image1.jpg\",\r",
													"        \"url\": \"http://localhost:8000/globalassets/upload-external-file/image1.jpg\",\r",
													"        \"target\": \"\",\r",
													"        \"title\": \"\"\r",
													"    }\r",
													"]\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyResponseEqual(items, response.formElements[0].properties.items);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Hidden visitor profiling Element",
							"item": [
								{
									"name": "1. Get form contains 'Hidden visitor profiling' element. Geo is defined.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}{{formEndpoint}}/78C0549D249A43A1BA66F0233F957279?language=en",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"78C0549D249A43A1BA66F0233F957279"
											],
											"query": [
												{
													"key": "language",
													"value": "en"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "2. Get form contains 'Hidden visitor profiling' element. Profile is defined.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}{{formEndpoint}}/0BE68B4329074E3C8449F922811BB2E9?language=en",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"0BE68B4329074E3C8449F922811BB2E9"
											],
											"query": [
												{
													"key": "language",
													"value": "en"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "3. Get form contains 'Hidden visitor profiling' element. User agent is defined.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}{{formEndpoint}}/50C62F8B7A2A4E938B4D9026FAE32CA1?language=en",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"50C62F8B7A2A4E938B4D9026FAE32CA1"
											],
											"query": [
												{
													"key": "language",
													"value": "en"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "4. Get form contains 'Hidden visitor profiling' element. Visitor groups is defined.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}{{formEndpoint}}/C62507EF782449F58B9C47024DACF59A?language=en",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"C62507EF782449F58B9C47024DACF59A"
											],
											"query": [
												{
													"key": "language",
													"value": "en"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Submit button, Reset button, Form step",
							"item": [
								{
									"name": "Get GUI",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=1323",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "1323"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "1. Get form contains 'Submit button', 'Reset button' elements. Submit button which Name, Label text, Tooltip, Image, Display page after submission are defined. Finalize form  is checked. Reset button which Name, Label text, Tooltip are defined.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const response = pm.response.json();\r",
													"const formElements = \r",
													"[\r",
													"    {\r",
													"        \"key\": \"344c68d6db7c441eaca36a7c786cb75f\",\r",
													"        \"contentType\": \"SubmitButtonElementBlock\",\r",
													"        \"displayName\": \"Submit button\",\r",
													"        \"properties\": {\r",
													"            \"validators\": [],\r",
													"            \"finalizeForm\": true,\r",
													"            \"label\": \"Submit\",\r",
													"            \"image\": \"http://localhost:8000/globalassets/alloy-meet/alloymeet.png\",\r",
													"            \"description\": \"Submit\",\r",
													"            \"redirectToPage\": \"http://localhost:8000/en/\"\r",
													"        },\r",
													"        \"locale\": \"en\",\r",
													"        \"localizations\": {\r",
													"            \"label\": \"Submit\"\r",
													"        }\r",
													"    },\r",
													"    {\r",
													"        \"key\": \"61abb3a49f284a2ab450143b4b2d488d\",\r",
													"        \"contentType\": \"ResetButtonElementBlock\",\r",
													"        \"displayName\": \"Reset button\",\r",
													"        \"properties\": {\r",
													"            \"validators\": [],\r",
													"            \"label\": \"Reset form\",\r",
													"            \"description\": \"Reset form\"\r",
													"        },\r",
													"        \"locale\": \"en\",\r",
													"        \"localizations\": {\r",
													"            \"label\": \"Reset form\"\r",
													"        }\r",
													"    }\r",
													"]\r",
													"verifyResponseCode(200);\r",
													"verifyResponseEqual(formElements, response.formElements);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=1327",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "1327"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "2. Get form contains 'Form step' element. Name, Label text, Tooltip, Display step in other content are defined.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const response = pm.response.json();\r",
													"const formElements = \r",
													"[\r",
													"    {\r",
													"        \"key\": \"692df780e9934eeeb21d6deef2cbee13\",\r",
													"        \"contentType\": \"FormStepBlock\",\r",
													"        \"displayName\": \"Form step\",\r",
													"        \"properties\": {\r",
													"            \"validators\": [],\r",
													"            \"label\": \"Form step\",\r",
													"            \"description\": \"Form step\",\r",
													"            \"attachedContentLink\": \"http://localhost:8000/en/alloy-plan/\"\r",
													"        },\r",
													"        \"locale\": \"en\",\r",
													"        \"localizations\": {\r",
													"            \"previousButtonLabel\": \"Previous step\",\r",
													"            \"nextButtonLabel\": \"Next step\",\r",
													"            \"pageButtonLabel\": \"Step\"\r",
													"        }\r",
													"    }\r",
													"]\r",
													"verifyResponseCode(200);\r",
													"verifyResponseEqual(formElements, response.formElements);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "File Upload",
							"item": [
								{
									"name": "Get GUI",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=58132",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "58132"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "1. Get form contains File upload which Name, Label, Max file size, Allowed extensions are defined.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const response = pm.response.json();\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyResponseEqual(response.formElements[0].properties.validators.find(x => x.type = 'AllowedExtensionsValidator').model.accept, \"jpg, png, pdf\");\r",
													"verifyResponseEqual(response.formElements[0].properties.validators.find(x => x.type = 'AllowedExtensionsValidator').model.message, \"The upload file format is not allowed or not supported.\");\r",
													"verifyResponseEqual(response.formElements[0].properties.validators.find(x => x.type = 'MaxFileSizeValidator').model.sizeInBytes, \"\");\r",
													"verifyResponseEqual(response.formElements[0].properties.validators.find(x => x.type = 'MaxFileSizeValidator').model.message, \"The upload file size should be less than 10 MB.\");\r",
													"verifyResponseEqual(response.formElements[0].properties.label, \"File upload\");\r",
													"verifyResponseEqual(response.formElements[0].properties.description, \"File upload\");\r",
													"verifyResponseEqual(response.formElements[0].properties.fileSize, 10);\r",
													"verifyResponseEqual(response.formElements[0].properties.fileTypes, \"jpg, png, pdf\");\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=58135",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "58135"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "2. Get form contains File upload which Required, Allow multiple file are defined.",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const response = pm.response.json();\r",
													"const requiredValidator =\r",
													"{\r",
													"    \"type\": \"RequiredValidator\",\r",
													"    \"description\": null,\r",
													"    \"model\": {\r",
													"        \"message\": \"This field is required.\",\r",
													"        \"validationCssClass\": \"ValidationRequired\",\r",
													"        \"additionalAttributes\": {\r",
													"            \"required\": \"\",\r",
													"            \"aria-required\": \"true\"\r",
													"        }\r",
													"    }\r",
													"}\r",
													"verifyResponseCode(200);\r",
													"verifyResponseEqual(response.formElements[0].properties.validators[2], requiredValidator);\r",
													"verifyResponseEqual(response.formElements[0].properties.allowMultiple, true);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=58135",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "58135"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "3. No-auto_ MaxSize is defined on server > 28 MB",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const response = pm.response.json();\r",
													"const requiredValidator =\r",
													"{\r",
													"    \"type\": \"RequiredValidator\",\r",
													"    \"description\": null,\r",
													"    \"model\": {\r",
													"        \"message\": \"This field is required.\",\r",
													"        \"validationCssClass\": \"ValidationRequired\",\r",
													"        \"additionalAttributes\": {\r",
													"            \"required\": \"\",\r",
													"            \"aria-required\": \"true\"\r",
													"        }\r",
													"    }\r",
													"}\r",
													"verifyResponseCode(200);\r",
													"verifyResponseEqual(response.formElements[0].properties.validators[2], requiredValidator);\r",
													"verifyResponseEqual(response.formElements[0].allowMultiple, true);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=58135",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "58135"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "4. MaxSize is defined on server > 28 MB > on client",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const response = pm.response.json();\r",
													"const requiredValidator =\r",
													"{\r",
													"    \"type\": \"RequiredValidator\",\r",
													"    \"description\": null,\r",
													"    \"model\": {\r",
													"        \"message\": \"This field is required.\",\r",
													"        \"validationCssClass\": \"ValidationRequired\",\r",
													"        \"additionalAttributes\": {\r",
													"            \"required\": \"\",\r",
													"            \"aria-required\": \"true\"\r",
													"        }\r",
													"    }\r",
													"}\r",
													"verifyResponseCode(200);\r",
													"verifyResponseEqual(response.formElements[0].properties.validators[2], requiredValidator);\r",
													"verifyResponseEqual(response.formElements[0].allowMultiple, true);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=58135",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "58135"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "4. No-auto_MaxSize is defined on client> on server > 28MB",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const response = pm.response.json();\r",
													"const requiredValidator =\r",
													"{\r",
													"    \"type\": \"RequiredValidator\",\r",
													"    \"description\": null,\r",
													"    \"model\": {\r",
													"        \"message\": \"This field is required.\",\r",
													"        \"validationCssClass\": \"ValidationRequired\",\r",
													"        \"additionalAttributes\": {\r",
													"            \"required\": \"\",\r",
													"            \"aria-required\": \"true\"\r",
													"        }\r",
													"    }\r",
													"}\r",
													"verifyResponseCode(200);\r",
													"verifyResponseEqual(response.formElements[0].properties.validators[2], requiredValidator);\r",
													"verifyResponseEqual(response.formElements[0].allowMultiple, true);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=58135",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "58135"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "4. No_auto_MaxSize is defined on server < 28MB < on client",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const response = pm.response.json();\r",
													"const requiredValidator =\r",
													"{\r",
													"    \"type\": \"RequiredValidator\",\r",
													"    \"description\": null,\r",
													"    \"model\": {\r",
													"        \"message\": \"This field is required.\",\r",
													"        \"validationCssClass\": \"ValidationRequired\",\r",
													"        \"additionalAttributes\": {\r",
													"            \"required\": \"\",\r",
													"            \"aria-required\": \"true\"\r",
													"        }\r",
													"    }\r",
													"}\r",
													"verifyResponseCode(200);\r",
													"verifyResponseEqual(response.formElements[0].properties.validators[2], requiredValidator);\r",
													"verifyResponseEqual(response.formElements[0].allowMultiple, true);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Richtext",
							"item": [
								{
									"name": "Get GUI",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=60136",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "60136"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get form contains Richtext",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const response = pm.response.json();\r",
													"const paragraphText = \"<p>Test 1:</p>\\n<p>::Text::</p>\\n<p>::Number::</p>\\n<p>Test 2:</p>\\n<p>::Text::</p>\\n<p>::Number::</p>\\n<p> </p>\\n<p> </p>\";\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyResponseEqual(response.formElements.find(x => x.contentType == 'ParagraphTextElementBlock').displayName, \"Rich text (with placeholders)\");\r",
													"verifyResponseEqual(response.formElements.find(x => x.contentType == 'ParagraphTextElementBlock').properties.paragraphText, paragraphText);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}?locale=sv",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "locale",
													"value": "sv"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Get GUI",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/cms/GetContentGuid?id=1241",
									"host": [
										"{{url}}"
									],
									"path": [
										"cms",
										"GetContentGuid"
									],
									"query": [
										{
											"key": "id",
											"value": "1241"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get form which contains elements: Text, Text area, Number, Range,Url, Selection, Mutiple or singe choice, Image choice, File upload, Hidden visitor profiling,Hidden predefined value, Richtext, Captchar Form step, Submit, Reset by default.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();\r",
											"const textboxElement =\r",
											"{\r",
											"    \"key\": \"3ed756f70d3c4952afff741a91372cf4\",\r",
											"    \"contentType\": \"TextboxElementBlock\",\r",
											"    \"displayName\": \"Text\",\r",
											"    \"properties\": {\r",
											"        \"validators\": [],\r",
											"        \"label\": \"Text\"\r",
											"    },\r",
											"    \"locale\": \"en\",\r",
											"    \"localizations\": {}\r",
											"}\r",
											"const textareaElement =\r",
											"{\r",
											"    \"key\": \"c9f9b6b8b02b4d1cb569c9bcb8c232d7\",\r",
											"    \"contentType\": \"TextareaElementBlock\",\r",
											"    \"displayName\": \"Text area\",\r",
											"    \"properties\": {\r",
											"        \"validators\": [],\r",
											"        \"label\": \"Text area\"\r",
											"    },\r",
											"    \"locale\": \"en\",\r",
											"    \"localizations\": {}\r",
											"}\r",
											"const numberElement =\r",
											"{\r",
											"    \"key\": \"4136ab9d12fb44d19a976e5965718540\",\r",
											"    \"contentType\": \"NumberElementBlock\",\r",
											"    \"displayName\": \"Number\",\r",
											"    \"properties\": {\r",
											"        \"validators\": [\r",
											"            {\r",
											"                \"type\": \"NumericValidator\",\r",
											"                \"description\": null,\r",
											"                \"model\": {\r",
											"                    \"message\": \"Enter a valid number.\",\r",
											"                    \"validationCssClass\": null,\r",
											"                    \"additionalAttributes\": null\r",
											"                }\r",
											"            }\r",
											"        ],\r",
											"        \"label\": \"Number\"\r",
											"    },\r",
											"    \"locale\": \"en\",\r",
											"    \"localizations\": {}\r",
											"}\r",
											"const rangeElement =\r",
											"{\r",
											"    \"key\": \"d1d52417da224e07ae2f34db733ffe1e\",\r",
											"    \"contentType\": \"RangeElementBlock\",\r",
											"    \"displayName\": \"Range\",\r",
											"    \"properties\": {\r",
											"        \"validators\": [],\r",
											"        \"label\": \"Range\",\r",
											"        \"min\": 0,\r",
											"        \"max\": 10,\r",
											"        \"step\": 1\r",
											"    },\r",
											"    \"locale\": \"en\",\r",
											"    \"localizations\": {}\r",
											"}\r",
											"const urlElement =\r",
											"{\r",
											"    \"key\": \"4f7a259280214ef18036780017c91968\",\r",
											"    \"contentType\": \"UrlElementBlock\",\r",
											"    \"displayName\": \"Url\",\r",
											"    \"properties\": {\r",
											"        \"validators\": [\r",
											"            {\r",
											"                \"type\": \"UrlValidator\",\r",
											"                \"description\": null,\r",
											"                \"model\": {\r",
											"                    \"jsPattern\": \"^(http:\\/\\/www\\\\.|https:\\/\\/www\\\\.|http:\\/\\/|https:\\/\\/)?[a-z0-9]+([\\\\-\\\\.]{1}[a-z0-9]+)*\\\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$\",\r",
											"                    \"dotNetPattern\": \"^(http:\\/\\/www\\\\.|https:\\/\\/www\\\\.|http:\\/\\/|https:\\/\\/)?[a-z0-9]+([\\\\-\\\\.]{1}[a-z0-9]+)*\\\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$\",\r",
											"                    \"message\": \"Enter a valid URL.\",\r",
											"                    \"validationCssClass\": null,\r",
											"                    \"additionalAttributes\": null\r",
											"                }\r",
											"            }\r",
											"        ],\r",
											"        \"label\": \"Url\"\r",
											"    },\r",
											"    \"locale\": \"en\",\r",
											"    \"localizations\": {}\r",
											"}\r",
											"const selectionElement =\r",
											"{\r",
											"    \"key\": \"689043a6dc0e4fe18e6a01953c3a0812\",\r",
											"    \"contentType\": \"SelectionElementBlock\",\r",
											"    \"displayName\": \"Selection\",\r",
											"    \"properties\": {\r",
											"        \"validators\": [],\r",
											"        \"label\": \"Selection\",\r",
											"        \"feed\": \"FormsFeed_UseManualInput\"\r",
											"    },\r",
											"    \"locale\": \"en\",\r",
											"    \"localizations\": {\r",
											"        \"selectionDefaultPlaceholder\": \"-- Select an option --\"\r",
											"    }\r",
											"}\r",
											"const choiceElement =\r",
											"{\r",
											"    \"key\": \"07aa5890551f42ff924e178087fd003b\",\r",
											"    \"contentType\": \"ChoiceElementBlock\",\r",
											"    \"displayName\": \"Multiple or single choice\",\r",
											"    \"properties\": {\r",
											"        \"validators\": [],\r",
											"        \"label\": \"Multiple or single choice\",\r",
											"        \"feed\": \"FormsFeed_UseManualInput\"\r",
											"    },\r",
											"    \"locale\": \"en\",\r",
											"    \"localizations\": {}\r",
											"}\r",
											"const imageChoiceElement =\r",
											"{\r",
											"    \"key\": \"ce0edf6b2b8f4dd9ad27fc9bc733e2e6\",\r",
											"    \"contentType\": \"ImageChoiceElementBlock\",\r",
											"    \"displayName\": \"Image choice\",\r",
											"    \"properties\": {\r",
											"        \"validators\": [],\r",
											"        \"label\": \"Image choice\"\r",
											"    },\r",
											"    \"locale\": \"en\",\r",
											"    \"localizations\": {}\r",
											"}\r",
											"const formStep =\r",
											"{\r",
											"    \"key\": \"20c2b66da1d24f48b752b81c896a14f6\",\r",
											"    \"contentType\": \"FormStepBlock\",\r",
											"    \"displayName\": \"Form step\",\r",
											"    \"properties\": {\r",
											"        \"validators\": []\r",
											"    },\r",
											"    \"locale\": \"en\",\r",
											"    \"localizations\": {\r",
											"        \"previousButtonLabel\": \"Previous step\",\r",
											"        \"nextButtonLabel\": \"Next step\",\r",
											"        \"pageButtonLabel\": \"Step\"\r",
											"    }\r",
											"}\r",
											"const fileUploadElement =\r",
											"{\r",
											"    \"key\": \"b499cf6b889c4900bdfbce774a711551\",\r",
											"    \"contentType\": \"FileUploadElementBlock\",\r",
											"    \"displayName\": \"File upload\",\r",
											"    \"properties\": {\r",
											"        \"validators\": [\r",
											"            {\r",
											"                \"type\": \"AllowedExtensionsValidator\",\r",
											"                \"description\": null,\r",
											"                \"model\": {\r",
											"                    \"accept\": \"\",\r",
											"                    \"message\": \"The upload file format is not allowed or not supported.\",\r",
											"                    \"validationCssClass\": null,\r",
											"                    \"additionalAttributes\": null\r",
											"                }\r",
											"            },\r",
											"            {\r",
											"                \"type\": \"MaxFileSizeValidator\",\r",
											"                \"description\": null,\r",
											"                \"model\": {\r",
											"                    \"sizeInBytes\": 29360128,\r",
											"                    \"message\": \"The upload file size should be less than 28 MB.\",\r",
											"                    \"validationCssClass\": null,\r",
											"                    \"additionalAttributes\": null\r",
											"                }\r",
											"            }\r",
											"        ],\r",
											"        \"label\": \"File upload\"\r",
											"    },\r",
											"    \"locale\": \"en\",\r",
											"    \"localizations\": {}\r",
											"}\r",
											"const visitorDataHiddenElement = \r",
											" {\r",
											"    \"key\": \"8097b5894d7d446b8c95b2784211fadc\",\r",
											"    \"contentType\": \"VisitorDataHiddenElementBlock\",\r",
											"    \"displayName\": \"Hidden visitor profiling\",\r",
											"    \"properties\": {\r",
											"        \"validators\": []\r",
											"    },\r",
											"    \"locale\": \"en\",\r",
											"    \"localizations\": {}\r",
											"}\r",
											"const predefinedHiddenElement =\r",
											"{\r",
											"    \"key\": \"f167d35f48904802bb524959d014cd1d\",\r",
											"    \"contentType\": \"PredefinedHiddenElementBlock\",\r",
											"    \"displayName\": \"Hidden predefined value\",\r",
											"    \"properties\": {\r",
											"        \"validators\": []\r",
											"    },\r",
											"    \"locale\": \"en\",\r",
											"    \"localizations\": {}\r",
											"}\r",
											"const paragraphTextElement =\r",
											" {\r",
											"    \"key\": \"5b3fd298ff154ebe8628bd450f25ab4b\",\r",
											"    \"contentType\": \"ParagraphTextElementBlock\",\r",
											"    \"displayName\": \"Rich text (with placeholders)\",\r",
											"    \"properties\": {\r",
											"        \"validators\": []\r",
											"    },\r",
											"    \"locale\": \"en\",\r",
											"    \"localizations\": {}\r",
											"}\r",
											"const captchaElement =\r",
											"{\r",
											"    \"key\": \"1713e75c5ab948b8b967f05ca76d1f40\",\r",
											"    \"contentType\": \"CaptchaElementBlock\",\r",
											"    \"displayName\": \"Captcha\",\r",
											"    \"properties\": {\r",
											"        \"validators\": [\r",
											"            {\r",
											"                \"type\": \"CaptchaValidator\",\r",
											"                \"description\": null,\r",
											"                \"model\": {\r",
											"                    \"message\": \"Enter the characters you see in the picture.\",\r",
											"                    \"validationCssClass\": null,\r",
											"                    \"additionalAttributes\": null\r",
											"                }\r",
											"            }\r",
											"        ],\r",
											"        \"label\": \"Word verification\",\r",
											"        \"imageWidth\": 350,\r",
											"        \"imageHeight\": 75,\r",
											"        \"textLength\": 5\r",
											"    },\r",
											"    \"locale\": \"en\",\r",
											"    \"localizations\": {\r",
											"        \"refreshButtonLabel\": \"Refresh captcha\",\r",
											"        \"label\": \"Word verification\"\r",
											"    }\r",
											"}\r",
											"const submitButtonElement =\r",
											" {\r",
											"    \"key\": \"050303b91f494251b3dfa4e1988bdc6e\",\r",
											"    \"contentType\": \"SubmitButtonElementBlock\",\r",
											"    \"displayName\": \"Submit button\",\r",
											"    \"properties\": {\r",
											"        \"validators\": [],\r",
											"        \"label\": \"Submit\"\r",
											"    },\r",
											"    \"locale\": \"en\",\r",
											"    \"localizations\": {\r",
											"        \"label\": \"Submit\"\r",
											"    }\r",
											"}\r",
											"const resetButtonElement =\r",
											"{\r",
											"    \"key\": \"22aadd9b19d24501bd52eefcad4579e5\",\r",
											"    \"contentType\": \"ResetButtonElementBlock\",\r",
											"    \"displayName\": \"Reset button\",\r",
											"    \"properties\": {\r",
											"        \"validators\": [],\r",
											"        \"label\": \"Reset form\"\r",
											"    },\r",
											"    \"locale\": \"en\",\r",
											"    \"localizations\": {\r",
											"        \"label\": \"Reset form\"\r",
											"    }\r",
											"}\r",
											"urlElement.properties.validators[0].model.jsPattern = urlElement.properties.validators[0].model.jsPattern.replace(/\\//g,\"\\\\\\/\");  \r",
											"urlElement.properties.validators[0].model.dotNetPattern = urlElement.properties.validators[0].model.dotNetPattern.replace(/\\//g,\"\\\\\\/\");\r",
											"\r",
											"verifyResponseCode(200);\r",
											"verifyResponseEqual(textboxElement, response.formElements[0]);\r",
											"verifyResponseEqual(textareaElement, response.formElements[1]);\r",
											"verifyResponseEqual(numberElement, response.formElements[2]);\r",
											"verifyResponseEqual(rangeElement, response.formElements[3]);\r",
											"verifyResponseEqual(urlElement, response.formElements[4]);\r",
											"verifyResponseEqual(selectionElement, response.formElements[5]);\r",
											"verifyResponseEqual(choiceElement, response.formElements[6]);\r",
											"verifyResponseEqual(imageChoiceElement, response.formElements[7]);\r",
											"verifyResponseEqual(formStep, response.formElements[8]);\r",
											"verifyResponseEqual(fileUploadElement, response.formElements[9]);\r",
											"verifyResponseEqual(visitorDataHiddenElement, response.formElements[10]);\r",
											"verifyResponseEqual(predefinedHiddenElement, response.formElements[11]);\r",
											"verifyResponseEqual(paragraphTextElement, response.formElements[12]);\r",
											"verifyResponseEqual(captchaElement, response.formElements[13]);\r",
											"verifyResponseEqual(submitButtonElement, response.formElements[14]);\r",
											"verifyResponseEqual(resetButtonElement, response.formElements[15]);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}{{formEndpoint}}/{{formGuid}}?locale=sv",
									"host": [
										"{{url}}{{formEndpoint}}"
									],
									"path": [
										"{{formGuid}}"
									],
									"query": [
										{
											"key": "locale",
											"value": "sv"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Dependencies",
					"item": [
						{
							"name": "Get GUI",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/cms/GetContentGuid?id=1122",
									"host": [
										"{{url}}"
									],
									"path": [
										"cms",
										"GetContentGuid"
									],
									"query": [
										{
											"key": "id",
											"value": "1122"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "1. Get Dependencies of form that 'satisfiedAction' is shown and 'operator' is Equals",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();\r",
											"\r",
											"verifyResponseCode(200);\r",
											"verifyResponseEqual(response.formElements[1].properties.satisfiedAction, \"show\");\r",
											"verifyResponseEqual(response.formElements[0].key, response.formElements[1].properties.conditions[0].field);\r",
											"verifyResponseEqual(response.formElements[1].properties.conditions[0].operator, \"Equals\");\r",
											"verifyResponseEqual(response.formElements[1].properties.conditions[0].fieldValue, \"test\");\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
									"host": [
										"{{url}}{{formEndpoint}}"
									],
									"path": [
										"{{formGuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get GUI",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/cms/GetContentGuid?id=1126",
									"host": [
										"{{url}}"
									],
									"path": [
										"cms",
										"GetContentGuid"
									],
									"query": [
										{
											"key": "id",
											"value": "1126"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "2. Get Dependencies of form that 'satisfiedAction' is shown and 'operator' is Not equals",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();\r",
											"\r",
											"verifyResponseCode(200);\r",
											"verifyResponseEqual(response.formElements[1].properties.satisfiedAction, \"show\");\r",
											"verifyResponseEqual(response.formElements[0].key, response.formElements[1].properties.conditions[0].field);\r",
											"verifyResponseEqual(response.formElements[1].properties.conditions[0].operator, \"NotEquals\");\r",
											"verifyResponseEqual(response.formElements[1].properties.conditions[0].fieldValue, \"test\");\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
									"host": [
										"{{url}}{{formEndpoint}}"
									],
									"path": [
										"{{formGuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get GUI",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/cms/GetContentGuid?id=1130",
									"host": [
										"{{url}}"
									],
									"path": [
										"cms",
										"GetContentGuid"
									],
									"query": [
										{
											"key": "id",
											"value": "1130"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "3. Get Dependencies of form that 'satisfiedAction' is shown and 'operator' is Contains",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();\r",
											"\r",
											"verifyResponseCode(200);\r",
											"verifyResponseEqual(response.formElements[0].properties.satisfiedAction, \"show\");\r",
											"verifyResponseEqual(response.formElements[1].key, response.formElements[0].properties.conditions[0].field);\r",
											"verifyResponseEqual(response.formElements[0].properties.conditions[0].operator, \"Contains\");\r",
											"verifyResponseEqual(response.formElements[0].properties.conditions[0].fieldValue, \"test\");\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
									"host": [
										"{{url}}{{formEndpoint}}"
									],
									"path": [
										"{{formGuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get GUI",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/cms/GetContentGuid?id=1135",
									"host": [
										"{{url}}"
									],
									"path": [
										"cms",
										"GetContentGuid"
									],
									"query": [
										{
											"key": "id",
											"value": "1135"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "4. Get Dependencies of form that 'satisfiedAction' is shown and 'operator' is 'Not Contains'",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();\r",
											"\r",
											"verifyResponseCode(200);\r",
											"verifyResponseEqual(response.formElements[1].properties.satisfiedAction, \"show\");\r",
											"verifyResponseEqual(response.formElements[0].key, response.formElements[1].properties.conditions[0].field);\r",
											"verifyResponseEqual(response.formElements[1].properties.conditions[0].operator, \"NotContains\");\r",
											"verifyResponseEqual(response.formElements[1].properties.conditions[0].fieldValue, \"test\");\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
									"host": [
										"{{url}}{{formEndpoint}}"
									],
									"path": [
										"{{formGuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get GUI",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/cms/GetContentGuid?id=1139",
									"host": [
										"{{url}}"
									],
									"path": [
										"cms",
										"GetContentGuid"
									],
									"query": [
										{
											"key": "id",
											"value": "1139"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "5. Get Dependencies of form that 'satisfiedAction' is shown and 'operator' is 'Match with regular expression'",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();\r",
											"\r",
											"verifyResponseCode(200);\r",
											"verifyResponseEqual(response.formElements[1].properties.satisfiedAction, \"show\");\r",
											"verifyResponseEqual(response.formElements[0].key, response.formElements[1].properties.conditions[0].field);\r",
											"verifyResponseEqual(response.formElements[1].properties.conditions[0].operator, \"MatchRegularExpression\");\r",
											"verifyResponseEqual(response.formElements[1].properties.conditions[0].fieldValue, \"[A-Za-z]\");\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
									"host": [
										"{{url}}{{formEndpoint}}"
									],
									"path": [
										"{{formGuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get GUI",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/cms/GetContentGuid?id=1143",
									"host": [
										"{{url}}"
									],
									"path": [
										"cms",
										"GetContentGuid"
									],
									"query": [
										{
											"key": "id",
											"value": "1143"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "6. Get Dependencies of form which has many conditions and combine of conditional logic is 'All'",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();\r",
											"\r",
											"verifyResponseCode(200);\r",
											"verifyResponseEqual(response.formElements[2].properties.satisfiedAction, \"show\");\r",
											"verifyResponseEqual(response.formElements[2].properties.conditionCombination, \"All\");\r",
											"\r",
											"verifyResponseEqual(response.formElements[0].key, response.formElements[2].properties.conditions[0].field);\r",
											"verifyResponseEqual(response.formElements[2].properties.conditions[0].operator, \"Contains\");\r",
											"verifyResponseEqual(response.formElements[2].properties.conditions[0].fieldValue, \"test\");\r",
											"\r",
											"verifyResponseEqual(response.formElements[1].key, response.formElements[2].properties.conditions[1].field);\r",
											"verifyResponseEqual(response.formElements[2].properties.conditions[1].operator, \"Equals\");\r",
											"verifyResponseEqual(response.formElements[2].properties.conditions[1].fieldValue, \"5\");\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
									"host": [
										"{{url}}{{formEndpoint}}"
									],
									"path": [
										"{{formGuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get GUI",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/cms/GetContentGuid?id=1148",
									"host": [
										"{{url}}"
									],
									"path": [
										"cms",
										"GetContentGuid"
									],
									"query": [
										{
											"key": "id",
											"value": "1148"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "7. Get Dependencies of form which has many conditions and combine of conditional logic is 'Any'",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();\r",
											"\r",
											"verifyResponseCode(200);\r",
											"verifyResponseEqual(response.formElements[2].properties.satisfiedAction, \"show\");\r",
											"verifyResponseEqual(response.formElements[2].properties.conditionCombination, \"Any\");\r",
											"\r",
											"verifyResponseEqual(response.formElements[0].key, response.formElements[2].properties.conditions[0].field);\r",
											"verifyResponseEqual(response.formElements[2].properties.conditions[0].operator, \"Contains\");\r",
											"verifyResponseEqual(response.formElements[2].properties.conditions[0].fieldValue, \"test\");\r",
											"\r",
											"verifyResponseEqual(response.formElements[1].key, response.formElements[2].properties.conditions[1].field);\r",
											"verifyResponseEqual(response.formElements[2].properties.conditions[1].operator, \"Equals\");\r",
											"verifyResponseEqual(response.formElements[2].properties.conditions[1].fieldValue, \"5\");\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
									"host": [
										"{{url}}{{formEndpoint}}"
									],
									"path": [
										"{{formGuid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get GUI",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/cms/GetContentGuid?id=1156",
									"host": [
										"{{url}}"
									],
									"path": [
										"cms",
										"GetContentGuid"
									],
									"query": [
										{
											"key": "id",
											"value": "1156"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "8. Get Dependencies of form that 'satisfiedAction' is 'Hidden' and combine of conditional logic is 'Any'",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();\r",
											"\r",
											"verifyResponseCode(200);\r",
											"verifyResponseEqual(response.formElements[5].properties.satisfiedAction, \"hide\");\r",
											"verifyResponseEqual(response.formElements[5].properties.conditionCombination, \"Any\");\r",
											"\r",
											"verifyResponseEqual(response.formElements[0].key, response.formElements[5].properties.conditions[0].field);\r",
											"verifyResponseEqual(response.formElements[5].properties.conditions[0].operator, \"Equals\");\r",
											"verifyResponseEqual(response.formElements[5].properties.conditions[0].fieldValue, \"except\");\r",
											"\r",
											"verifyResponseEqual(response.formElements[2].key, response.formElements[5].properties.conditions[1].field);\r",
											"verifyResponseEqual(response.formElements[5].properties.conditions[1].operator, \"Contains\");\r",
											"verifyResponseEqual(response.formElements[5].properties.conditions[1].fieldValue, \"except\");\r",
											"\r",
											"verifyResponseEqual(response.formElements[3].key, response.formElements[5].properties.conditions[2].field);\r",
											"verifyResponseEqual(response.formElements[5].properties.conditions[2].operator, \"MatchRegularExpression\");\r",
											"verifyResponseEqual(response.formElements[5].properties.conditions[2].fieldValue, \"[0-9]\");\r",
											"\r",
											"verifyResponseEqual(response.formElements[4].key, response.formElements[5].properties.conditions[3].field);\r",
											"verifyResponseEqual(response.formElements[5].properties.conditions[3].operator, \"NotEquals\");\r",
											"verifyResponseEqual(response.formElements[5].properties.conditions[3].fieldValue, \"10\");\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
									"host": [
										"{{url}}{{formEndpoint}}"
									],
									"path": [
										"{{formGuid}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Language",
					"item": [
						{
							"name": "Get GUI",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/cms/GetContentGuid?id=56093",
									"host": [
										"{{url}}"
									],
									"path": [
										"cms",
										"GetContentGuid"
									],
									"query": [
										{
											"key": "id",
											"value": "56093"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "1.1 Get single form which contains all supported element type in language 'sv'",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();\r",
											"const formlocalizations = \r",
											"{\r",
											"    \"allowAnonymousSubmissionErrorMessage\": \"Du måste vara inloggad för att skicka formuläret. Om du är inloggad och ändå inte kan skicka det, se till att \\\"Do not track\\\" inte är aktiverat i din webbläsares inställningar.\",\r",
											"    \"allowMultipleSubmissionErrorMessage\": \"Du har redan skickat det här formuläret.\",\r",
											"    \"malformstepconfigruationErrorMessage\": \"Felkonstruerade formulärsteg. Vissa steg är kopplade till sidor, andra steg är inte kopplade till sidor eller kopplade till innehåll som saknar publik URL.\"\r",
											"}\r",
											"\r",
											"verifyResponseCode(200);\r",
											"verifyResponseEqual(response.formElements[0].locale, \"sv\");\r",
											"verifyResponseEqual(response.formElements[1].locale, \"sv\");\r",
											"verifyResponseEqual(response.formElements[2].locale, \"sv\");\r",
											"verifyResponseEqual(response.formElements[3].locale, \"sv\");\r",
											"verifyResponseEqual(response.formElements[4].locale, \"sv\");\r",
											"verifyResponseEqual(response.formElements[5].locale, \"sv\");\r",
											"verifyResponseEqual(response.formElements[6].locale, \"sv\");\r",
											"verifyResponseEqual(response.formElements[7].locale, \"sv\");\r",
											"verifyResponseEqual(response.formElements[8].locale, \"sv\");\r",
											"verifyResponseEqual(response.formElements[9].locale, \"sv\");\r",
											"verifyResponseEqual(response.formElements[10].locale, \"sv\");\r",
											"verifyResponseEqual(response.formElements[11].locale, \"sv\");\r",
											"verifyResponseEqual(response.formElements[12].locale, \"sv\");\r",
											"verifyResponseEqual(response.formElements[13].locale, \"sv\");\r",
											"verifyResponseEqual(response.formElements[14].locale, \"sv\");\r",
											"\r",
											"verifyResponseEqual(response.formElements.find(x => x.contentType == 'SelectionElementBlock').localizations.selectionDefaultPlaceholder, \"-- Välj ett alternativ --\");\r",
											"verifyResponseEqual(response.formElements.find(x => x.contentType == 'NumberElementBlock').properties.validators[0].model.message, \"\");\r",
											"verifyResponseEqual(response.formElements.find(x => x.contentType == 'UrlElementBlock').properties.validators[0].model.message, \"\");\r",
											"verifyResponseEqual(response.formElements.find(x => x.contentType == 'FileUploadElementBlock').properties.validators[0].model.message, \"\");\r",
											"verifyResponseEqual(response.formElements.find(x => x.contentType == 'FileUploadElementBlock').properties.validators[1].model.message, \"\");\r",
											"verifyResponseEqual(response.formElements.find(x => x.contentType == 'FormStepBlock').localizations.previousButtonLabel, \"Föregående steg\");\r",
											"verifyResponseEqual(response.formElements.find(x => x.contentType == 'FormStepBlock').localizations.nextButtonLabel, \"Nästa steg\");\r",
											"verifyResponseEqual(response.formElements.find(x => x.contentType == 'FormStepBlock').localizations.pageButtonLabel, \"Steg\");\r",
											"verifyResponseEqual(response.formElements.find(x => x.contentType == 'SubmitButtonElementBlock').localizations.label, \"Skicka\");\r",
											"verifyResponseEqual(response.formElements.find(x => x.contentType == 'ResetButtonElementBlock').localizations.label, \"Återställ formuläret\");\r",
											"verifyResponseEqual(response.localizations, formlocalizations);\r",
											"verifyResponseEqual(response.locale, \"sv\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}{{formEndpoint}}/{{formGuid}}?locale=sv",
									"host": [
										"{{url}}{{formEndpoint}}"
									],
									"path": [
										"{{formGuid}}"
									],
									"query": [
										{
											"key": "locale",
											"value": "sv"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get GUI",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/cms/GetContentGuid?id=56110",
									"host": [
										"{{url}}"
									],
									"path": [
										"cms",
										"GetContentGuid"
									],
									"query": [
										{
											"key": "id",
											"value": "56110"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "1.2 Get single form which contains all supported element type in language 'en'",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();\r",
											"const formlocalizations = \r",
											"{\r",
											"    \"allowAnonymousSubmissionErrorMessage\": \"You must be logged in to submit this form. If you are logged in and still cannot post, make sure \\\"Do not track\\\" in your browser settings is disabled.\",\r",
											"    \"allowMultipleSubmissionErrorMessage\": \"You already submitted this form.\",\r",
											"    \"malformstepconfigruationErrorMessage\": \"Improperly formed FormStep configuration. Some steps are attached to pages, while some steps are not attached, or attached to content with no public URL.\"\r",
											"}\r",
											"\r",
											"verifyResponseCode(200);\r",
											"verifyResponseEqual(response.formElements[0].locale, \"en\");\r",
											"verifyResponseEqual(response.formElements[1].locale, \"en\");\r",
											"verifyResponseEqual(response.formElements[2].locale, \"en\");\r",
											"verifyResponseEqual(response.formElements[3].locale, \"en\");\r",
											"verifyResponseEqual(response.formElements[4].locale, \"en\");\r",
											"verifyResponseEqual(response.formElements[5].locale, \"en\");\r",
											"verifyResponseEqual(response.formElements[6].locale, \"en\");\r",
											"verifyResponseEqual(response.formElements[7].locale, \"en\");\r",
											"verifyResponseEqual(response.formElements[8].locale, \"en\");\r",
											"verifyResponseEqual(response.formElements[9].locale, \"en\");\r",
											"verifyResponseEqual(response.formElements[10].locale, \"en\");\r",
											"verifyResponseEqual(response.formElements[11].locale, \"en\");\r",
											"verifyResponseEqual(response.formElements[12].locale, \"en\");\r",
											"verifyResponseEqual(response.formElements[13].locale, \"en\");\r",
											"verifyResponseEqual(response.formElements[14].locale, \"en\");\r",
											"\r",
											"verifyResponseEqual(response.formElements.find(x => x.contentType == 'SelectionElementBlock').localizations.selectionDefaultPlaceholder, \"-- Select an option --\");\r",
											"verifyResponseEqual(response.formElements.find(x => x.contentType == 'NumberElementBlock').properties.validators[0].model.message, \"Enter a valid number.\");\r",
											"verifyResponseEqual(response.formElements.find(x => x.contentType == 'UrlElementBlock').properties.validators[0].model.message, \"Enter a valid URL.\");\r",
											"verifyResponseEqual(response.formElements.find(x => x.contentType == 'FileUploadElementBlock').properties.validators[0].model.message, \"The upload file format is not allowed or not supported.\");\r",
											"verifyResponseEqual(response.formElements.find(x => x.contentType == 'FileUploadElementBlock').properties.validators[1].model.message, \"The upload file size should be less than 28 MB.\");\r",
											"verifyResponseEqual(response.formElements.find(x => x.contentType == 'FormStepBlock').localizations.previousButtonLabel, \"Previous step\");\r",
											"verifyResponseEqual(response.formElements.find(x => x.contentType == 'FormStepBlock').localizations.nextButtonLabel, \"Next step\");\r",
											"verifyResponseEqual(response.formElements.find(x => x.contentType == 'FormStepBlock').localizations.pageButtonLabel, \"Step\");\r",
											"verifyResponseEqual(response.formElements.find(x => x.contentType == 'SubmitButtonElementBlock').localizations.label, \"Submit\");\r",
											"verifyResponseEqual(response.formElements.find(x => x.contentType == 'ResetButtonElementBlock').localizations.label, \"Reset form\");\r",
											"verifyResponseEqual(response.localizations, formlocalizations);\r",
											"verifyResponseEqual(response.locale, \"en\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}{{formEndpoint}}/{{formGuid}}?locale=en",
									"host": [
										"{{url}}{{formEndpoint}}"
									],
									"path": [
										"{{formGuid}}"
									],
									"query": [
										{
											"key": "locale",
											"value": "en"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get GUI",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/cms/GetContentGuid?id=56128",
									"host": [
										"{{url}}"
									],
									"path": [
										"cms",
										"GetContentGuid"
									],
									"query": [
										{
											"key": "id",
											"value": "56128"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "2.1 Get multiple form which contains supported elements type in Master language - sv",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();\r",
											"const formlocalizations = \r",
											"{\r",
											"    \"allowAnonymousSubmissionErrorMessage\": \"Du måste vara inloggad för att skicka formuläret. Om du är inloggad och ändå inte kan skicka det, se till att \\\"Do not track\\\" inte är aktiverat i din webbläsares inställningar.\",\r",
											"    \"allowMultipleSubmissionErrorMessage\": \"Du har redan skickat det här formuläret.\",\r",
											"    \"malformstepconfigruationErrorMessage\": \"Felkonstruerade formulärsteg. Vissa steg är kopplade till sidor, andra steg är inte kopplade till sidor eller kopplade till innehåll som saknar publik URL.\"\r",
											"}\r",
											"\r",
											"verifyResponseCode(200);\r",
											"verifyResponseEqual(response.formElements[0].locale, \"sv\");\r",
											"verifyResponseEqual(response.formElements[1].locale, \"sv\");\r",
											"verifyResponseEqual(response.formElements[2].locale, \"sv\");\r",
											"verifyResponseEqual(response.formElements[3].locale, \"sv\");\r",
											"verifyResponseEqual(response.formElements[4].locale, \"sv\");\r",
											"verifyResponseEqual(response.formElements[5].locale, \"sv\");\r",
											"verifyResponseEqual(response.formElements[6].locale, \"sv\");\r",
											"\r",
											"verifyResponseEqual(response.localizations, formlocalizations);\r",
											"verifyResponseEqual(response.locale, \"sv\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}{{formEndpoint}}/{{formGuid}}?locale=sv",
									"host": [
										"{{url}}{{formEndpoint}}"
									],
									"path": [
										"{{formGuid}}"
									],
									"query": [
										{
											"key": "locale",
											"value": "sv"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "2.2 Get multiple form in multiple language - translated language_ nl-BE",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();\r",
											"const formlocalizations = \r",
											"{\r",
											"     \"allowAnonymousSubmissionErrorMessage\": \"U moet ingelogd zijn om dit formulier in te dienen. Als u bent ingelogd en toch niets kunt plaatsen, moet u ervoor zorgen dat \\\"Do Not Track\\\" is uitgeschakeld in uw browserinstellingen.\",\r",
											"    \"allowMultipleSubmissionErrorMessage\": \"U hebt dit formulier al verzonden.\",\r",
											"    \"malformstepconfigruationErrorMessage\": \"Onjuist vormgegeven FormulierStap-configuratie. Sommige stappen zijn verbonden met pagina's en andere stappen niet of ze zijn verbonden aan inhoud zonder openbare URL.\"\r",
											"}\r",
											"\r",
											"verifyResponseCode(200);\r",
											"verifyResponseEqual(response.formElements[0].locale, \"nl-BE\");\r",
											"verifyResponseEqual(response.formElements[1].locale, \"nl-BE\");\r",
											"verifyResponseEqual(response.formElements[2].locale, \"nl-BE\");\r",
											"verifyResponseEqual(response.formElements[3].locale, \"nl-BE\");\r",
											"\r",
											"verifyResponseEqual(response.localizations, formlocalizations);\r",
											"verifyResponseEqual(response.locale, \"nl-BE\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}{{formEndpoint}}/{{formGuid}}?locale=nl-BE",
									"host": [
										"{{url}}{{formEndpoint}}"
									],
									"path": [
										"{{formGuid}}"
									],
									"query": [
										{
											"key": "locale",
											"value": "nl-BE"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "2.3 Invalid - Get multiple form in multiple language - non-existence language - en",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(404);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}{{formEndpoint}}/{{formGuid}}?locale=en",
									"host": [
										"{{url}}{{formEndpoint}}"
									],
									"path": [
										"{{formGuid}}"
									],
									"query": [
										{
											"key": "locale",
											"value": "en"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get GUI",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/cms/GetContentGuid?id=57131",
									"host": [
										"{{url}}"
									],
									"path": [
										"cms",
										"GetContentGuid"
									],
									"query": [
										{
											"key": "id",
											"value": "57131"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "3. Get contains element in a difference language with current language_nl-BE",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();\r",
											"const formlocalizations = \r",
											"{\r",
											"     \"allowAnonymousSubmissionErrorMessage\": \"U moet ingelogd zijn om dit formulier in te dienen. Als u bent ingelogd en toch niets kunt plaatsen, moet u ervoor zorgen dat \\\"Do Not Track\\\" is uitgeschakeld in uw browserinstellingen.\",\r",
											"    \"allowMultipleSubmissionErrorMessage\": \"U hebt dit formulier al verzonden.\",\r",
											"    \"malformstepconfigruationErrorMessage\": \"Onjuist vormgegeven FormulierStap-configuratie. Sommige stappen zijn verbonden met pagina's en andere stappen niet of ze zijn verbonden aan inhoud zonder openbare URL.\"\r",
											"}\r",
											"\r",
											"verifyResponseCode(200);\r",
											"verifyResponseEqual(response.formElements[0].locale, \"nl-BE\");\r",
											"verifyResponseEqual(response.formElements[1].locale, \"nl-BE\");\r",
											"\r",
											"verifyResponseEqual(response.localizations, formlocalizations);\r",
											"verifyResponseEqual(response.locale, \"nl-BE\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}{{formEndpoint}}/{{formGuid}}?locale=nl-BE",
									"host": [
										"{{url}}{{formEndpoint}}"
									],
									"path": [
										"{{formGuid}}"
									],
									"query": [
										{
											"key": "locale",
											"value": "nl-BE"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get GUI form",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/cms/GetContentGuid?id=39903",
									"host": [
										"{{url}}"
									],
									"path": [
										"cms",
										"GetContentGuid"
									],
									"query": [
										{
											"key": "id",
											"value": "39903"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "4.1 Get a form in Master language - en",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"formKey\", pm.response.json().key);\r",
											"\r",
											"pm.collectionVariables.set(\"textboxElement_Key\", pm.response.json().formElements.find(x => x.contentType == 'TextboxElementBlock').key);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{url}}{{formEndpoint}}/{{formGuid}}?locale=en",
									"host": [
										"{{url}}{{formEndpoint}}"
									],
									"path": [
										"{{formGuid}}"
									],
									"query": [
										{
											"key": "locale",
											"value": "en"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "4.2 Get a form in other language - sv",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"verifyResponseCode(500);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{url}}{{formEndpoint}}/{{formGuid}}?locale=sv",
									"host": [
										"{{url}}{{formEndpoint}}"
									],
									"path": [
										"{{formGuid}}"
									],
									"query": [
										{
											"key": "locale",
											"value": "sv"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Url reference",
					"item": [
						{
							"name": "Display page after submission",
							"item": [
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=53962",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "53962"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form - Display on Alloy Plan",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyParamValueContains(responseBody.properties.redirectToPage, \"http://localhost:8000/en/alloy-plan/\");\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=53965",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "53965"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form - Display on a new page",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyParamValueContains(responseBody.properties.redirectToPage, \"http://localhost:8000/en/p1/\");\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=53966",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "53966"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form - Changing display from this page to another page",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyParamValueContains(responseBody.properties.redirectToPage, \"http://localhost:8000/en/p1/\");\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=53967",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "53967"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form - Another non-Master language",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyParamValueContains(responseBody.properties.redirectToPage, \"http://localhost:8000/sv/sv-page/\");\r",
													"verifyParamValueContains(responseBody.locale, \"sv\");\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AFORM-3937 Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=53973",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "53973"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AFORM-3937 Get a form - redirectPare is Start in sv",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyParamValueContains(responseBody.properties.redirectToPage, \"http://localhost:8000/sv/\");\r",
													"verifyParamValueContains(responseBody.locale, \"sv\");\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=53974",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "53974"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get a form - redirectPage language is another language",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyParamValueContains(responseBody.properties.redirectToPage, \"http://localhost:8000/en/alloy-plan/\");\r",
													"verifyParamValueContains(responseBody.locale, \"sv\");\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Display message after form submission",
							"item": [
								{
									"name": "AFORM-3835 Get GUI form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.collectionVariables.set(\"formGuid\", pm.response.text());\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/cms/GetContentGuid?id=53960",
											"host": [
												"{{url}}"
											],
											"path": [
												"cms",
												"GetContentGuid"
											],
											"query": [
												{
													"key": "id",
													"value": "53960"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AFORM-3835 Get a form",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var responseBody =pm.response.json();\r",
													"\r",
													"verifyResponseCode(200);\r",
													"verifyParamValueContains(responseBody.properties.submitSuccessMessage, \"http://localhost:8000/globalassets/alloy-meet/alloymeet.png\");\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{url}}{{formEndpoint}}/{{formGuid}}",
											"host": [
												"{{url}}{{formEndpoint}}"
											],
											"path": [
												"{{formGuid}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.sendRequest({",
					"    url: 'http://localhost:8000/api/episerver/connect/token',",
					"    method: 'POST',",
					"    body: {",
					"        mode: 'urlencoded',",
					"        urlencoded: [",
					"            { key: \"client_id\", value: \"TestClient\" },",
					"            { key: \"grant_type\", value: \"password\" },",
					"            { key: \"username\", value: \"{{userName}}\" },",
					"            { key: \"password\", value: \"{{password}}\" }",
					"        ]",
					"    }",
					"}, function (err, res) {",
					"    if (err === null) {",
					"        pm.collectionVariables.set(\"JwtToken\", res.json().access_token);",
					"    }",
					"});"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"",
					"requestData = {",
					"    getElementValue(field_Key) {  ",
					"        let formData = pm.request.body.formdata.all();",
					"        let field_Name = \"__field_\" +  field_Key;",
					"        for (let i = 0; i < formData.length; i++){",
					"            if(formData[i].key == field_Name){",
					"                return formData[i].value;",
					"            }",
					"        }   ",
					"    }   ",
					"};",
					"",
					"verifyResponseCode = (expectCode) => {",
					"        pm.test(\"Status code: \" + expectCode, () => {",
					"            pm.response.to.have.status(expectCode);",
					"        });",
					"    };",
					"",
					"verifyErrorMessage = (tagName, message) => {",
					"    Assert.IsEqual(\"Verify \" + tagName + \"error message\", message, pm.response.json().errors[tagName]);",
					"};",
					"",
					"verifySuccessSubmitMessage = () => {",
					"    pm.test(\"Submit form successfully \", () => {",
					"        pm.expect(pm.response.json().messages[0].message).to.eql('The form has been submitted successfully.');",
					"    });",
					"};",
					"",
					"verifyErrorMessageContains = (tagName, message) => {",
					"    pm.test(\"Verify \" + tagName + \" error message: \", () => {",
					"        pm.expect(pm.response.json().errors[tagName]).to.include(message);",
					"    });",
					"};",
					"",
					"verifyErrorMessageEqual = (tagName, message) => {",
					"    pm.test(\"Verify \" + tagName + \" error message: \", () => {",
					"        pm.expect(pm.response.json().errors[tagName]).to.eql(message);",
					"    });",
					"};",
					"",
					"verifyFormMessageContains = (message) => {",
					"    pm.test(\"Form error message detail: \" + message, () => {",
					"        pm.expect(pm.response.json().detail).to.include(message);",
					"    });",
					"}",
					"",
					"verifyParamValueContains = (param, message) => {",
					"    pm.test(param + \"contains message : \" + message, () => {",
					"        pm.expect(param).to.include(message);",
					"    });",
					"}",
					"",
					"verifySubstring = (dataName, expectedValue, dataValue) => {",
					"    pm.test(dataName + \" contains string: \" + expectedValue, () => {",
					"        pm.expect(dataValue).to.include(expectedValue);",
					"    });",
					"};",
					"",
					"verifyResponseEqual = (expectedResponse, actualResponse) => {",
					"    pm.test( \"Verify response is correct!\", ()  => {",
					"        pm.expect(actualResponse).to.deep.equal(expectedResponse);",
					"    });",
					"};",
					"",
					"verifyFieldValueEqual = (fieldKey, expectValue) => {",
					"     pm.test( \"Verify field key \" + fieldKey + \":\", ()  => {",
					"        let fieldName = \"__field_\" + fieldKey;",
					"        let actualValue = pm.response.json().submissionData[fieldName];",
					"",
					"        pm.expect(actualValue).to.deep.equal(expectValue);",
					"",
					"        console.log(\"Expected value: \" + expectValue);",
					"        console.log(\"Actual value: \" + actualValue);",
					"    });",
					"};",
					"",
					"verifyFieldValueContains = (fieldKey, expectValue) => {",
					"     pm.test( \"Verify field key \" + fieldKey + \":\", ()  => {",
					"        let fieldName = \"__field_\" + fieldKey;",
					"        let actualValue = pm.response.json().submissionData[fieldName];",
					"",
					"        pm.expect(actualValue).to.deep.include(expectValue);",
					"",
					"        console.log(\"Expected value: \" + expectValue);",
					"        console.log(\"Actual value: \" + actualValue);",
					"    });",
					"};",
					"",
					"Assert = {",
					"    IsEqual : (elementName, expectedValue, actualValue) => {",
					"        if (typeof(expectedValue) == typeof(actualValue)){",
					"            pm.test(elementName + \" should be correct. Expected: \" + expectedValue + \". Actual: \" + actualValue, () => {",
					"                    pm.expect(expectedValue).to.equal(actualValue);",
					"                });",
					"        }",
					"    },",
					"",
					"    IsTrue: (elementName, actualValue) =>  //Assert if actualValue equals true",
					"    {",
					"        pm.test(elementName + \" should be true. Actual: \" + actualValue, () =>",
					"        {",
					"            pm.expect(actualValue).to.be.true;",
					"        });",
					"    }",
					"};",
					"",
					"",
					"",
					"    ",
					"",
					"",
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "http://localhost:8000",
			"type": "string"
		},
		{
			"key": "formEndpoint",
			"value": "/_form/v1/form",
			"type": "string"
		},
		{
			"key": "userName",
			"value": "admin",
			"type": "string"
		},
		{
			"key": "password",
			"value": "devLab08@",
			"type": "string"
		}
	]
}